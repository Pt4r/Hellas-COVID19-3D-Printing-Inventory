{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/_helpers/list-view/list-view.component.html","./src/app/admin/admin.component.html","./src/app/admin/filament/filament.component.html","./src/app/admin/shipments/shipments.component.html","./src/app/admin/users/users.component.html","./src/app/admin/users/view/view.component.html","./src/app/app.component.html","./src/app/home/home.component.html","./src/app/home/profile/profile.component.html","./src/app/login/login.component.html","./src/app/register/register.component.html","./src/app/shipment/shipment.component.html","./node_modules/tslib/tslib.es6.js","./src/app/_helpers/auth.guard.ts","./src/app/_helpers/backend.ts","./src/app/_helpers/error.interceptor.ts","./src/app/_helpers/index.ts","./src/app/_helpers/jwt.interceptor.ts","./src/app/_helpers/list-view/list-view.component.scss","./src/app/_helpers/list-view/list-view.component.ts","./src/app/_helpers/list-view/models/list-view.ts","./src/app/_helpers/list-view/models/query-parameters.ts","./src/app/_helpers/list-view/models/search-event.ts","./src/app/_models/index.ts","./src/app/_models/role.ts","./src/app/_models/shipment.ts","./src/app/_models/user.ts","./src/app/_services/authentication.service.ts","./src/app/_services/index.ts","./src/app/_services/shipment.service.ts","./src/app/_services/user.service.ts","./src/app/admin/admin.component.ts","./src/app/admin/filament/filament.component.ts","./src/app/admin/index.ts","./src/app/admin/shipments/shipments.component.ts","./src/app/admin/users/users.component.ts","./src/app/admin/users/view/view.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/home/home.component.ts","./src/app/home/index.ts","./src/app/home/profile/profile.component.ts","./src/app/login/index.ts","./src/app/login/login.component.ts","./src/app/register/index.ts","./src/app/register/register.component.ts","./src/app/shipment/index.ts","./src/app/shipment/shipment.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,wE;;;;;;;;;;;;ACZA;AAAe,+8BAAg5B,2BAA2B,+WAA+W,oBAAoB,iKAAiK,iSAAiS,kGAAkG,SAAS,sRAAsR,oBAAoB,wJAAwJ,iGAAiG,SAAS,sRAAsR,oBAAoB,8JAA8J,wGAAwG,SAAS,8MAA8M,yBAAyB,2RAA2R,oJAAoJ,oD;;;;;;;;;;;;ACArmH;AAAe,mkEAAogE,gBAAgB,uhC;;;;;;;;;;;;ACAniE;AAAe,6jDAA8/C,gBAAgB,myB;;;;;;;;;;;;ACA7hD;AAAe,+mDAAgjD,gBAAgB,6hC;;;;;;;;;;;;ACA/kD;AAAe,g0D;;;;;;;;;;;;ACAf;AAAe,2HAA4D,gBAAgB,GAAG,eAAe,imBAAimB,gBAAgB,uTAAuT,eAAe,oXAAoX,WAAW,iTAAiT,YAAY,+VAA+V,kBAAkB,icAAic,cAAc,kkEAAkkE,mBAAmB,mcAAmc,wBAAwB,wUAAwU,sBAAsB,sUAAsU,uCAAuC,6YAA6Y,eAAe,iUAAiU,gBAAgB,4M;;;;;;;;;;;;ACAxgN;AAAe,orC;;;;;;;;;;;;ACAf;AAAe,iuBAAkqB,uBAAuB,+qCAA+qC,0BAA0B,wTAAwT,+BAA+B,sTAAsT,6BAA6B,uTAAuT,8CAA8C,gzCAAgzC,gBAAgB,+qB;;;;;;;;;;;;ACAhuI;AAAe,mmBAAoiB,gDAAgD,ooBAAooB,+CAA+C,guBAAguB,4CAA4C,4rBAA4rB,kDAAkD,2yBAA2yB,8CAA8C,kmDAAkmD,mDAAmD,6zCAA6zC,kDAAkD,g3BAAg3B,+CAA+C,upBAAupB,+CAA+C,+7BAA+7B,OAAO,2BAA2B,WAAW,8D;;;;;;;;;;;;ACA9rS;AAAe,+sBAAgpB,+CAA+C,0mBAA0mB,+CAA+C,+8BAA+8B,OAAO,yqB;;;;;;;;;;;;ACA7zE;AAAe,2wBAA4sB,gDAAgD,kqBAAkqB,+CAA+C,yxBAAyxB,4CAA4C,+tBAA+tB,kDAAkD,qvBAAqvB,8CAA8C,q1BAAq1B,mDAAmD,qwEAAqwE,+CAA+C,6qBAA6qB,+CAA+C,44CAA44C,OAAO,mCAAmC,WAAW,+rB;;;;;;;;;;;;ACA9qS;AAAe,ohDAAq9C,+CAA+C,qtBAAqtB,+CAA+C,2xBAA2xB,sDAAsD,yvBAAyvB,kDAAkD,+7BAA+7B,qDAAqD,s8DAAs8D,OAAO,mCAAmC,WAAW,kH;;;;;;;;;;;;ACAl4N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,+DAA+D;AAC/D;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,gBAAgB,sCAAsC,iBAAiB,EAAE;AACnF,yBAAyB,uDAAuD;AAChF;AACA;;AAEO;AACP;AACA,mBAAmB,sBAAsB;AACzC;AACA;;AAEO;AACP;AACA,gDAAgD,OAAO;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA,4DAA4D,cAAc;AAC1E;AACA;AACA;AACA;AACA;;AAEO;AACP;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;;AAEO;AACP,mCAAmC,oCAAoC;AACvE;;AAEO;AACP;AACA;;AAEO;AACP;AACA,mCAAmC,MAAM,6BAA6B,EAAE,YAAY,WAAW,EAAE;AACjG,kCAAkC,MAAM,iCAAiC,EAAE,YAAY,WAAW,EAAE;AACpG,+BAA+B,iEAAiE,uBAAuB,EAAE,4BAA4B;AACrJ;AACA,KAAK;AACL;;AAEO;AACP,aAAa,6BAA6B,0BAA0B,aAAa,EAAE,qBAAqB;AACxG,gBAAgB,qDAAqD,oEAAoE,aAAa,EAAE;AACxJ,sBAAsB,sBAAsB,qBAAqB,GAAG;AACpE;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC,kCAAkC,SAAS;AAC3C,kCAAkC,WAAW,UAAU;AACvD,yCAAyC,cAAc;AACvD;AACA,6GAA6G,OAAO,UAAU;AAC9H,gFAAgF,iBAAiB,OAAO;AACxG,wDAAwD,gBAAgB,QAAQ,OAAO;AACvF,8CAA8C,gBAAgB,gBAAgB,OAAO;AACrF;AACA,iCAAiC;AACjC;AACA;AACA,SAAS,YAAY,aAAa,OAAO,EAAE,UAAU,WAAW;AAChE,mCAAmC,SAAS;AAC5C;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;;AAEO;AACP,4BAA4B,sBAAsB;AAClD;AACA;AACA;;AAEO;AACP,iDAAiD,QAAQ;AACzD,wCAAwC,QAAQ;AAChD,wDAAwD,QAAQ;AAChE;AACA;AACA;;AAEO;AACP;AACA;;AAEO;AACP;AACA;AACA,iBAAiB,sFAAsF,aAAa,EAAE;AACtH,sBAAsB,gCAAgC,qCAAqC,0CAA0C,EAAE,EAAE,GAAG;AAC5I,2BAA2B,MAAM,eAAe,EAAE,YAAY,oBAAoB,EAAE;AACpF,sBAAsB,oGAAoG;AAC1H,6BAA6B,uBAAuB;AACpD,4BAA4B,wBAAwB;AACpD,2BAA2B,yDAAyD;AACpF;;AAEO;AACP;AACA,iBAAiB,4CAA4C,SAAS,EAAE,qDAAqD,aAAa,EAAE;AAC5I,yBAAyB,6BAA6B,oBAAoB,gDAAgD,gBAAgB,EAAE,KAAK;AACjJ;;AAEO;AACP;AACA;AACA,2GAA2G,sFAAsF,aAAa,EAAE;AAChN,sBAAsB,8BAA8B,gDAAgD,uDAAuD,EAAE,EAAE,GAAG;AAClK,4CAA4C,sCAAsC,UAAU,oBAAoB,EAAE,EAAE,UAAU;AAC9H;;AAEO;AACP,gCAAgC,uCAAuC,aAAa,EAAE,EAAE,OAAO,kBAAkB;AACjH;AACA;;AAEO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEO;AACP,4CAA4C;AAC5C;;;;;;;;;;;;;;;;;;;;ACnM2C;AACwD;AAE5C;AAIvD,IAAa,SAAS,GAAtB,MAAa,SAAS;IAClB,YACY,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;IACpD,CAAC;IAEL,WAAW,CAAC,KAA6B,EAAE,KAA0B;QACjE,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAChE,IAAI,WAAW,EAAE;YACb,uCAAuC;YACvC,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;gBACvE,+CAA+C;gBAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAE5B,OAAO,KAAK,CAAC;aAChB;YAED,4BAA4B;YAC5B,OAAO,IAAI,CAAC;SACf;QAED,8DAA8D;QAC9D,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,SAAS,EAAE,KAAK,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QAC5E,OAAO,KAAK,CAAC;IACjB,CAAC;CACJ;;YAxBuB,sDAAM;YACS,mEAAqB;;AAH/C,SAAS;IADrB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;2EAGX,sDAAM;QACS,mEAAqB;GAH/C,SAAS,CA0BrB;AA1BqB;;;;;;;;;;;;;ACPtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoB;AACpB,oBAAoB;AACpB,wBAAwB;AACxB,mBAAmB;AACnB,4HAA4H;AAC5H,oBAAoB;AACpB,wBAAwB;AACxB,uCAAuC;;AAE0D;AACV;AACV;AACkB;AAExF,MAAM,uBAAuB,GAAG,IAAI,4DAAc,CAAS,yBAAyB,CAAC,CAAC;AAwB7F,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAK7B,YAAgC,IAAgB,EAA+C,OAAgB;QAFrG,qBAAgB,GAAmD,SAAS,CAAC;QAGnF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,8DAA8D,CAAC;IACtG,CAAC;IAED,gBAAgB,CAAC,IAAyB,EAAE,IAAyB,EAAE,IAAgC,EAAE,MAAkC;QACvI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACxC,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,SAAS;YAClB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,MAAM,KAAK,SAAS;YACpB,IAAI,IAAI,SAAS,GAAG,kBAAkB,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QAC9D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,uBAAuB,CAAM,SAAS,CAAC,CAAC;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAyC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAChE;aACJ;;gBACG,OAAyC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAC7E,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,uBAAuB,CAAC,QAA0B;QACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC9B,SAAS,GAAG,EAAS,CAAC;oBACtB,KAAK,IAAI,IAAI,IAAI,aAAa;wBAC1B,SAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBACnD;gBACD,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAuB,IAAI,CAAC,CAAC;IACrD,CAAC;IAED,gBAAgB,CAAC,KAA0B;QACvC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,YAAY,CAAC;QACvC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YAC1F,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,uBAAuB,CAAM,SAAS,CAAC,CAAC;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAkC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACzD;aACJ;;gBACG,OAAkC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,uBAAuB,CAAC,QAA0B;QACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC3C,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAgB,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,4BAA4B,CAAC,EAAU;QACnC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,sBAAsB,CAAC;QACjD,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,mCAAmC,CAAC,SAAS,CAAC,CAAC;QAC/D,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,mCAAmC,CAAM,SAAS,CAAC,CAAC;iBACnE;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAoC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAC3D;aACJ;;gBACG,OAAoC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACxE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,mCAAmC,CAAC,QAA0B;QACpE,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC9B,SAAS,GAAG,EAAS,CAAC;oBACtB,KAAK,IAAI,IAAI,IAAI,aAAa;wBAC1B,SAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC9C;gBACD,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAkB,IAAI,CAAC,CAAC;IAChD,CAAC;IAED,iBAAiB,CAAC,EAAU;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QAC5C,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,wBAAwB,CAAM,SAAS,CAAC,CAAC;iBACxD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAkC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACzD;aACJ;;gBACG,OAAkC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACtE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,wBAAwB,CAAC,QAA0B;QACzD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC3C,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAgB,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,gBAAgB,CAAC,EAAU,EAAE,QAAuB;QAChD,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QAC5C,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAE1C,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;aACrC,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,uBAAuB,CAAM,SAAS,CAAC,CAAC;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,uBAAuB,CAAC,QAA0B;QACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,gBAAgB,CAAC,EAAU;QACvB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QAC5C,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YAC5F,OAAO,IAAI,CAAC,uBAAuB,CAAC,SAAS,CAAC,CAAC;QACnD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,uBAAuB,CAAM,SAAS,CAAC,CAAC;iBACvD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,uBAAuB,CAAC,QAA0B;QACxD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,+BAA+B,CAAC,IAAyB,EAAE,IAAyB,EAAE,IAAgC,EAAE,MAAkC;QACtJ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,8BAA8B,CAAC;QACzD,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,SAAS;YAClB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,MAAM,KAAK,SAAS;YACpB,IAAI,IAAI,SAAS,GAAG,kBAAkB,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QAC9D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,sCAAsC,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,sCAAsC,CAAM,SAAS,CAAC,CAAC;iBACtE;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA+C,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACtE;aACJ;;gBACG,OAA+C,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACnF,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,sCAAsC,CAAC,QAA0B;QACvE,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC9B,SAAS,GAAG,EAAS,CAAC;oBACtB,KAAK,IAAI,IAAI,IAAI,aAAa;wBAC1B,SAAU,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBACzD;gBACD,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAA6B,IAAI,CAAC,CAAC;IAC3D,CAAC;IAED,yBAAyB,CAAC,UAA+B,EAAE,QAA8B;QACrF,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,uBAAuB,CAAC;QAClD,IAAI,UAAU,KAAK,IAAI;YACnB,MAAM,IAAI,KAAK,CAAC,4CAA4C,CAAC,CAAC;aAC7D,IAAI,UAAU,KAAK,SAAS;YAC7B,IAAI,IAAI,aAAa,GAAG,kBAAkB,CAAC,EAAE,GAAG,UAAU,CAAC,GAAG,GAAG,CAAC;QACtE,IAAI,QAAQ,KAAK,IAAI;YACjB,MAAM,IAAI,KAAK,CAAC,0CAA0C,CAAC,CAAC;aAC3D,IAAI,QAAQ,KAAK,SAAS;YAC3B,IAAI,IAAI,WAAW,GAAG,kBAAkB,CAAC,EAAE,GAAG,QAAQ,CAAC,GAAG,GAAG,CAAC;QAClE,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,gCAAgC,CAAC,SAAS,CAAC,CAAC;QAC5D,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,gCAAgC,CAAM,SAAS,CAAC,CAAC;iBAChE;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,gCAAgC,CAAC,QAA0B;QACjE,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,kBAAkB,CAAC,KAAwB;QACvC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,qBAAqB,CAAC;QAChD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;gBAClC,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YAC1F,OAAO,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,yBAAyB,CAAM,SAAS,CAAC,CAAC;iBACzD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAmC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAC1D;aACJ;;gBACG,OAAmC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,yBAAyB,CAAC,QAA0B;QAC1D,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC5C,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAiB,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,KAAoB;QAC/B,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QAC5C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;aACrC,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YAC1F,OAAO,IAAI,CAAC,qBAAqB,CAAC,SAAS,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,qBAAqB,CAAM,SAAS,CAAC,CAAC;iBACrD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,qBAAqB,CAAC,QAA0B;QACtD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,YAAY,CAAC,IAAyB,EAAE,IAAyB,EAAE,IAAgC,EAAE,MAAkC;QACnI,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;QACpC,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,SAAS;YAClB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,MAAM,KAAK,SAAS;YACpB,IAAI,IAAI,SAAS,GAAG,kBAAkB,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QAC9D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,mBAAmB,CAAM,SAAS,CAAC,CAAC;iBACnD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAqC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACJ;;gBACG,OAAqC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,mBAAmB,CAAC,QAA0B;QACpD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC9B,SAAS,GAAG,EAAS,CAAC;oBACtB,KAAK,IAAI,IAAI,IAAI,aAAa;wBAC1B,SAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/C;gBACD,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAmB,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,6BAA6B,CAAC,IAAyB,EAAE,IAAyB,EAAE,IAAgC,EAAE,MAAkC;QACpJ,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,kBAAkB,CAAC;QAC7C,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,IAAI;YACb,MAAM,IAAI,KAAK,CAAC,sCAAsC,CAAC,CAAC;aACvD,IAAI,IAAI,KAAK,SAAS;YACvB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,IAAI,KAAK,SAAS;YAClB,IAAI,IAAI,OAAO,GAAG,kBAAkB,CAAC,EAAE,GAAG,IAAI,CAAC,GAAG,GAAG,CAAC;QAC1D,IAAI,MAAM,KAAK,SAAS;YACpB,IAAI,IAAI,SAAS,GAAG,kBAAkB,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,CAAC;QAC9D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,oCAAoC,CAAC,SAAS,CAAC,CAAC;QAChE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,oCAAoC,CAAM,SAAS,CAAC,CAAC;iBACpE;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAqC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAC5D;aACJ;;gBACG,OAAqC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACzE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,oCAAoC,CAAC,QAA0B;QACrE,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,IAAI,KAAK,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;oBAC9B,SAAS,GAAG,EAAS,CAAC;oBACtB,KAAK,IAAI,IAAI,IAAI,aAAa;wBAC1B,SAAU,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;iBAC/C;gBACD,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAmB,IAAI,CAAC,CAAC;IACjD,CAAC;IAED,qBAAqB,CAAC,KAAwB;QAC1C,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,iBAAiB,CAAC;QAC5C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;aACrC,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,4BAA4B,CAAC,SAAS,CAAC,CAAC;QACxD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,4BAA4B,CAAM,SAAS,CAAC,CAAC;iBAC5D;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,4BAA4B,CAAC,QAA0B;QAC7D,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa,CAAC,EAAU;QACpB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACxC,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,QAAQ,EAAE,kBAAkB;aAC/B,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAAS,CAAC,CAAC;QAChD,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,oBAAoB,CAAM,SAAS,CAAC,CAAC;iBACpD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAAmC,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBAC1D;aACJ;;gBACG,OAAmC,uDAAgB,CAAC,SAAS,CAAC,CAAC;QACvE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,oBAAoB,CAAC,QAA0B;QACrD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC5C,OAAO,+CAAa,CAAC,SAAS,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAiB,IAAI,CAAC,CAAC;IAC/C,CAAC;IAED,YAAY,CAAC,EAAU,EAAE,KAAkB;QACvC,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACxC,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAEvC,IAAI,QAAQ,GAAS;YACjB,IAAI,EAAE,QAAQ;YACd,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC;gBACrB,cAAc,EAAE,kBAAkB;aACrC,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YACzF,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,mBAAmB,CAAM,SAAS,CAAC,CAAC;iBACnD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,mBAAmB,CAAC,QAA0B;QACpD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;IAED,YAAY,CAAC,EAAU;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO,GAAG,aAAa,CAAC;QACxC,IAAI,EAAE,KAAK,SAAS,IAAI,EAAE,KAAK,IAAI;YAC/B,MAAM,IAAI,KAAK,CAAC,qCAAqC,CAAC,CAAC;QAC3D,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,kBAAkB,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;QACzD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;QAEjC,IAAI,QAAQ,GAAS;YACjB,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,IAAI,gEAAW,CAAC,EACxB,CAAC;SACL,CAAC;QAEF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,CAAC,SAAe,EAAE,EAAE;YAC5F,OAAO,IAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC;QAC/C,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,iEAAgB,CAAC,CAAC,SAAc,EAAE,EAAE;YACzC,IAAI,SAAS,YAAY,qEAAgB,EAAE;gBACvC,IAAI;oBACA,OAAO,IAAI,CAAC,mBAAmB,CAAM,SAAS,CAAC,CAAC;iBACnD;gBAAC,OAAO,CAAC,EAAE;oBACR,OAA8B,uDAAgB,CAAC,CAAC,CAAC,CAAC;iBACrD;aACJ;;gBACG,OAA8B,uDAAgB,CAAC,SAAS,CAAC,CAAC;QAClE,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;IAES,mBAAmB,CAAC,QAA0B;QACpD,MAAM,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;QAC/B,MAAM,YAAY,GACd,QAAQ,YAAY,iEAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;YAC5C,QAAS,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAO,QAAS,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;QAE9E,IAAI,QAAQ,GAAQ,EAAE,CAAC;QAAC,IAAI,QAAQ,CAAC,OAAO,EAAE;YAAE,KAAK,IAAI,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE;gBAAE,QAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;aAAE;SAAC;QAAA,CAAC;QACzI,IAAI,MAAM,KAAK,GAAG,EAAE;YAChB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,YAAY,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBAC/C,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,IAAI,SAAS,GAAQ,IAAI,CAAC;gBAC1B,IAAI,aAAa,GAAG,aAAa,KAAK,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnG,SAAS,GAAG,cAAc,CAAC,MAAM,CAAC,aAAa,CAAC,CAAC;gBACjD,OAAO,cAAc,CAAC,+BAA+B,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;YACnG,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,EAAE;YACvB,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;YACtC,CAAC,CAAC,CAAC,CAAC;SACP;aAAM,IAAI,MAAM,KAAK,GAAG,IAAI,MAAM,KAAK,GAAG,EAAE;YACzC,OAAO,UAAU,CAAC,YAAY,CAAC,CAAC,IAAI,CAAC,+DAAmB,CAAC,aAAa,CAAC,EAAE;gBACzE,OAAO,cAAc,CAAC,sCAAsC,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;YAC/F,CAAC,CAAC,CAAC,CAAC;SACP;QACD,OAAO,+CAAa,CAAY,IAAI,CAAC,CAAC;IAC1C,CAAC;CACJ;;YAvoCyC,+DAAU,uBAAnC,oDAAM,SAAC,+DAAU;yCAAqB,sDAAQ,YAAI,oDAAM,SAAC,uBAAuB;;AALpF,oBAAoB;IAHhC,gEAAU,CAAC;QACR,UAAU,EAAE,MAAM;KACrB,CAAC;IAMe,6GAAM,CAAC,+DAAU,CAAC,GAAoB,+GAAQ,EAAE,GAAE,6GAAM,CAAC,uBAAuB,CAAC;2EAAxD,+DAAU;GALvC,oBAAoB,CA4oChC;AA5oCgC;AA8oC1B,MAAM,SAAS;IAMlB,YAAY,IAAiB;QACzB,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YAC3G,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;SACjC;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAC7F,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AASM,MAAM,YAAa,SAAQ,SAAS;IAEvC,YAAY,IAAoB;QAC5B,KAAK,CAAC,IAAI,CAAC,CAAC;IAChB,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACtB,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,YAAY,EAAE,CAAC;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAKM,MAAM,aAAa;IAUtB,YAAY,IAAqB;QAC7B,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACrG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;SACrC;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAaM,MAAM,cAAc;IAQvB,YAAY,IAAsB;QAC9B,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;gBACrB,IAAI,CAAC,UAAU,GAAG,EAAS,CAAC;gBAC5B,KAAK,IAAI,GAAG,IAAI,KAAK,CAAC,YAAY,CAAC,EAAE;oBACjC,IAAI,KAAK,CAAC,YAAY,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC;wBACvC,IAAI,CAAC,UAAW,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,CAAC;iBACxD;aACJ;SACJ;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,cAAc,EAAE,CAAC;QAClC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,CAAC;YACxB,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,UAAU,EAAE;gBAC7B,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,GAAG,CAAC;oBACnC,IAAI,CAAC,YAAY,CAAC,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;aACtD;SACJ;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAWM,MAAM,QAAQ;IAYjB,YAAY,IAAgB;QACxB,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACrG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;SAC3E;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAC/D,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAeM,MAAM,IAAI;IAqBb,YAAY,IAAY;QACpB,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YAC9G,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACpD,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACvH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,EAAS,CAAC;gBAC3B,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC;oBAC/B,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;aACnD;SACJ;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,IAAI,EAAE,CAAC;QACxB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAClG,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAC3G,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACvB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS;gBAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAwBM,MAAM,mBAAmB;IAW5B,YAAY,IAA2B;QACnC,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACrG,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QACzF,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAcM,MAAM,mBAAmB;IAa5B,YAAY,IAA2B;QACnC,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC;YACtC,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;YAC9B,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC;YAC9C,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACvH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;SACrC;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,mBAAmB,EAAE,CAAC;QACvC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAC7B,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAC3G,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAgBM,MAAM,SAAS;IAmBlB,YAAY,IAAiB;QACzB,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC,gBAAgB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YAC9G,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,iBAAiB,CAAC,CAAC;YAChD,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAM,SAAS,CAAC;YACvH,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;YACpD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE;gBACnC,IAAI,CAAC,SAAS,GAAG,EAAS,CAAC;gBAC3B,KAAK,IAAI,IAAI,IAAI,KAAK,CAAC,WAAW,CAAC;oBAC/B,IAAI,CAAC,SAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;aACnD;SACJ;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAClG,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,iBAAiB,CAAC,GAAG,IAAI,CAAC,eAAe,CAAC;QAC/C,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC,CAAC,CAAM,SAAS,CAAC;QAC3G,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnD,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE;YAC/B,IAAI,CAAC,WAAW,CAAC,GAAG,EAAE,CAAC;YACvB,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS;gBAC3B,IAAI,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;SAC7C;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAsBM,MAAM,iBAAiB;IAI1B,YAAY,IAAyB;QACjC,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;SACrC;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAOM,MAAM,aAAa;IAYtB,YAAY,IAAqB;QAC7B,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACvD;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,aAAa,EAAE,CAAC;QACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAeM,MAAM,WAAW;IAcpB,YAAY,IAAmB;QAC3B,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC;YAC5B,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC,aAAa,CAAC,CAAC;YACxC,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC;YAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC,cAAc,CAAC,CAAC;YAC1C,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC,mBAAmB,CAAC,CAAC;SACvD;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,WAAW,EAAE,CAAC;QAC/B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACzB,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QACvC,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QAC/B,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACzC,IAAI,CAAC,mBAAmB,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC;QACnD,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AAiBM,MAAM,iBAAiB;IAM1B,YAAY,IAAyB;QACjC,IAAI,IAAI,EAAE;YACN,KAAK,IAAI,QAAQ,IAAI,IAAI,EAAE;gBACvB,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC;oBACvB,IAAK,CAAC,QAAQ,CAAC,GAAS,IAAK,CAAC,QAAQ,CAAC,CAAC;aACrD;SACJ;IACL,CAAC;IAED,IAAI,CAAC,KAAW;QACZ,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;YACpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,UAAU,CAAC,CAAC;YAClC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC,eAAe,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,MAAM,CAAC,MAAM,CAAC,IAAS;QACnB,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,MAAM,GAAG,IAAI,iBAAiB,EAAE,CAAC;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAClB,OAAO,MAAM,CAAC;IAClB,CAAC;IAED,MAAM,CAAC,IAAU;QACb,IAAI,GAAG,OAAO,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC;QAC5C,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QACnC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACjC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC3C,OAAO,IAAI,CAAC;IAChB,CAAC;CACJ;AASM,MAAM,gBAAiB,SAAQ,KAAK;IAOvC,YAAY,OAAe,EAAE,MAAc,EAAE,QAAgB,EAAE,OAAgC,EAAE,MAAW;QACxG,KAAK,EAAE,CAAC;QASF,uBAAkB,GAAG,IAAI,CAAC;QAPhC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACzB,CAAC;IAID,MAAM,CAAC,kBAAkB,CAAC,GAAQ;QAC9B,OAAO,GAAG,CAAC,kBAAkB,KAAK,IAAI,CAAC;IAC3C,CAAC;CACJ;AAED,SAAS,cAAc,CAAC,OAAe,EAAE,MAAc,EAAE,QAAgB,EAAE,OAAgC,EAAE,MAAY;IACrH,IAAI,MAAM,KAAK,IAAI,IAAI,MAAM,KAAK,SAAS;QACvC,OAAO,uDAAgB,CAAC,MAAM,CAAC,CAAC;;QAEhC,OAAO,uDAAgB,CAAC,IAAI,gBAAgB,CAAC,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC;AAChG,CAAC;AAED,SAAS,UAAU,CAAC,IAAS;IACzB,OAAO,IAAI,+CAAU,CAAS,CAAC,QAAa,EAAE,EAAE;QAC5C,IAAI,CAAC,IAAI,EAAE;YACP,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClB,QAAQ,CAAC,QAAQ,EAAE,CAAC;SACvB;aAAM;YACH,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAC9B,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE;gBACpB,QAAQ,CAAC,IAAI,CAAO,KAAK,CAAC,MAAO,CAAC,MAAM,CAAC,CAAC;gBAC1C,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACxB,CAAC,CAAC;YACF,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;SAC3B;IACL,CAAC,CAAC,CAAC;AACP,CAAC;;;;;;;;;;;;;;;;;;;;;ACxlE0C;AAEG;AACF;AAEW;AAGvD,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IACzB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,iEAAU,CAAC,GAAG,CAAC,EAAE;YAC9C,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;gBACvC,8EAA8E;gBAC9E,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;gBACpC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACzB;YAED,MAAM,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,OAAO,IAAI,GAAG,CAAC,UAAU,CAAC;YAClD,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YAd8C,mEAAqB;;AADvD,gBAAgB;IAD5B,gEAAU,EAAE;2EAEkC,mEAAqB;GADvD,gBAAgB,CAe5B;AAf4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACH;AACU;AACF;;;;;;;;;;;;;;;;;;;;ACHS;AAIa;AACD;AAGvD,IAAa,cAAc,GAA3B,MAAa,cAAc;IACvB,YAAoB,qBAA4C;QAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;IAAI,CAAC;IAErE,SAAS,CAAC,OAAyB,EAAE,IAAiB;QAClD,0EAA0E;QAC1E,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;QAChE,MAAM,UAAU,GAAG,WAAW,IAAI,WAAW,CAAC,KAAK,CAAC;QACpD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,qEAAW,CAAC,MAAM,CAAC,CAAC;QAC5D,IAAI,UAAU,IAAI,QAAQ,EAAE;YACxB,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;gBACpB,UAAU,EAAE;oBACR,aAAa,EAAE,UAAU,WAAW,CAAC,KAAK,EAAE;iBAC/C;aACJ,CAAC,CAAC;SACN;QAED,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;CACJ;;YAjB8C,mEAAqB;;AADvD,cAAc;IAD1B,gEAAU,EAAE;2EAEkC,mEAAqB;GADvD,cAAc,CAkB1B;AAlB0B;;;;;;;;;;;;;ACR3B;AAAe,yEAAU,iBAAiB,sBAAsB,oBAAoB,mBAAmB,4BAA4B,gBAAgB,iBAAiB,qCAAqC,GAAG,0CAA0C,qBAAqB,uBAAuB,KAAK,sBAAsB,oBAAoB,KAAK,GAAG,0CAA0C,qBAAqB,oBAAoB,KAAK,sBAAsB,uBAAuB,KAAK,GAAG,6CAA6C,ulE;;;;;;;;;;;;;;;;;;;;;;;ACAxb;AAC1B;AAEhC;AACgD;AACpB;AACD;AACR;AAOpD,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,0DAAQ;IAG3C,YAAoB,KAAqB,EAAU,MAAc;QAC7D,KAAK,EAAE,CAAC;QADQ,UAAK,GAAL,KAAK,CAAgB;QAAU,WAAM,GAAN,MAAM,CAAQ;IAEjE,CAAC;IAEM,QAAQ;QACX,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,MAAc,EAAE,EAAE;YAC/E,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;YAC9B,IAAI,CAAC,QAAQ,EAAE,CAAC;QACpB,CAAC,CAAC,CAAC;QACH,sDAAS,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CACpD,0DAAG,CAAC,CAAC,KAAU,EAAE,EAAE;YACf,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,mBAAmB;QAClD,CAAC,CAAC,EACF,6DAAM,CAAC,UAAU,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,uBAAuB,IAAI,UAAU,CAAC,MAAM,KAAK,CAAC,CAAC,EAAE,oEAAoE;QACxK,mEAAY,CAAC,IAAI,CAAC,EAAE,2CAA2C;QAC/D,2EAAoB,EAAE,CAAC,+CAA+C;SACzE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,SAAS,EAAE,CAAC;QACrB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACjE,CAAC;IAEM,WAAW;QACd,IAAI,IAAI,CAAC,uBAAuB,EAAE;YAC9B,IAAI,CAAC,uBAAuB,CAAC,WAAW,EAAE,CAAC;SAC9C;IACL,CAAC;IAEM,OAAO,CAAC,KAAyE;QACpF,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAEM,OAAO,CAAC,KAAU;QACrB,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC;QAC3B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,GAAG,KAAK,KAAK,CAAC,CAAC,CAAC,+DAAa,CAAC,GAAG,CAAC,CAAC,CAAC,+DAAa,CAAC,IAAI,CAAC;QACjF,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAEO,SAAS;QACb,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,EAAE;YAC9B,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;SAC/B;QACD,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAChC,CAAC;IAEO,gBAAgB,CAAC,MAAc;QACnC,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC,MAAM,CAAC,wEAAe,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACjD,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM,CAAC,wEAAe,CAAC,SAAS,CAAC,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC;QACtG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,wEAAe,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC;QAC1F,IAAI,CAAC,aAAa,GAAG,CAAC,MAAM,CAAC,wEAAe,CAAC,cAAc,CAAC,IAAI,IAAI,CAAC,oBAAoB,IAAI,SAAS,CAAkB,CAAC;QACzH,IAAI,IAAI,CAAC,SAAS,EAAE;YAChB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAC5D,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,EAAE,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,IAAI,KAAK,EAAE,CAAC,CAAC;SACvG;QACD,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,wEAAe,CAAC,WAAW,CAAC,IAAI,SAAS,CAAC;IACvE,CAAC;IAEO,oBAAoB;QACxB,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,MAAM,CAAC,wEAAe,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC;QACzC,MAAM,CAAC,wEAAe,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,kBAAkB,CAAC;QAChF,MAAM,CAAC,wEAAe,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,gBAAgB,IAAI,SAAS,CAAC;QAC1F,MAAM,CAAC,wEAAe,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QAC5D,MAAM,CAAC,wEAAe,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACtD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,EAAE,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,CAAC,CAAC;IAC9E,CAAC;IAEO,QAAQ;QACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,gEAAW,CAC5B,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,WAAW,EAChB,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,KAAK,+DAAa,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,SAAS,EACvG,IAAI,CAAC,UAAU,IAAI,SAAS,CAC/B,CAAC,CAAC;IACP,CAAC;IAEO,aAAa,CAAC,MAAW;QAC7B,OAAO,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,MAAM,KAAK,CAAC,IAAI,MAAM,CAAC,WAAW,KAAK,MAAM,CAAC;IAChF,CAAC;CACJ;;YAnF8B,8DAAc;YAAkB,sDAAM;;AAFrB;IAA3C,+DAAS,CAAC,aAAa,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAuB,wDAAU;uDAAC;AADpE,iBAAiB;IAL7B,+DAAS,CAAC;QACP,QAAQ,EAAE,eAAe;QACzB,wOAAyC;;KAE5C,CAAC;2EAI6B,8DAAc,EAAkB,sDAAM;GAHxD,iBAAiB,CAsF7B;AAtF6B;;;;;;;;;;;;;;;;;;;;ACdsD;AAEV;AAInE,MAAM,QAAQ;IAArB;QASwB,WAAM,GAA8B,IAAI,0DAAY,EAAE,CAAC;QAO3D,cAAS,GAAG,KAAK,CAAC;QAClB,eAAU,GAAG,KAAK,CAAC;QACnB,cAAS,GAAG,KAAK,CAAC;QAG3B,4BAAuB,GAAG,CAAC,CAAC;QAGzB,SAAI,GAAG,CAAC,CAAC;QACT,uBAAkB,GAAG,EAAE,CAAC;IAGtC,CAAC;CAAA;AA1B6C;IAAzC,+DAAS,CAAC,WAAW,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAsB,0EAAkB;2CAAC;AACpC;IAA7C,+DAAS,CAAC,eAAe,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAuB,yDAAW;+CAAc;AACzC;IAAnD,+DAAS,CAAC,qBAAqB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA6B,yDAAW;qDAAc;AACxD;IAAhD,+DAAS,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA0B,yDAAW;kDAAc;AACtD;IAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAsB,yDAAW;8CAAc;AAC3C;IAA/C,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAyB,yDAAW;iDAAc;AAChD;IAAhD,+DAAS,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA0B,yDAAW;kDAAc;AACzF;IAAT,4DAAM,EAAE;oEAAmB,0DAAY;wCAAmC;AAClE;IAAR,2DAAK,EAAE;;sCAAoB;AACnB;IAAR,2DAAK,EAAE;;6CAA4B;AAC3B;IAAR,2DAAK,EAAE;;yCAA+B;AAC9B;IAAR,2DAAK,EAAE;;uCAAsB;AACrB;IAAR,2DAAK,EAAE;;kDAAkC;AACjC;IAAR,2DAAK,EAAE;;sDAA6C;AAC5C;IAAR,2DAAK,EAAE;;2CAA0B;AACzB;IAAR,2DAAK,EAAE;;4CAA2B;AAC1B;IAAR,2DAAK,EAAE;;2CAA0B;AACzB;IAAR,2DAAK,EAAE;;8CAA6B;AAC5B;IAAR,2DAAK,EAAE;;4CAAmB;AAU/B,IAAY,aAGX;AAHD,WAAY,aAAa;IACrB,4BAAW;IACX,8BAAa;AACjB,CAAC,EAHW,aAAa,KAAb,aAAa,QAGxB;;;;;;;;;;;;;;;;;ACvCD,yCAAyC;AAClC,IAAU,eAAe,CAM/B;AAND,WAAiB,eAAe;IACf,yBAAS,GAAG,MAAM,CAAC;IACnB,oBAAI,GAAG,MAAM,CAAC;IACd,2BAAW,GAAG,OAAO,CAAC;IACtB,0BAAU,GAAG,MAAM,CAAC;IACpB,8BAAc,GAAG,KAAK,CAAC;AACxC,CAAC,EANgB,eAAe,KAAf,eAAe,QAM/B;;;;;;;;;;;;;;;;;ACPM,MAAM,WAAW;IACpB,YAAmB,IAAY,EAAS,QAAgB,EAAS,SAAkB,EAAS,UAAmB;QAA5F,SAAI,GAAJ,IAAI,CAAQ;QAAS,aAAQ,GAAR,QAAQ,CAAQ;QAAS,cAAS,GAAT,SAAS,CAAS;QAAS,eAAU,GAAV,UAAU,CAAS;IAAI,CAAC;CACvH;;;;;;;;;;;;;;;;;;;;;;;;;ACFsB;AACA;AACI;;;;;;;;;;;;;;;;;ACF3B,IAAY,IAGX;AAHD,WAAY,IAAI;IACZ,qBAAa;IACb,uBAAe;AACnB,CAAC,EAHW,IAAI,KAAJ,IAAI,QAGf;;;;;;;;;;;;;;;;;ACHM,MAAM,QAAQ;CAUpB;;;;;;;;;;;;;;;;;ACVM,MAAM,IAAI;CAkBhB;;;;;;;;;;;;;;;;;;;;;AClBsH;AAC5E;AACQ;AACd;AAGrC,IAAa,qBAAqB,GAAlC,MAAa,qBAAqB;IAI9B,YAAoB,UAAgC;QAAhC,eAAU,GAAV,UAAU,CAAsB;QAChD,IAAI,CAAC,kBAAkB,GAAG,IAAI,oDAAe,CAAY,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;QAC1G,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;IAC9D,CAAC;IAED,IAAW,gBAAgB;QACvB,OAAO,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IACzC,CAAC;IAED,KAAK,CAAC,KAAwB;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,kBAAkB,CAAC,KAAK,CAAC;aAC3C,IAAI,CAAC,0DAAG,CAAC,IAAI,CAAC,EAAE;YACb,0DAA0D;YAC1D,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;gBACpB,kGAAkG;gBAClG,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1D,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aACtC;YACD,OAAO,IAAI,CAAC;QAChB,CAAC,CAAC,CAAC,CAAC;IACZ,CAAC;IAED,MAAM;QACF,iDAAiD;QACjD,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACvC,CAAC;IAED,QAAQ,CAAC,KAAoB;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;IACtE,CAAC;CAEJ;;YAhCmC,qEAAoB;;AAJ3C,qBAAqB;IADjC,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;2EAKC,qEAAoB;GAJ3C,qBAAqB,CAoCjC;AApCiC;;;;;;;;;;;;;;;;;;;;;;;;;ACNO;AACV;AACI;;;;;;;;;;;;;;;;;;;;;ACFU;AAEQ;AACV;AACD;AAEM;AAIhD,IAAa,eAAe,GAA5B,MAAa,eAAe;IAIxB,YACY,UAAgC,EAChC,sBAA6C,EAC7C,eAA4B;QAF5B,eAAU,GAAV,UAAU,CAAsB;QAChC,2BAAsB,GAAtB,sBAAsB,CAAuB;QAC7C,oBAAe,GAAf,eAAe,CAAa;IACpC,CAAC;IAEL,MAAM,CAAC,KAAkB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IAC3G,CAAC;IAED,OAAO,CAAC,EAAU;QACd,IAAI,CAAC,IAAI,CAAC,SAAS,IAAI,EAAE,KAAK,IAAI,EAAE;YAChC,IAAI,CAAC,SAAS,GAAG,IAAI,iDAAY,EAAY,CAAC;YAC9C,IAAI,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAkB,EAAE,EAAE;gBACnE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC9B,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC;YAC9B,CAAC,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED,kBAAkB,CAAC,EAAU;QACzB,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,EAAE,KAAK,IAAI,EAAE;YACjC,IAAI,CAAC,UAAU,GAAG,IAAI,iDAAY,EAAc,CAAC;YACjD,IAAI,CAAC,UAAU,CAAC,4BAA4B,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,QAAoB,EAAE,EAAE;gBAChF,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC/B,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC;YAC/B,CAAC,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,cAAc,CAAC,QAA6B;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;IACtD,CAAC;IAED,qBAAqB,CAAC,KAAkB;QACpC,OAAO,IAAI,CAAC,UAAU,CAAC,+BAA+B,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IAC1H,CAAC;IAED,eAAe,CAAC,SAAiB,EAAE,QAAiB;QAChD,OAAO,IAAI,CAAC,UAAU,CAAC,yBAAyB,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;IAC1E,CAAC;CACJ;;YA1C2B,iEAAoB;YACR,mEAAqB;YAC5B,yDAAW;;AAP/B,eAAe;IAD3B,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;2EAMP,iEAAoB;QACR,mEAAqB;QAC5B,yDAAW;GAP/B,eAAe,CA+C3B;AA/C2B;;;;;;;;;;;;;;;;;;;;ACTuG;AACxF;AACK;AAIhD,IAAa,WAAW,GAAxB,MAAa,WAAW;IAGpB,YAAoB,UAAgC;QAAhC,eAAU,GAAV,UAAU,CAAsB;IAAI,CAAC;IAEzD,MAAM,CAAC,KAAkB;QACrB,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IACvG,CAAC;IAED,uBAAuB,CAAC,KAAkB;QACtC,OAAO,IAAI,CAAC,UAAU,CAAC,6BAA6B,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,UAAU,CAAC,CAAC;IACxH,CAAC;IAED,OAAO,CAAC,EAAU;QACd,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,EAAE,KAAK,IAAI,EAAE;YAC7B,IAAI,CAAC,MAAM,GAAG,IAAI,iDAAY,EAAQ,CAAC;YACvC,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;gBACvD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC;YAC3B,CAAC,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,MAAc,EAAE,KAAkB;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE,CAAC,KAAK,CAAC,CAAC;IAC9E,CAAC;IAED,eAAe,CAAC,IAAuB;QACnC,OAAO,IAAI,CAAC,UAAU,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;IACvD,CAAC;CACJ;;YA5BmC,qEAAoB;;AAH3C,WAAW;IADvB,gEAAU,CAAC,EAAE,UAAU,EAAE,MAAM,EAAE,CAAC;2EAIC,qEAAoB;GAH3C,WAAW,CA+BvB;AA/BuB;;;;;;;;;;;;;;;;;;;;ACNkD;AACnC;AAG8C;AAKrF,IAAa,cAAc,GAA3B,MAAa,cAAc;IASvB,YACY,WAAwB,EACxB,eAAgC,EAChC,qBAA4C;QAF5C,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,0BAAqB,GAArB,qBAAqB,CAAuB;QATxD,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QACxB,iBAAY,GAA0B,IAAI,KAAK,EAAuB,CAAC;QACvE,YAAO,GAAkB,EAAE,CAAC;IAQ5B,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG;YACX,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACpH,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACjH,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC5H,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACtH,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC7H;gBACI,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI;gBAC3G,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,IAAI,CAAC,aAAa;aACtD;YACD;gBACI,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBAC7G,YAAY,EAAE,IAAI,CAAC,iBAAiB;aACvC;SACJ,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;IACjE,CAAC;IAED,qBAAqB,CAAC,KAAkB;QACpC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAA4B,EAAE,EAAE;YACvG,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC9B,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,GAAG;QACV,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACtE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC3C,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YA1C4B,yDAAW;YACP,6DAAe;YACT,mEAAqB;;AAXP;IAAhD,+DAAS,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA4B,yDAAW;yDAAc;AACxD;IAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAwB,yDAAW;qDAAc;AAFpF,cAAc;IAD1B,+DAAS,CAAC,EAAE,mNAAmC,EAAE,CAAC;2EAWtB,yDAAW;QACP,6DAAe;QACT,mEAAqB;GAZ/C,cAAc,CAoD1B;AApD0B;;;;;;;;;;;;;;;;;;;;;ACVkC;AACa;AAG7B;AAEN;AAMvC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAU5B,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QARlC,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QACxB,UAAK,GAAW,IAAI,KAAK,EAAQ,CAAC;QAClC,YAAO,GAAkB,EAAE,CAAC;QAEpB,aAAQ,GAAsB,IAAI,kEAAiB,EAAE,CAAC;IAI1D,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACnH,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACjH,EAAE,IAAI,EAAE,cAAc,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACzH;gBACE,IAAI,EAAE,mBAAmB,EAAE,IAAI,EAAE,qBAAqB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBAChI,YAAY,EAAE,IAAI,CAAC,aAAa;aACjC;YACD,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC/H;gBACE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBACtG,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,EAAE,2BAA2B;aAC5E;SACF,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,KAAkB;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACxF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,CAAC,GAAS;QACpB,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC;QAC1B,IAAI,CAAC,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;QACxC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,GAAG,CAAC,QAAQ,CAAC;QACtC,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,GAAG,CAAC,aAAa,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YAC7D,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAzCwB,yDAAW;;AAVc;IAA/C,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA2B,yDAAW;2DAAc;AACtD;IAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAwB,yDAAW;wDAAc;AAFlF,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,kOAAwC;KACzC,CAAC;2EAYuB,yDAAW;GAXvB,iBAAiB,CAoD7B;AApD6B;;;;;;;;;;;;;;;;;;;ACZI;;;;;;;;;;;;;;;;;;;;ACCwC;AAIW;AAC9C;AAMvC,IAAa,kBAAkB,GAA/B,MAAa,kBAAkB;IAS7B,YACU,WAAwB,EACxB,eAAgC,EAChC,qBAA4C;QAF5C,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,0BAAqB,GAArB,qBAAqB,CAAuB;QATtD,YAAO,GAAG,KAAK,CAAC;QAChB,oBAAe,GAAG,KAAK,CAAC;QACxB,qBAAgB,GAAoB,IAAI,KAAK,EAAiB,CAAC;QAC/D,YAAO,GAAkB,EAAE,CAAC;IAQ5B,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACnH,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACxH,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC3H;gBACE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBAC9G,YAAY,EAAE,IAAI,CAAC,aAAa;aACjC;YACD,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACvH;gBACE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBAC7G,YAAY,EAAE,IAAI,CAAC,iBAAiB;aACrC;SACF,CAAC;QAEF,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;IAC7D,CAAC;IAED,qBAAqB,CAAC,KAAkB;QACtC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAsB,EAAE,EAAE;YACpF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,UAAU,CAAC,GAAG;QACZ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;YACxE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;YAC7B,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACzC,CAAC,CAAC,CAAC;IACL,CAAC;CACF;;YAzCwB,yDAAW;YACP,6DAAe;YACT,mEAAqB;;AAXL;IAAhD,+DAAS,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA4B,yDAAW;6DAAc;AACxD;IAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAwB,yDAAW;yDAAc;AAFlF,kBAAkB;IAJ9B,+DAAS,CAAC;QACT,QAAQ,EAAE,eAAe;QACzB,qOAAyC;KAC1C,CAAC;2EAWuB,yDAAW;QACP,6DAAe;QACT,mEAAqB;GAZ3C,kBAAkB,CAmD9B;AAnD8B;;;;;;;;;;;;;;;;;;;;ACZQ;AACmC;AAG7B;AAO7C,IAAa,cAAc,GAA3B,MAAa,cAAc;IAMzB,YACU,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QALlC,YAAO,GAAG,KAAK,CAAC;QAChB,UAAK,GAAW,IAAI,KAAK,EAAQ,CAAC;QAClC,YAAO,GAAkB,EAAE,CAAC;IAIxB,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;QAEnD,IAAI,CAAC,OAAO,GAAG;YACb,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,YAAY,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACnH,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACjH,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAChH,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACxG;gBACE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBACtG,YAAY,EAAE,IAAI,CAAC,gBAAgB,EAAE,SAAS,EAAE,2BAA2B;aAC5E;SACF,CAAC;IACJ,CAAC;IAED,QAAQ,CAAC,KAAkB;QACzB,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YACvE,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YA5BwB,yDAAW;;AANc;IAA/C,+DAAS,CAAC,iBAAiB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA2B,yDAAW;wDAAc;AADxF,cAAc;IAJ1B,+DAAS,CAAC;QACT,QAAQ,EAAE,WAAW;QACrB,yNAAqC;KACtC,CAAC;2EAQuB,yDAAW;GAPvB,cAAc,CAmC1B;AAnC0B;;;;;;;;;;;;;;;;;;;;;ACVS;AACS;AACK;AACD;AAMjD,IAAa,aAAa,GAA1B,MAAa,aAAa;IAGxB,YAAoB,MAAsB,EAAU,YAAyB;QAAzD,WAAM,GAAN,MAAM,CAAgB;QAAU,iBAAY,GAAZ,YAAY,CAAa;QAFtE,SAAI,GAAS,IAAI,gDAAI,EAAE,CAAC;IAEkD,CAAC;IAElF,QAAQ;QACN,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,cAAc,GAAG,IAAI,IAAI,EAAE,CAAC;QACtC,IAAI,CAAC,IAAI,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;QACzC,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC/B,IAAI,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAE/B,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YACzD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;CAEF;;YAd6B,8DAAc;YAAwB,yDAAW;;AAHlE,aAAa;IAJzB,+DAAS,CAAC;QACT,QAAQ,EAAE,UAAU;QACpB,4NAAoC;KACrC,CAAC;2EAI4B,8DAAc,EAAwB,yDAAW;GAHlE,aAAa,CAiBzB;AAjByB;;;;;;;;;;;;;;;;;;;;;ACTgB;AACD;AAEW;AACb;AAGvC,IAAa,YAAY,GAAzB,MAAa,YAAY;IAGrB,YACY,MAAc,EACd,qBAA4C;QAD5C,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAEpD,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,IAAI,OAAO;QACP,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,4CAAI,CAAC,KAA0B,CAAC;IACzF,CAAC;IAED,MAAM;QACF,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;QACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACrC,CAAC;CACJ;;YAduB,sDAAM;YACS,+DAAqB;;AAL/C,YAAY;IADxB,+DAAS,CAAC,EAAE,QAAQ,EAAE,KAAK,EAAE,yMAAiC,EAAE,CAAC;2EAK1C,sDAAM;QACS,+DAAqB;GAL/C,YAAY,CAkBxB;AAlBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRsB;AAC8B;AACpC;AACiB;AACQ;AACS;AAE5B;AACE;AACY;AACC;AACO;AAE9B;AACE;AACA;AACM;AACA;AACgB;AACG;AACS;AACH;AACJ;AAoCpE,IAAa,SAAS,GAAtB,MAAa,SAAS;CAAI;AAAb,SAAS;IAhCrB,8DAAQ,CAAC;QACN,OAAO,EAAE;YACL,uEAAa;YACb,kEAAmB;YACnB,4DAAY;YACZ,qEAAgB;YAChB,6DAAgB;YAChB,0DAAW;YACX,mFAA0B;YAC1B,0EAAkB;SACrB;QACD,YAAY,EAAE;YACV,2DAAY;YACZ,oDAAa;YACb,sDAAc;YACd,sDAAc;YACd,4DAAiB;YACjB,4DAAiB;YACjB,wFAAiB;YACjB,4EAAc;YACd,+EAAa;YACb,wFAAkB;YAClB,qFAAiB;YACjB,iFAAgB;SACnB;QACD,SAAS,EAAE;YACP,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,wDAAc,EAAE,KAAK,EAAE,IAAI,EAAE;YACrE,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,0DAAgB,EAAE,KAAK,EAAE,IAAI,EAAE;SAC1E;QACD,SAAS,EAAE,CAAC,2DAAY,CAAC;KAC5B,CAAC;GAEW,SAAS,CAAI;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1D8C;AACI;AACG;AACT;AACH;AACG;AACA;AACX;AAEhB;AACE;AACA;AACS;AACjB;AAEjC,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,mDAAa;QACxB,WAAW,EAAE,CAAC,8DAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,SAAS;QACf,SAAS,EAAE,gFAAgB;QAC3B,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,IAAI,CAAC,EAAE;KAC/B;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,sDAAc;QACzB,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,KAAK,CAAC,EAAE;KAChC;IACD;QACI,IAAI,EAAE,aAAa;QACnB,SAAS,EAAE,2EAAc;QACzB,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,KAAK,CAAC,EAAE;KAChC;IACD;QACI,IAAI,EAAE,gBAAgB;QACtB,SAAS,EAAE,oFAAiB;QAC5B,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,KAAK,CAAC,EAAE;KAChC;IACD;QACI,IAAI,EAAE,iBAAiB;QACvB,SAAS,EAAE,uFAAkB;QAC7B,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,KAAK,CAAC,EAAE;KAChC;IACD;QACI,IAAI,EAAE,sBAAsB;QAC5B,SAAS,EAAE,8EAAa;QACxB,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,KAAK,CAAC,EAAE;KAChC;IACD;QACI,IAAI,EAAE,OAAO;QACb,SAAS,EAAE,sDAAc;KAC5B;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,8EAAiB;KAC/B;IACD;QACI,IAAI,EAAE,WAAW;QACjB,SAAS,EAAE,8EAAiB;QAC5B,WAAW,EAAE,CAAC,8DAAS,CAAC;QACxB,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,6CAAI,CAAC,IAAI,CAAC,EAAE;KAC/B;IAED,6BAA6B;IAC7B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CACjC,CAAC;AAEK,MAAM,gBAAgB,GAAG,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;AC5ED;AACc;AACnC;AAG8C;AAIrF,IAAa,aAAa,GAA1B,MAAa,aAAa;IAQtB,YACY,WAAwB,EACxB,eAAgC,EAChC,qBAA4C;QAF5C,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,0BAAqB,GAArB,qBAAqB,CAAuB;QARxD,YAAO,GAAG,KAAK,CAAC;QAChB,gBAAW,GAAc,IAAI,0DAAS,EAAE,CAAC;QACzC,cAAS,GAAe,IAAI,KAAK,EAAY,CAAC;QAC9C,YAAO,GAAkB,EAAE,CAAC;QAOxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC;IACnE,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,OAAO,GAAG;YACX,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC1G,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YAC9H,EAAE,IAAI,EAAE,iBAAiB,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE;YACtH;gBACI,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBACnH,YAAY,EAAE,IAAI,CAAC,aAAa;aACnC;YACD;gBACI,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,KAAK,EAAE,aAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK;gBAC3G,YAAY,EAAE,IAAI,CAAC,iBAAiB;aACvC;SACJ,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,WAAW,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,IAAI,EAAE,CAAC;IACpD,CAAC;IAED,YAAY;QACR,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,4DAAK,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAe,EAAE,EAAE;YACtF,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,kBAAkB,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,SAAqB,EAAE,EAAE;YAC7F,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC/B,CAAC,CAAC,CAAC;IACP,CAAC;CACJ;;YApC4B,yDAAW;YACP,6DAAe;YACT,mEAAqB;;AAVP;IAAhD,+DAAS,CAAC,kBAAkB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAA4B,yDAAW;wDAAc;AACxD;IAA5C,+DAAS,CAAC,cAAc,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;oEAAwB,yDAAW;oDAAc;AAFpF,aAAa;IADzB,+DAAS,CAAC,EAAE,gNAAkC,EAAE,CAAC;2EAUrB,yDAAW;QACP,6DAAe;QACT,mEAAqB;GAX/C,aAAa,CA6CzB;AA7CyB;;;;;;;;;;;;;;;;;;;ACTO;;;;;;;;;;;;;;;;;;;;;;;;ACAW;AACsB;AAChB;AACoC;AAC7B;AACW;AAC7B;AAMvC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAU3B,YACU,YAAyB,EACzB,MAAsB,EACtB,OAAe,EACf,sBAA6C,EAC7C,YAAyB;QAJzB,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,2BAAsB,GAAtB,sBAAsB,CAAuB;QAC7C,iBAAY,GAAZ,YAAY,CAAa;QAbnC,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACf,SAAI,GAAS,IAAI,iDAAI,EAAE,CAAC;QACxB,gBAAW,GAAG,IAAI,4DAAW,EAAE,CAAC;IAQ5B,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACtC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC,CAAC;YACH,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,iBAAiB,EAAE,CAAC,CAAC,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACnC,yDAAU,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC,CAAC;YAC1E,WAAW,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC;SAC5F,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;QAEtE,mBAAmB;QACnB,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,IAAU,EAAE,EAAE;YAClG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YAC1C,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YACxC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;YAC9C,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAClC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACtC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrD,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;YAC1D,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,QAAQ,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;YAClD,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE5C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QACpD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,WAAW,CAAC,iBAAiB,GAAG,IAAI,CAAC,CAAC,CAAC,iBAAiB,CAAC,KAAK,CAAC;QACpE,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAClD,+BAA+B;QAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;YAC3B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAElD,MAAM,aAAa,GAAqB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;gBACxE,IAAI,aAAa,IAAI,IAAI,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAC5C,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,kBAAkB,GAAG,QAAQ,GAAG,IAAI,CAAC;oBAC9D,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QAEpB,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC;aACxF,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1C,CAAC,EACD,CAAC,KAAK,EAAE,EAAE;YACR,IAAI,KAAK,KAAK,aAAa,EAAE;gBAC3B,IAAI,CAAC,KAAK,GAAG,oBAAoB,CAAC;aACnC;iBAAM;gBACL,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACpB;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;;YAjGyB,0DAAW;YACjB,8DAAc;YACb,sDAAM;YACS,mEAAqB;YAC/B,yDAAW;;AAfxB,gBAAgB;IAJ5B,+DAAS,CAAC;QACT,QAAQ,EAAE,aAAa;QACvB,8NAAuC;KACxC,CAAC;2EAYwB,0DAAW;QACjB,8DAAc;QACb,sDAAM;QACS,mEAAqB;QAC/B,yDAAW;GAfxB,gBAAgB,CA4G5B;AA5G4B;;;;;;;;;;;;;;;;;;;ACZK;;;;;;;;;;;;;;;;;;;;;;;;ACCwB;AAChB;AACQ;AACO;AACW;AAC7B;AAEgB;AAGvD,IAAa,cAAc,GAA3B,MAAa,cAAc;IAQvB,YACY,WAAwB,EACxB,KAAqB,EACrB,MAAc,EACd,qBAA4C;QAH5C,gBAAW,GAAX,WAAW,CAAa;QACxB,UAAK,GAAL,KAAK,CAAgB;QACrB,WAAM,GAAN,MAAM,CAAQ;QACd,0BAAqB,GAArB,qBAAqB,CAAuB;QAVxD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QACH,UAAK,GAAsB,IAAI,kEAAiB,EAAE,CAAC;QAQvD,wCAAwC;QACxC,IAAI,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,EAAE;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC/B;IACL,CAAC;IAED,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACtC,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACzE,CAAC;IAED,oDAAoD;IACpD,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE3C,QAAQ;QACJ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAE5C,+BAA+B;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE;YACxB,OAAO;SACV;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;aACvC,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACN,IAAI,CAAC,EAAE;YACH,YAAY,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,gDAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;YAC/F,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC3C,CAAC,EACD,KAAK,CAAC,EAAE;YACJ,IAAI,KAAK,KAAK,aAAa,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,mCAAmC,CAAC;aACpD;iBAAM;gBACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACf,CAAC;IAED,UAAU;QACN,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACvC,CAAC;CACJ;;YAvD4B,0DAAW;YACjB,8DAAc;YACb,sDAAM;YACS,mEAAqB;;AAZ/C,cAAc;IAD1B,+DAAS,CAAC,EAAE,mNAAmC,EAAE,CAAC;2EAUtB,0DAAW;QACjB,8DAAc;QACb,sDAAM;QACS,mEAAqB;GAZ/C,cAAc,CAgE1B;AAhE0B;;;;;;;;;;;;;;;;;;;ACXU;;;;;;;;;;;;;;;;;;;;;;;ACAoB;AACH;AACJ;AACoC;AAC/B;AAChB;AAMvC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAS5B,YACU,YAAyB,EACzB,MAAsB,EACtB,OAAe,EACf,sBAA6C;QAH7C,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,2BAAsB,GAAtB,sBAAsB,CAAuB;QAXvD,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACP,UAAK,GAAkB,IAAI,8DAAa,EAAE,CAAC;QAQjD,wCAAwC;QACxC,IAAI,IAAI,CAAC,sBAAsB,CAAC,gBAAgB,EAAE;YAChD,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;SAC9B;IACH,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,SAAS,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACpC,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACtC,yDAAU,CAAC,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACtC,KAAK,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,OAAO,CAAC;oBAC7B,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB,CAAC,CAAC;YACH,OAAO,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClC,YAAY,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACvC,gDAAgD;YAChD,aAAa,EAAE,CAAC,IAAI,CAAC;YACrB,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ;oBACnC,yDAAU,CAAC,OAAO,CAAC,oDAAoD,CAAC,CAAC,CAAC;SAC3E,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACxE,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,CAAC;QAC9C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,CAAC;QACpD,iEAAiE;QACjE,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;QACtD,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAE5C,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAEpD,MAAM,aAAa,GAAqB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;gBAC1E,IAAI,aAAa,IAAI,IAAI,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAC5C,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,kBAAkB,GAAG,QAAQ,GAAG,IAAI,CAAC;oBAC9D,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC;aAC7C,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,KAAK,KAAK,aAAa,EAAE;gBACzB,IAAI,CAAC,KAAK,GAAG,2BAA2B,CAAC;aAC5C;iBAAM;gBACH,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;aACtB;YACD,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACzB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;;YArFyB,0DAAW;YACjB,8DAAc;YACb,sDAAM;YACS,mEAAqB;;AAb5C,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;KACzC,CAAC;2EAWwB,0DAAW;QACjB,8DAAc;QACb,sDAAM;QACS,mEAAqB;GAb5C,iBAAiB,CA+F7B;AA/F6B;;;;;;;;;;;;;;;;;;;ACXO;;;;;;;;;;;;;;;;;;;;;;;ACAuB;AAC0B;AACrC;AACC;AACO;AAClB;AAOvC,IAAa,iBAAiB,GAA9B,MAAa,iBAAiB;IAU5B,YACU,YAAyB,EACzB,MAAsB,EACtB,OAAe,EACf,gBAAiC;QAHjC,iBAAY,GAAZ,YAAY,CAAa;QACzB,WAAM,GAAN,MAAM,CAAgB;QACtB,YAAO,GAAP,OAAO,CAAQ;QACf,qBAAgB,GAAhB,gBAAgB,CAAiB;QAZ3C,YAAO,GAAG,KAAK,CAAC;QAChB,cAAS,GAAG,KAAK,CAAC;QAElB,UAAK,GAAG,EAAE,CAAC;QACX,cAAS,GAAG,EAAE,CAAC;QACP,cAAS,GAAwB,IAAI,oEAAmB,EAAE,CAAC;IAQ/D,CAAC;IAEL,QAAQ;QACN,IAAI,CAAC,YAAY,GAAG,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;QAE9D,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC1C,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;YACjF,WAAW,EAAE,CAAC,IAAI,CAAC,YAAY,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,cAAc,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACzC,eAAe,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC1C,aAAa,EAAE,CAAC,KAAK,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAC3C,QAAQ,EAAE,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACpC,CAAC,CAAC;QAEH,yDAAyD;QACzD,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,IAAI,GAAG,CAAC;IACxE,CAAC;IAED,IAAI,CAAC,KAAK,OAAO,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;IAE9C,QAAQ;QACN,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAChB,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAChD,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAChE,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,IAAI,CAAC,CAAC,CAAC,cAAc,CAAC,KAAK,CAAC;QAC5D,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,IAAI,CAAC,CAAC,CAAC,eAAe,CAAC,KAAK,CAAC;QAC9D,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,CAAC;QAC1D,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,+BAA+B;QAC/B,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;YAC7B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE;gBAEpD,MAAM,aAAa,GAAqB,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;gBAC1E,IAAI,aAAa,IAAI,IAAI,EAAE;oBACzB,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;wBAC5C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,kBAAkB,GAAG,QAAQ,GAAG,IAAI,CAAC;oBACrG,CAAC,CAAC,CAAC;iBACJ;YACH,CAAC,CAAC,CAAC;YACH,OAAO;SACR;QAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACpB,IAAI,CAAC,gBAAgB,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC;aACjD,IAAI,CAAC,4DAAK,EAAE,CAAC;aACb,SAAS,CACR,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;QAC1C,CAAC,EACD,KAAK,CAAC,EAAE;YACN,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACvB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;;YAjEyB,0DAAW;YACjB,8DAAc;YACb,sDAAM;YACG,6DAAe;;AAdhC,iBAAiB;IAJ7B,+DAAS,CAAC;QACT,QAAQ,EAAE,cAAc;QACxB,4NAAwC;KACzC,CAAC;2EAYwB,0DAAW;QACjB,8DAAc;QACb,sDAAM;QACG,6DAAe;GAdhC,iBAAiB,CA4E7B;AA5E6B;;;;;;;;;;;;;ACZ9B;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;;AAEzD,MAAM,WAAW,GAAG;IACvB,UAAU,EAAE,KAAK;IACjB,MAAM,EAAE,+DAA+D;IACvE,KAAK,EAAE,uBAAuB;CACjC,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;ACjBpB;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IACxB,oEAAc,EAAE,CAAC;CACpB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAC9C,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<div class=\\\"col-sm-12 col-md-4 m-auto\\\"\\r\\n     [hidden]=\\\"!canFilter\\\">\\r\\n    <input class=\\\"search mt-0\\\"\\r\\n           type=\\\"text\\\"\\r\\n           [placeholder]=\\\"'Type at least ' + minimumSearchCharacters + ' characters to filter results...'\\\"\\r\\n           [(ngModel)]=\\\"searchTerm\\\"\\r\\n           #filterInput />\\r\\n</div>\\r\\n<ngx-datatable class=\\\"material expandable\\\"\\r\\n               trackByProp=\\\"id\\\"\\r\\n               [rows]=\\\"rows\\\"\\r\\n               [columns]=\\\"columns\\\"\\r\\n               [columnMode]=\\\"'force'\\\"\\r\\n               [count]=\\\"count\\\"\\r\\n               [rowHeight]=\\\"50\\\"\\r\\n               [headerHeight]=\\\"50\\\"\\r\\n               [footerHeight]=\\\"showFooter\\\"\\r\\n               [limit]=\\\"rowsPerPage\\\"\\r\\n               reorderable=\\\"false\\\"\\r\\n               [externalPaging]=\\\"!clientSide\\\"\\r\\n               [externalSorting]=\\\"!clientSide\\\"\\r\\n               [messages]=\\\"{emptyMessage: emptyMessage}\\\"\\r\\n               [loadingIndicator]=\\\"isLoading\\\"\\r\\n               (page)=\\\"setPage($event)\\\"\\r\\n               (sort)=\\\"setSort($event)\\\"\\r\\n               #dataTable>\\r\\n</ngx-datatable>\\r\\n<ng-template let-row=\\\"row\\\"\\r\\n             let-value=\\\"value\\\"\\r\\n             #usernameTemplate>\\r\\n    <span *ngIf=\\\"value\\\"\\r\\n          style=\\\"padding-right: 16px; position: relative;\\\">\\r\\n        <i *ngIf=\\\"row.blocked\\\"\\r\\n           class=\\\"material-icons font-14 checkmark\\\"\\r\\n           style=\\\"color: rgba(255, 81, 81, 0.61) !important;\\\"\\r\\n           title=\\\"Account is blocked\\\">\\r\\n            block\\r\\n        </i>\\r\\n        <i *ngIf=\\\"row.accessFailedCount > 0 && row.lockoutEnd && !row.blocked\\\"\\r\\n           class=\\\"material-icons font-14 checkmark\\\"\\r\\n           style=\\\"color: rgba(255, 81, 81, 0.61) !important;\\\"\\r\\n           title=\\\"Account is locked\\\">\\r\\n            vpn_key\\r\\n        </i>\\r\\n        {{ value }}\\r\\n    </span>\\r\\n    <span *ngIf=\\\"!value\\\"> - </span>\\r\\n</ng-template>\\r\\n<ng-template let-row=\\\"row\\\"\\r\\n             let-value=\\\"value\\\"\\r\\n             #emailTemplate>\\r\\n    <a *ngIf=\\\"value\\\"\\r\\n       [href]=\\\"'mailto:' + value\\\"\\r\\n       style=\\\"padding-right: 16px; position: relative;\\\">\\r\\n        <i *ngIf=\\\"row.emailConfirmed\\\"\\r\\n           class=\\\"material-icons font-14 checkmark\\\"\\r\\n           style=\\\"color: #32CD32 !important;\\\"\\r\\n           title=\\\"Email is confirmed\\\">\\r\\n            check\\r\\n        </i>\\r\\n        {{ value }}\\r\\n    </a>\\r\\n    <span *ngIf=\\\"!value\\\"> - </span>\\r\\n</ng-template>\\r\\n<ng-template let-row=\\\"row\\\"\\r\\n             let-value=\\\"value\\\"\\r\\n             #phoneNumberTemplate>\\r\\n    <a *ngIf=\\\"value\\\"\\r\\n       [href]=\\\"'tel:' + value\\\"\\r\\n       style=\\\"padding-right: 16px; position: relative;\\\">\\r\\n        <i *ngIf=\\\"row.phoneNumberConfirmed\\\"\\r\\n           class=\\\"material-icons font-14 checkmark\\\"\\r\\n           style=\\\"color: #32CD32 !important;\\\"\\r\\n           title=\\\"Phone number is confirmed\\\">\\r\\n            check\\r\\n        </i>\\r\\n        {{ value }}\\r\\n    </a>\\r\\n    <span *ngIf=\\\"!value\\\"> - </span>\\r\\n</ng-template>\\r\\n<ng-template let-row=\\\"row\\\"\\r\\n             let-value=\\\"value\\\"\\r\\n             #dateTimeTemplate>\\r\\n    <span *ngIf=\\\"value\\\">{{ value | date:'medium' }}</span>\\r\\n    <span *ngIf=\\\"!value\\\"> - </span>\\r\\n</ng-template>\\r\\n<ng-template let-row=\\\"row\\\"\\r\\n             let-value=\\\"value\\\"\\r\\n             #booleanTemplate>\\r\\n    <i *ngIf=\\\"value === true\\\"\\r\\n       class=\\\"material-icons\\\"\\r\\n       style=\\\"color: #32CD32 !important;\\\">\\r\\n        check\\r\\n    </i>\\r\\n    <i *ngIf=\\\"value === false\\\"\\r\\n       class=\\\"material-icons\\\"\\r\\n       style=\\\"color: #CC0000 !important;\\\">\\r\\n        remove\\r\\n    </i>\\r\\n</ng-template>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Admin</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\"\\n             class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12 d-flex\\\">\\n                <div class=\\\"flex-grow-1\\\">\\n                    <button class=\\\"btn btn-success ml-3\\\"\\n                            [routerLink]=\\\"['/admin/users']\\\">\\n                        Όλοι οι Χρήστες\\n                    </button>\\n                    <button class=\\\"btn btn-success ml-3\\\"\\n                            [routerLink]=\\\"['/admin/shipments']\\\">\\n                        Όλες οι Αποστολές\\n                    </button>\\n                </div>\\n                <button class=\\\"btn btn-danger\\\"\\n                        [routerLink]=\\\"['/admin/filament']\\\">\\n                    Αποστολή Υλικού\\n                </button>\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"row text-center\\\">\\n            <div class=\\\"col-4\\\">\\n                Χρήστες\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                Εκτυπώσεις\\n            </div>\\n            <div class=\\\"col-4\\\">\\n                Απεσταλμένα\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"col-12 mt-3\\\">\\n            <app-list-view [clientSide]=\\\"true\\\"\\n                           [columns]=\\\"columns\\\"\\n                           [rows]=\\\"pendingUsers\\\"\\n                           [rowsPerPage]=\\\"2147483647\\\"\\n                           [defaultSortField]=\\\"'dateShipped'\\\"\\n                           [defaultSortDirection]=\\\"'Desc'\\\"\\n                           [showFooter]=\\\"'false'\\\"\\n                           (search)=\\\"getUsersWithShipments($event)\\\"\\n                           [canFilter]=\\\"true\\\"\\n                           #shipmentsList>\\n            </app-list-view>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #dateTemplate>\\n                {{ value | date }}\\n            </ng-template>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #deliveryTemplate>\\n                <div *ngIf=\\\"deliveryLoading else deliveryBtn\\\"\\n                     class=\\\"spinner-border spinner-border-sm\\\"></div>\\n                <ng-template #deliveryBtn>\\n                    <button class=\\\"btn btn-primary px-4 py-0 my-0\\\"\\n                            (click)=\\\"onRecieved(row)\\\"\\n                            *ngIf=\\\"!row.recieved else notRecieved\\\">\\n                        <span class=\\\"material-icons align-text-top text-light\\\">\\n                            done\\n                        </span>\\n                    </button>\\n                    <ng-template #notRecieved>\\n                        <span class=\\\"material-icons text-muted\\\">\\n                            local_shipping\\n                        </span>\\n                    </ng-template>\\n                </ng-template>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Αποστολή Υλικού</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\"\\n             class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <button class=\\\"btn btn-primary\\\"\\n                        [routerLink]=\\\"['/admin']\\\">\\n                    Αρχική\\n                </button>\\n                <button class=\\\"btn btn-success ml-3\\\"\\n                        [routerLink]=\\\"['/admin/shipments']\\\">\\n                    Όλες οι Αποστολές\\n                </button>\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"col-12 mt-3\\\">\\n            <h5 class=\\\"mt-2\\\"><span class=\\\"fa fa-clock-o ion-clock float-right\\\"></span>Χρήστες με ανάγκη για υλικό</h5>\\n            <app-list-view [clientSide]=\\\"true\\\"\\n                           [columns]=\\\"columns\\\"\\n                           [rows]=\\\"users\\\"\\n                           [rowsPerPage]=\\\"2147483647\\\"\\n                           [defaultSortField]=\\\"'lastName'\\\"\\n                           [defaultSortDirection]=\\\"'Desc'\\\"\\n                           [showFooter]=\\\"'false'\\\"\\n                           (search)=\\\"getUsers($event)\\\"\\n                           [canFilter]=\\\"true\\\"\\n                           #usersList>\\n            </app-list-view>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #dateTemplate>\\n                {{ value | date }}\\n            </ng-template>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #actionsTemplate>\\n                <div *ngIf=\\\"deliveryLoading else deliveryBtn\\\"\\n                     class=\\\"spinner-border spinner-border-sm\\\"></div>\\n                <ng-template #deliveryBtn>\\n                    <button class=\\\"btn btn-danger px-4 py-0 my-0\\\"\\n                            *ngIf=\\\"value\\\"\\n                            (click)=\\\"sendFilament(row)\\\">\\n                        <i class=\\\"material-icons material-action align-text-top text-light\\\">\\n                            send\\n                        </i>\\n                    </button>\\n                </ng-template>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Αποστολές</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\"\\n             class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <button class=\\\"btn btn-primary\\\"\\n                        [routerLink]=\\\"['/admin']\\\">\\n                    Αρχική\\n                </button>\\n                <button class=\\\"btn btn-success ml-3\\\"\\n                        [routerLink]=\\\"['/admin/users']\\\">\\n                    Όλοι οι Χρήστες\\n                </button>\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"row text-center\\\">\\n            <div class=\\\"col-4\\\">\\n                Αποστολές\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"col-12 mt-3\\\">\\n            <app-list-view [clientSide]=\\\"true\\\"\\n                           [columns]=\\\"columns\\\"\\n                           [rows]=\\\"pendingShipments\\\"\\n                           [rowsPerPage]=\\\"2147483647\\\"\\n                           [defaultSortField]=\\\"'dateShipped'\\\"\\n                           [defaultSortDirection]=\\\"'Desc'\\\"\\n                           [showFooter]=\\\"'false'\\\"\\n                           (search)=\\\"getUsersWithShipments($event)\\\"\\n                           [canFilter]=\\\"true\\\"\\n                           #shipmentsList>\\n            </app-list-view>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #dateTemplate>\\n                {{ value | date }}\\n            </ng-template>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #deliveryTemplate>\\n                <div *ngIf=\\\"deliveryLoading else deliveryBtn\\\"\\n                     class=\\\"spinner-border spinner-border-sm\\\"></div>\\n                <ng-template #deliveryBtn>\\n                    <div class=\\\"px-4 py-0 my-0\\\"\\n                         *ngIf=\\\"row.recieved else notRecieved\\\">\\n                        <span class=\\\"material-icons align-text-top\\\">\\n                            done\\n                        </span>\\n                    </div>\\n                    <ng-template #notRecieved>\\n                        <div class=\\\"px-4 py-0 my-0\\\">\\n                            <span class=\\\"material-icons text-muted\\\">\\n                                local_shipping\\n                            </span>\\n                        </div>\\n                    </ng-template>\\n                </ng-template>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Χρήστες</h4>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\"\\n             class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <button class=\\\"btn btn-primary\\\"\\n                        [routerLink]=\\\"['/admin']\\\">\\n                    Αρχική\\n                </button>\\n                <button class=\\\"btn btn-success ml-3\\\"\\n                        [routerLink]=\\\"['/admin/shipments']\\\">\\n                    Όλες οι Αποστολές\\n                </button>\\n            </div>\\n        </div>\\n        <hr />\\n        <div class=\\\"col-12 mt-3\\\">\\n            <app-list-view [clientSide]=\\\"true\\\"\\n                           [columns]=\\\"columns\\\"\\n                           [rows]=\\\"users\\\"\\n                           [rowsPerPage]=\\\"2147483647\\\"\\n                           [defaultSortField]=\\\"'lastName'\\\"\\n                           [defaultSortDirection]=\\\"'Desc'\\\"\\n                           [showFooter]=\\\"'false'\\\"\\n                           (search)=\\\"getUsers($event)\\\"\\n                           [canFilter]=\\\"true\\\"\\n                           #usersList>\\n            </app-list-view>\\n            <ng-template let-row=\\\"row\\\"\\n                         let-value=\\\"value\\\"\\n                         #actionsTemplate>\\n                <button class=\\\"btn btn-primary px-4 py-0 my-0\\\"\\n                        *ngIf=\\\"value\\\"\\n                        [routerLink]=\\\"value + '/view'\\\">\\n                    <i class=\\\"material-icons material-action align-text-top text-light\\\">\\n                        search\\n                    </i>\\n                </button>\\n            </ng-template>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">{{user.firstName}} {{user.lastName}}</h4>\\n    <div class=\\\"card-body\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <button class=\\\"btn btn-primary\\\"\\n                        [routerLink]=\\\"['/admin/users']\\\">\\n                    Πίσω\\n                </button>\\n            </div>\\n        </div>\\n        <hr />\\n        <form>\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"firstName\\\">Όνομα*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.firstName}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"lastName\\\">Επίθετο*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.lastName}}'\\n                           class=\\\"form-control\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-2\\\">\\n                    <label for=\\\"lastName\\\">Ρόλος*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.role}}'\\n                           class=\\\"form-control\\\">\\n                </div>\\n                <div class=\\\"form-group col-md-5\\\">\\n                    <label for=\\\"email\\\">Email*</label>\\n                    <input type=\\\"email\\\"\\n                           disabled\\n                           value='{{user.email}}'\\n                           class=\\\"form-control\\\"\\n                           required />\\n                </div>\\n                <div class=\\\"form-group col-md-5\\\">\\n                    <label for=\\\"phoneNumber\\\">Τηλέφωνο*</label>\\n                    <input type=\\\"tel\\\"\\n                           disabled\\n                           value='{{user.phoneNumber}}'\\n                           placeholder=\\\"6934567891\\\"\\n                           class=\\\"form-control\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-12\\\">\\n                    <label for=\\\"address\\\">Διεύθυνση Αποστολής*</label>\\n                    <textarea disabled\\n                              rows=\\\"4\\\"\\n                              value='{{user.address}}'\\n                              class=\\\"form-control\\\">\\n                        </textarea>\\n                </div>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12 align-items-center pt-4\\\">\\n                <div class=\\\"form-check col-md-6\\\">\\n                    <label for=\\\"printerActive\\\"\\n                           class=\\\"form-check-label pr-5\\\">Λειτουργικός εκτυπωτής*</label>\\n                    <bSwitch name=\\\"printerActive\\\"\\n                             [switch-animate]=\\\"'animate'\\\"\\n                             [switch-size]=\\\"'small'\\\"\\n                             [switch-on-text]=\\\"'ΝΑΙ'\\\"\\n                             [switch-off-text]=\\\"'ΟΧΙ'\\\"\\n                             [switch-disabled]=\\\"'disabled'\\\"\\n                             [ngModel]=\\\"user.printerActive\\\"\\n                             class=\\\"form-check-input\\\"\\n                             id=\\\"printerActive\\\"></bSwitch>\\n                </div>\\n                <div class=\\\"form-check col-md-6 mt-sm-3 mt-md-0\\\">\\n                    <label for=\\\"needsFilament\\\"\\n                           class=\\\"form-check-label pr-5\\\">Χρειάζεται Filament*</label>\\n                    <bSwitch name=\\\"needsFilament\\\"\\n                             [switch-animate]=\\\"'animate'\\\"\\n                             [switch-size]=\\\"'small'\\\"\\n                             [switch-on-text]=\\\"'ΝΑΙ'\\\"\\n                             [switch-off-text]=\\\"'ΟΧΙ'\\\"\\n                             [switch-disabled]=\\\"'disabled'\\\"\\n                             [ngModel]=\\\"user.needsFilament\\\"\\n                             class=\\\"form-check-input\\\"\\n                             id=\\\"needsFilament\\\"></bSwitch>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12 align-items-center pt-4\\\">\\n                <div class=\\\"col\\\"></div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"printerModel\\\">Μάρκα 3D Printer*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.printerModel}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12 align-items-center pt-4\\\">\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"batchRequiredTime\\\">Εκτεινόμενος Χρόνος Εκτύπωσης*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.batchRequiredTime}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"printerModel\\\">Συνολικά Απεσταλμένα*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.shippedQuantity}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n                <div class=\\\"form-group col-md-4\\\">\\n                    <label for=\\\"printerModel\\\">Τελευταία Αποστολή*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.latestShippedDate.toDateString()}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"username\\\">Username*</label>\\n                    <input type=\\\"text\\\"\\n                           disabled\\n                           value='{{user.username}}'\\n                           class=\\\"form-control\\\" />\\n                </div>\\n                <div class=\\\"form-group col-md-6 mb-0\\\">\\n                    <label for=\\\"password\\\">Password*</label>\\n                    <input type=\\\"password\\\"\\n                           disabled\\n                           value='{{user.firstName}}'\\n                           class=\\\"form-control\\\"\\n                           aria-describedby=\\\"passwordHelpBlock\\\" />\\n                </div>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<!-- nav -->\\n<nav class=\\\"navbar navbar-expand navbar-dark bg-dark d-flex justify-content-between\\\"\\n     *ngIf=\\\"currentUser\\\">\\n   <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link\\\"\\n         routerLink=\\\"/\\\"\\n         *ngIf=\\\"!isAdmin\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\"\\n         routerLink=\\\"/admin\\\"\\n         *ngIf=\\\"isAdmin\\\">Home</a>\\n      <a class=\\\"nav-item nav-link\\\"\\n         (click)=\\\"logout()\\\">Logout</a>\\n   </div>\\n   <a class=\\\"mr-3\\\"\\n      href=\\\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\\\"\\n      target=\\\"_blank\\\">\\n      <button type=\\\"button\\\"\\n              class=\\\"btn btn-warning px-4\\\">\\n         Δώρησε\\n      </button>\\n   </a>\\n</nav>\\n\\n<!-- main app container -->\\n<div class=\\\"container\\\">\\n   <router-outlet></router-outlet>\\n</div>\\n\\n<!-- credits -->\\n<footer class=\\\"footer mt-5\\\">\\n   <div class=\\\"container d-flex justify-content-between\\\">\\n      <a href=\\\"#\\\"\\n         target=\\\"_top\\\">Hellas COVID19 3D Printing Inventory</a>\\n      <a href=\\\"https://visitagiasos.gr\\\"\\n         target=\\\"_blank\\\">A donation by VisitAgiasos.gr</a>\\n   </div>\\n</footer>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <div class=\\\"card-header d-flex flex-row justify-content-between align-items-center\\\">\\n        <div>\\n            <h4>Το προφίλ μου</h4>\\n        </div>\\n        <div>\\n            <a class=\\\"btn btn-secondary btn-sm text-light\\\"\\n               role=\\\"button\\\"\\n               [routerLink]=\\\"['/profile']\\\">\\n                <span class=\\\"material-icons\\\">\\n                    edit\\n                </span>\\n            </a>\\n        </div>\\n    </div>\\n    <div class=\\\"card-body\\\">\\n        <div *ngIf=\\\"loading\\\"\\n             class=\\\"spinner-border spinner-border-sm\\\"></div>\\n        <p *ngIf=\\\"currentUser\\\">\\n            Γεία σου {{currentUser.firstName}}!\\n        </p>\\n        <p *ngIf=\\\"currentUser.needsFilament\\\"\\n           class=\\\"text-success\\\">\\n            Έχουμε ενημερωθεί για την έλλειψη σου σε filament και θα σου στείλουμε σύντομα!\\n        </p>\\n        <div class=\\\"col-12 mt-3\\\">\\n            <hr />\\n            <div>\\n                <form>\\n                    <div class=\\\"form-row col-6\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"activePrinter\\\">Σε λειτουργία: </label>\\n                            <bSwitch name=\\\"activePrinter\\\"\\n                                     class=\\\"pl-3\\\"\\n                                     [switch-size]=\\\"'small'\\\"\\n                                     [switch-readonly]=\\\"'readonly'\\\"\\n                                     [(ngModel)]=\\\"currentUser.printerActive\\\"></bSwitch>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12 text-center\\\">\\n                        <div class=\\\"form-group col-md-3\\\">\\n                            <label for=\\\"lastName\\\">Μοντέλο:</label>\\n                            <div class=\\\"form-group col-md-12\\\">\\n                                {{currentUser.printerModel}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-3\\\">\\n                            <label for=\\\"address\\\">Εκτεινόμενος χρόνος:</label>\\n                            <div class=\\\"form-group col-md-12\\\">\\n                                {{currentUser.batchRequiredTime}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-3\\\">\\n                            <label for=\\\"address\\\">Συνολική προσφορά:</label>\\n                            <div class=\\\"form-group col-md-12\\\">\\n                                {{currentUser.shippedQuantity}}\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-3\\\">\\n                            <label for=\\\"address\\\">Τελευταία αποστολή:</label>\\n                            <div class=\\\"form-group col-md-12\\\">\\n                                {{currentUser.latestShippedDate.toDateString()}}\\n                            </div>\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n            <hr />\\n            <button class=\\\"btn btn-primary mb-3\\\"\\n                    routerLink=\\\"/shipments\\\">\\n                Καταγραφή Μετακίνησης Υλικών\\n            </button>\\n            <div class=\\\"col-md-12\\\">\\n                <h5 class=\\\"mt-2\\\"><span class=\\\"fa fa-clock-o ion-clock float-right\\\"></span>Πρόσφατη Δραστηριότητα</h5>\\n                <app-list-view [clientSide]=\\\"true\\\"\\n                               [columns]=\\\"columns\\\"\\n                               [rows]=\\\"shipments\\\"\\n                               [rowsPerPage]=\\\"2147483647\\\"\\n                               [defaultSortField]=\\\"'dateShipped'\\\"\\n                               [defaultSortDirection]=\\\"'Desc'\\\"\\n                               [showFooter]=\\\"'false'\\\"\\n                               [emptyMessage]=\\\"'Στείλε μας την κούτα σου με (30) μάσκες για 2kg PLA filament!'\\\"\\n                               (search)=\\\"getShipments()\\\"\\n                               #shipmentsList>\\n                </app-list-view>\\n                <ng-template let-row=\\\"row\\\"\\n                             let-value=\\\"value\\\"\\n                             #dateTemplate>\\n                    {{ value | date }}\\n                </ng-template>\\n                <ng-template let-row=\\\"row\\\"\\n                             let-value=\\\"value\\\"\\n                             #deliveryTemplate>\\n                    <span class=\\\"material-icons text-success\\\"\\n                          *ngIf=\\\"row.recieved else notRecieved\\\">\\n                        done\\n                    </span>\\n                    <ng-template #notRecieved>\\n                        <span class=\\\"material-icons text-muted\\\">\\n                            local_shipping\\n                        </span>\\n                    </ng-template>\\n                </ng-template>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"card mt-4\\\">\\n    <h4 class=\\\"card-header\\\">Επεξεργασία Προφίλ</h4>\\n    <div class=\\\"card-body\\\">\\n        <form [formGroup]=\\\"updateForm\\\"\\n              (ngSubmit)=\\\"onSubmit()\\\">\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"firstName\\\">Όνομα*</label>\\n                    <input type=\\\"text\\\"\\n                           formControlName=\\\"firstName\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.firstName.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.firstName.errors.required\\\">Το Όνομα είναι απαραίτητο</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"lastName\\\">Επίθετο*</label>\\n                    <input type=\\\"text\\\"\\n                           formControlName=\\\"lastName\\\"\\n                           [(ngModel)]=\\\"user.lastName\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.lastName.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.lastName.errors.required\\\">Το Επίθετο είναι απαραίτητο</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"email\\\">Email*</label>\\n                    <input type=\\\"email\\\"\\n                           formControlName=\\\"email\\\"\\n                           class=\\\"form-control\\\"\\n                           [(ngModel)]=\\\"user.email\\\"\\n                           required\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.email.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.email.errors.required\\\">Το Email είναι απαραίτητο</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"phoneNumber\\\">Τηλέφωνο*</label>\\n                    <input type=\\\"tel\\\"\\n                           placeholder=\\\"6934567891\\\"\\n                           formControlName=\\\"phoneNumber\\\"\\n                           [(ngModel)]=\\\"user.phoneNumber\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.phoneNumber.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.phoneNumber.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.phoneNumber.errors.required\\\">Το τηλέφωνο είναι απαραίτητο</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-12\\\">\\n                    <label for=\\\"address\\\">Διεύθυνση αποστολής νέου χορηγούμενου υλικού*</label>\\n                    <textarea formControlName=\\\"address\\\"\\n                              name=\\\"address\\\"\\n                              rows=\\\"4\\\"\\n                              [(ngModel)]=\\\"user.address\\\"\\n                              class=\\\"form-control\\\"\\n                              [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\">\\n                </textarea>\\n                    <div *ngIf=\\\"submitted && f.address.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.address.errors.required\\\">Η Περιοχή είναι απαραίτητη</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12 mb-4\\\">\\n                <div class=\\\"form-check-inline col-md-12\\\">\\n                    <label for=\\\"printerActive\\\"\\n                           class=\\\"form-check-label pr-5\\\">Είναι ο εκτυπωτής λειτουργικός?*</label>\\n                    <bSwitch name=\\\"printerActive\\\"\\n                             [switch-animate]=\\\"'animate'\\\"\\n                             [switch-size]=\\\"'small'\\\"\\n                             [switch-on-text]=\\\"'ΝΑΙ'\\\"\\n                             [switch-off-text]=\\\"'ΟΧΙ'\\\"\\n                             [(ngModel)]=\\\"user.printerActive\\\"\\n                             class=\\\"form-check-input\\\"\\n                             id=\\\"printerActive\\\"\\n                             formControlName=\\\"printerActive\\\"></bSwitch>\\n                </div>\\n            </div>\\n            <div class=\\\"form-row col-12 align-items-baseline\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"printerModel\\\">Μάρκα 3D Printer*</label>\\n                    <input type=\\\"text\\\"\\n                           formControlName=\\\"printerModel\\\"\\n                           [(ngModel)]=\\\"user.printerModel\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.printerModel.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.printerModel.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.printerModel.errors.required\\\">Η Μάρκα 3D Printer είναι απαραίτητη</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"batchRequiredTime\\\">Εκτεινόμενος χρόνος εκτύπωσης 1 μάσκας (λεπτά)</label>\\n                    <input type=\\\"number\\\"\\n                           min=0\\n                           [(ngModel)]=\\\"user.batchRequiredTime\\\"\\n                           name=\\\"batchRequiredTime\\\"\\n                           id=\\\"batchRequiredTime\\\"\\n                           formControlName=\\\"batchRequiredTime\\\"\\n                           class=\\\"form-control without\\\" />\\n                </div>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12\\\">\\n                <div class=\\\"form-group col-md-6 mb-0\\\">\\n                    <label for=\\\"newPassword\\\">Νέος κωδικός</label>\\n                    <input type=\\\"password\\\"\\n                           formControlName=\\\"newPassword\\\"\\n                           [(ngModel)]=\\\"updatedUser.newPassword\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.newPassword.errors }\\\"\\n                           aria-describedby=\\\"newPasswordHelpBlock\\\" />\\n                </div>\\n                <small id=\\\"newPasswordHelpBlock\\\"\\n                       class=\\\"form-text text-muted pb-4 mt-2\\\">\\n                    Αφίστε το κενό αν δεν θέλετε να αλλάξετε τον κωδικό σας. Ο κωδικός σας πρέπει να έχει τουλάχιστον 4 χαρακτήρες, ένα κεφαλαίο, ένα μικρό γράμμα και έναν αριθμό.\\n                </small>\\n            </div>\\n            <hr />\\n            <div class=\\\"form-row col-12 mb-3\\\">\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"username\\\">Username*</label>\\n                    <input type=\\\"text\\\"\\n                           formControlName=\\\"username\\\"\\n                           [(ngModel)]=\\\"user.username\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                    <div *ngIf=\\\"submitted && f.username.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.username.errors.required\\\">To Username είναι απαραίτητο</div>\\n                    </div>\\n                </div>\\n                <div class=\\\"form-group col-md-6\\\">\\n                    <label for=\\\"password\\\">Παλιός κωδικός*</label>\\n                    <input type=\\\"password\\\"\\n                           formControlName=\\\"password\\\"\\n                           [(ngModel)]=\\\"updatedUser.password\\\"\\n                           class=\\\"form-control\\\"\\n                           [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                           aria-describedby=\\\"passwordHelpBlock\\\" />\\n                    <div *ngIf=\\\"submitted && f.password.errors\\\"\\n                         class=\\\"invalid-feedback\\\">\\n                        <div *ngIf=\\\"f.password.errors.required\\\">Ο Παλιός κωδικός είναι απαραίτητος</div>\\n                    </div>\\n                </div>\\n            </div>\\n            <button [disabled]=\\\"loading\\\"\\n                    class=\\\"btn btn-info ml-3\\\"\\n                    type=\\\"submit\\\">\\n                <span *ngIf=\\\"loading\\\"\\n                      class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                Ανανέωση\\n            </button>\\n            <button type=\\\"button\\\"\\n                    (click)=\\\"goBack()\\\"\\n                    class=\\\"btn btn-danger ml-3\\\">Πίσω\\n            </button>\\n            <div *ngIf=\\\"error || formError\\\"\\n                 class=\\\"alert alert-danger mt-3 mb-0\\\">\\n                <p>{{error}}</p>\\n                <p>{{formError}}</p>\\n            </div>\\n        </form>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"col-md-6 offset-md-3 py-5\\\">\\n        <div class=\\\"card\\\">\\n            <h4 class=\\\"card-header text-center\\\">Hellas COVID19 3D Printing Inventory</h4>\\n            <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"loginForm\\\"\\n                      (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"username\\\">Username</label>\\n                        <input type=\\\"text\\\"\\n                               formControlName=\\\"username\\\"\\n                               class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.username.errors\\\"\\n                             class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.username.errors.required\\\">Username is required</div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-group\\\">\\n                        <label for=\\\"password\\\">Password</label>\\n                        <input type=\\\"password\\\"\\n                               formControlName=\\\"password\\\"\\n                               class=\\\"form-control\\\"\\n                               [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" />\\n                        <div *ngIf=\\\"submitted && f.password.errors\\\"\\n                             class=\\\"invalid-feedback\\\">\\n                            <div *ngIf=\\\"f.password.errors.required\\\">Password is required</div>\\n                        </div>\\n                    </div>\\n                    <button [disabled]=\\\"loading\\\"\\n                            class=\\\"btn btn-primary\\\"\\n                            type=\\\"submit\\\">\\n                        <span *ngIf=\\\"loading\\\"\\n                              class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                        Login\\n                    </button>\\n                    <button class=\\\"btn btn-info ml-3\\\"\\n                            (click)=\\\"onRegister()\\\"\\n                            type=\\\"button\\\">\\n                        Register\\n                    </button>\\n                    <div *ngIf=\\\"error\\\"\\n                         class=\\\"alert alert-danger mt-3 mb-0\\\">{{error}}</div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-10 offset-md-1 text-center pt-4\\\">\\n        <div>\\n            <p>\\n                Στήριξε και εσύ την προσπάθεια του 3DHUB και της ομάδας εθελοντών που σε συνεργασία με το υπουργείου Υγείας ανέλαβαν την παραγωγή χιλιάδων ασπίδων προστασίας για το νοσηλευτικό προσωπικό όλης της χώρας!\\n            </p>\\n        </div>\\n        <a href=\\\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\\\"\\n           target=\\\"_blank\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-warning\\\">Δώρησε\\n            </button>\\n        </a>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"col-md-6 offset-md-3 py-5\\\">\\n        <div class=\\\"card\\\">\\n            <h4 class=\\\"card-header text-center\\\">Εγγραφή</h4>\\n            <div class=\\\"card-body\\\">\\n                <form [formGroup]=\\\"registerForm\\\"\\n                      (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"firstName\\\">Όνομα*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"firstName\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.firstName.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.firstName.errors.required\\\">Το Όνομα είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"lastName\\\">Επίθετο*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"lastName\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.lastName.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.lastName.errors.required\\\">Το Επίθετο είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"email\\\">Email*</label>\\n                            <input type=\\\"email\\\"\\n                                   formControlName=\\\"email\\\"\\n                                   class=\\\"form-control\\\"\\n                                   required\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.email.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.email.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.email.errors.required\\\">Το Email είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"phoneNumber\\\">Τηλέφωνο*</label>\\n                            <input type=\\\"tel\\\"\\n                                   placeholder=\\\"6934567891\\\"\\n                                   formControlName=\\\"phoneNumber\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.phoneNumber.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.phoneNumber.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.phoneNumber.errors.required\\\">Το τηλέφωνο είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <label for=\\\"address\\\">Διεύθυνση αποστολής νέου χορηγούμενου υλικού*</label>\\n                            <textarea formControlName=\\\"address\\\"\\n                                      class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\">\\n                        </textarea>\\n                            <div *ngIf=\\\"submitted && f.address.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.address.errors.required\\\">Η Περιοχή είναι απαραίτητη</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <hr />\\n                    <div class=\\\"form-row col-12 align-items-baseline\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"printerModel\\\">Μάρκα 3D Printer*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"printerModel\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.printerModel.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.printerModel.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.printerModel.errors.required\\\">Η Μάρκα 3D Printer είναι απαραίτητη</div>\\n                            </div>\\n                        </div>\\n                        <!-- <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"batchRequiredTime\\\">Εκτεινόμενος χρόνος εκτύπωσης 1 μάσκας</label>\\n                            <input type=\\\"time\\\"\\n                                   step=\\\"1\\\"\\n                                   type=\\\"time\\\"\\n                                   name=\\\"batchRequiredTime\\\"\\n                                   id=\\\"batchRequiredTime\\\"\\n                                   formControlName=\\\"batchRequiredTime\\\"\\n                                   class=\\\"form-control without\\\" />\\n                        </div> -->\\n                    </div>\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-check-inline col-md-12\\\">\\n\\n                            <label for=\\\"printerActive\\\"\\n                                   class=\\\"form-check-label pr-5\\\">Είναι ο εκτυπωτής λειτουργικός?*</label>\\n                            <bSwitch name=\\\"printerActive\\\"\\n                                     [switch-animate]=\\\"'animate'\\\"\\n                                     [switch-size]=\\\"'small'\\\"\\n                                     [switch-on-text]=\\\"'ΝΑΙ'\\\"\\n                                     [switch-off-text]=\\\"'ΟΧΙ'\\\"\\n                                     class=\\\"form-check-input\\\"\\n                                     id=\\\"printerActive\\\"\\n                                     formControlName=\\\"printerActive\\\"></bSwitch>\\n                        </div>\\n                    </div>\\n                    <hr />\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"username\\\">Username*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"username\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.username.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.username.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.username.errors.required\\\">To Username είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6 mb-0\\\">\\n                            <label for=\\\"password\\\">Password*</label>\\n                            <input type=\\\"password\\\"\\n                                   formControlName=\\\"password\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                                   aria-describedby=\\\"passwordHelpBlock\\\" />\\n\\n                            <div *ngIf=\\\"submitted && f.password.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.password.errors.required\\\">To Password είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                        <small id=\\\"passwordHelpBlock\\\"\\n                               class=\\\"form-text text-muted pb-4 mt-0\\\">\\n                            Ο κωδικός σας πρέπει να έχει τουλάχιστον 4 χαρακτήρες, ένα κεφαλαίο, ένα μικρό γράμμα και έναν αριθμό.\\n                        </small>\\n                    </div>\\n                    <button [disabled]=\\\"loading\\\"\\n                            class=\\\"btn btn-info ml-3\\\"\\n                            type=\\\"submit\\\">\\n                        <span *ngIf=\\\"loading\\\"\\n                              class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                        Register\\n                    </button>\\n                    <button type=\\\"button\\\"\\n                            (click)=\\\"goBack()\\\"\\n                            class=\\\"btn btn-danger ml-3\\\">Πίσω\\n                    </button>\\n                    <div *ngIf=\\\"error || formError\\\"\\n                         class=\\\"alert alert-danger mt-3 mb-0\\\">\\n                        <p>{{error}}</p>\\n                        <p>{{formError}}</p>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-md-10 offset-md-1 text-center pt-4\\\">\\n        <div>\\n            <p>\\n                Στήριξε και εσύ την προσπάθεια του 3DHUB και της ομάδας εθελοντών που σε συνεργασία με το υπουργείου Υγείας ανέλαβαν παραγωγή χιλιάδων ασπίδων προστασίας για το νοσηλευτικό προσωπικό όλης της χώρας!\\n            </p>\\n        </div>\\n        <a href=\\\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\\\"\\n           target=\\\"_blank\\\">\\n            <button type=\\\"button\\\"\\n                    class=\\\"btn btn-warning\\\">Δώρησε\\n            </button>\\n        </a>\\n    </div>\\n</div>\"","export default \"<div class=\\\"container\\\">\\n    <div class=\\\"col-md-7 offset-md-2 py-5\\\">\\n        <div class=\\\"card\\\">\\n            <h4 class=\\\"card-header text-center\\\"> Καταγραφή Μετακίνησης Υλικών </h4>\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"alert alert-primary\\\"\\n                     role=\\\"alert\\\">\\n                    <div>\\n                        <small>\\n                            Μετά την ολοκλήρωση της εκτύπωσης των συνολικών τεμαχίων, η αποστολή γίνεται με <strong>Γενική Ταχυδρομική και με χρέωση παραλήπτη</strong> στην διεύθυνση:\\n                        </small>\\n                    </div>\\n                    <div class=\\\"col text-center py-3\\\">\\n                        <h6>3D HUB</h6>\\n                        <h6>Ψαρών 20, Πειραιάς, Αθήνα, 18546</h6>\\n                    </div>\\n                </div>\\n                <form [formGroup]=\\\"shipmentForm\\\"\\n                      (ngSubmit)=\\\"onSubmit()\\\">\\n                    <div class=\\\"form-row col-12 align-items-baseline my-4\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"quantity\\\">Ποσότητα (ελάχιστο 30)*</label>\\n                            <input type=\\\"number\\\"\\n                                   value=\\\"30\\\"\\n                                   min=\\\"30\\\"\\n                                   formControlName=\\\"quantity\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.quantity.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.quantity.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.quantity.errors.required\\\">Η ποσότητα είναι απαραίτητη</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"fileName\\\">Όνομα αρχείου*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"fileName\\\"\\n                                   class=\\\"form-control\\\"\\n                                   required\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.fileName.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.fileName.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.fileName.errors.required\\\">Το όνομα αρχείου εκτύπωσης είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12\\\">\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"shippingCompany\\\">Εταιρία Αποστολής*</label>\\n                            <input type=\\\"text\\\"\\n                                   formControlName=\\\"shippingCompany\\\"\\n                                   class=\\\"form-control\\\"\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.shippingCompany.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.shippingCompany.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.shippingCompany.errors.required\\\">Η Εταιρία Αποστολής είναι απαραίτητη</div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"form-group col-md-6\\\">\\n                            <label for=\\\"dateShipped\\\">Ημερομηνία Αποστολής*</label>\\n                            <input type=\\\"date\\\"\\n                                   formControlName=\\\"dateShipped\\\"\\n                                   class=\\\"form-control\\\"\\n                                   required\\n                                   [ngClass]=\\\"{ 'is-invalid': submitted && f.dateShipped.errors }\\\" />\\n                            <div *ngIf=\\\"submitted && f.dateShipped.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.dateShipped.errors.required\\\">Η Ημερομηνία Αποστολής είναι απαραίτητη</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12 my-4\\\">\\n                        <div class=\\\"form-group col-md-12\\\">\\n                            <label for=\\\"trackingNumber\\\">\\n                                Αριθμός φορτωτικής αποστολής εκτυπώσεων. Σε περίπτωση παράδοσης με άλλο τρόπο παρακαλώ κάντε περιγραφή*\\n                            </label>\\n                            <textarea formControlName=\\\"trackingNumber\\\"\\n                                      rows=\\\"1\\\"\\n                                      class=\\\"form-control\\\"\\n                                      [ngClass]=\\\"{ 'is-invalid': submitted && f.trackingNumber.errors }\\\">\\n                        </textarea>\\n                            <div *ngIf=\\\"submitted && f.trackingNumber.errors\\\"\\n                                 class=\\\"invalid-feedback\\\">\\n                                <div *ngIf=\\\"f.trackingNumber.errors.required\\\">Το Tracking Number είναι απαραίτητο</div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"form-row col-12 mb-5\\\">\\n                        <div class=\\\"form-check-inline col-md-12\\\">\\n                            <label for=\\\"needsFilament\\\"\\n                                   class=\\\"form-check-label pr-5\\\">Θέλεις να σου στείλουμε filament?</label>\\n                            <bSwitch name=\\\"needsFilament\\\"\\n                                     [switch-animate]=\\\"'animate'\\\"\\n                                     [switch-size]=\\\"'small'\\\"\\n                                     [switch-on-text]=\\\"'ΝΑΙ'\\\"\\n                                     [switch-off-text]=\\\"'ΟΧΙ'\\\"\\n                                     class=\\\"form-check-input\\\"\\n                                     id=\\\"needsFilament\\\"\\n                                     formControlName=\\\"needsFilament\\\"></bSwitch>\\n                        </div>\\n                    </div>\\n                    <button [disabled]=\\\"loading\\\"\\n                            class=\\\"btn btn-info ml-3\\\"\\n                            type=\\\"submit\\\">\\n                        <span *ngIf=\\\"loading\\\"\\n                              class=\\\"spinner-border spinner-border-sm mr-1\\\"></span>\\n                        Επιβεβαίωση\\n                    </button>\\n                    <button type=\\\"button\\\"\\n                            (click)=\\\"goBack()\\\"\\n                            class=\\\"btn btn-danger ml-3\\\">Πίσω\\n                    </button>\\n                    <div *ngIf=\\\"error || formError\\\"\\n                         class=\\\"alert alert-danger mt-3 mb-0\\\">\\n                        <p>{{error}}</p>\\n                        <p>{{formError}}</p>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '@app/_services';\nimport { Role } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n\n                return false;\n            }\n\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.authenticationService.logout();\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.3.0.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const BACKOFFICE_API_BASE_URL = new InjectionToken<string>('BACKOFFICE_API_BASE_URL');\r\n\r\nexport interface IBackofficeApiService {\r\n    shipments_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<ShipmentModel[]>;\r\n    shipments_Create(model: CreateShipmentModel): Observable<Shipment>;\r\n    shipments_GetShipmentsByUser(id: string): Observable<Shipment[]>;\r\n    shipments_GetById(id: string): Observable<Shipment>;\r\n    shipments_Update(id: string, shipment: ShipmentModel): Observable<void>;\r\n    shipments_Delete(id: string): Observable<void>;\r\n    shipments_GetShipmentsWithUsers(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<AdminShipmentsModel[]>;\r\n    shipments_packageRecieved(shipmentId?: string | undefined, recieved?: boolean | undefined): Observable<void>;\r\n    users_Authenticate(model: AuthenticateModel): Observable<UserModel>;\r\n    users_Register(model: RegisterModel): Observable<void>;\r\n    users_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]>;\r\n    users_GetUsersWithoutFilament(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]>;\r\n    users_deliverFilament(model: UserFilamentModel): Observable<void>;\r\n    users_GetById(id: string): Observable<UserModel>;\r\n    users_Update(id: string, model: UpdateModel): Observable<void>;\r\n    users_Delete(id: string): Observable<void>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BackofficeApiService implements IBackofficeApiService {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(BACKOFFICE_API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"http://hellas3dprintinginventorybackoffice.azurewebsites.net\";\r\n    }\r\n\r\n    shipments_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<ShipmentModel[]> {\r\n        let url_ = this.baseUrl + \"/Shipments?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetAll(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetAll(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<ShipmentModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<ShipmentModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetAll(response: HttpResponseBase): Observable<ShipmentModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(ShipmentModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ShipmentModel[]>(<any>null);\r\n    }\r\n\r\n    shipments_Create(model: CreateShipmentModel): Observable<Shipment> {\r\n        let url_ = this.baseUrl + \"/Shipments\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Create(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Create(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Create(response: HttpResponseBase): Observable<Shipment> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Shipment.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment>(<any>null);\r\n    }\r\n\r\n    shipments_GetShipmentsByUser(id: string): Observable<Shipment[]> {\r\n        let url_ = this.baseUrl + \"/Shipments/user/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetShipmentsByUser(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetShipmentsByUser(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetShipmentsByUser(response: HttpResponseBase): Observable<Shipment[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(Shipment.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment[]>(<any>null);\r\n    }\r\n\r\n    shipments_GetById(id: string): Observable<Shipment> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetById(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetById(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetById(response: HttpResponseBase): Observable<Shipment> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Shipment.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment>(<any>null);\r\n    }\r\n\r\n    shipments_Update(id: string, shipment: ShipmentModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(shipment);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Update(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Update(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Update(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    shipments_Delete(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Delete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Delete(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Delete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    shipments_GetShipmentsWithUsers(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<AdminShipmentsModel[]> {\r\n        let url_ = this.baseUrl + \"/Shipments/pendingShipments?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetShipmentsWithUsers(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetShipmentsWithUsers(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AdminShipmentsModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AdminShipmentsModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetShipmentsWithUsers(response: HttpResponseBase): Observable<AdminShipmentsModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(AdminShipmentsModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AdminShipmentsModel[]>(<any>null);\r\n    }\r\n\r\n    shipments_packageRecieved(shipmentId?: string | undefined, recieved?: boolean | undefined): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/delivered?\";\r\n        if (shipmentId === null)\r\n            throw new Error(\"The parameter 'shipmentId' cannot be null.\");\r\n        else if (shipmentId !== undefined)\r\n            url_ += \"shipmentId=\" + encodeURIComponent(\"\" + shipmentId) + \"&\"; \r\n        if (recieved === null)\r\n            throw new Error(\"The parameter 'recieved' cannot be null.\");\r\n        else if (recieved !== undefined)\r\n            url_ += \"recieved=\" + encodeURIComponent(\"\" + recieved) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_packageRecieved(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_packageRecieved(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_packageRecieved(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_Authenticate(model: AuthenticateModel): Observable<UserModel> {\r\n        let url_ = this.baseUrl + \"/Users/authenticate\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Authenticate(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Authenticate(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Authenticate(response: HttpResponseBase): Observable<UserModel> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = UserModel.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel>(<any>null);\r\n    }\r\n\r\n    users_Register(model: RegisterModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/register\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Register(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Register(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Register(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]> {\r\n        let url_ = this.baseUrl + \"/Users?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetAll(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetAll(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetAll(response: HttpResponseBase): Observable<UserModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UserModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel[]>(<any>null);\r\n    }\r\n\r\n    users_GetUsersWithoutFilament(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]> {\r\n        let url_ = this.baseUrl + \"/Users/filament?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetUsersWithoutFilament(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetUsersWithoutFilament(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetUsersWithoutFilament(response: HttpResponseBase): Observable<UserModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UserModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel[]>(<any>null);\r\n    }\r\n\r\n    users_deliverFilament(model: UserFilamentModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/filament\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_deliverFilament(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_deliverFilament(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_deliverFilament(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_GetById(id: string): Observable<UserModel> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetById(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetById(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetById(response: HttpResponseBase): Observable<UserModel> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = UserModel.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel>(<any>null);\r\n    }\r\n\r\n    users_Update(id: string, model: UpdateModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Update(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Update(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Update(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_Delete(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Delete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Delete(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Delete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\nexport class Exception implements IException {\r\n    stackTrace?: string | undefined;\r\n    message!: string;\r\n    innerException?: Exception | undefined;\r\n    source?: string | undefined;\r\n\r\n    constructor(data?: IException) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.stackTrace = _data[\"StackTrace\"];\r\n            this.message = _data[\"Message\"];\r\n            this.innerException = _data[\"InnerException\"] ? Exception.fromJS(_data[\"InnerException\"]) : <any>undefined;\r\n            this.source = _data[\"Source\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Exception {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Exception();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"StackTrace\"] = this.stackTrace;\r\n        data[\"Message\"] = this.message;\r\n        data[\"InnerException\"] = this.innerException ? this.innerException.toJSON() : <any>undefined;\r\n        data[\"Source\"] = this.source;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IException {\r\n    stackTrace?: string | undefined;\r\n    message: string;\r\n    innerException?: Exception | undefined;\r\n    source?: string | undefined;\r\n}\r\n\r\nexport class AppException extends Exception implements IAppException {\r\n\r\n    constructor(data?: IAppException) {\r\n        super(data);\r\n    }\r\n\r\n    init(_data?: any) {\r\n        super.init(_data);\r\n    }\r\n\r\n    static fromJS(data: any): AppException {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AppException();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        super.toJSON(data);\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAppException extends IException {\r\n}\r\n\r\nexport class ShipmentModel implements IShipmentModel {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n\r\n    constructor(data?: IShipmentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ShipmentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ShipmentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IShipmentModel {\r\n    id: string;\r\n    quantity: number;\r\n    minQuantity: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n}\r\n\r\nexport class ProblemDetails implements IProblemDetails {\r\n    type?: string | undefined;\r\n    title?: string | undefined;\r\n    status?: number | undefined;\r\n    detail?: string | undefined;\r\n    instance?: string | undefined;\r\n    extensions?: { [key: string]: any; } | undefined;\r\n\r\n    constructor(data?: IProblemDetails) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.type = _data[\"type\"];\r\n            this.title = _data[\"title\"];\r\n            this.status = _data[\"status\"];\r\n            this.detail = _data[\"detail\"];\r\n            this.instance = _data[\"instance\"];\r\n            if (_data[\"extensions\"]) {\r\n                this.extensions = {} as any;\r\n                for (let key in _data[\"extensions\"]) {\r\n                    if (_data[\"extensions\"].hasOwnProperty(key))\r\n                        this.extensions![key] = _data[\"extensions\"][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ProblemDetails {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ProblemDetails();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"type\"] = this.type;\r\n        data[\"title\"] = this.title;\r\n        data[\"status\"] = this.status;\r\n        data[\"detail\"] = this.detail;\r\n        data[\"instance\"] = this.instance;\r\n        if (this.extensions) {\r\n            data[\"extensions\"] = {};\r\n            for (let key in this.extensions) {\r\n                if (this.extensions.hasOwnProperty(key))\r\n                    data[\"extensions\"][key] = this.extensions[key];\r\n            }\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IProblemDetails {\r\n    type?: string | undefined;\r\n    title?: string | undefined;\r\n    status?: number | undefined;\r\n    detail?: string | undefined;\r\n    instance?: string | undefined;\r\n    extensions?: { [key: string]: any; } | undefined;\r\n}\r\n\r\nexport class Shipment implements IShipment {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    userId!: string;\r\n    user?: User | undefined;\r\n\r\n    constructor(data?: IShipment) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n            this.userId = _data[\"userId\"];\r\n            this.user = _data[\"user\"] ? User.fromJS(_data[\"user\"]) : <any>undefined;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Shipment {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Shipment();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        data[\"userId\"] = this.userId;\r\n        data[\"user\"] = this.user ? this.user.toJSON() : <any>undefined;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IShipment {\r\n    id: string;\r\n    quantity: number;\r\n    minQuantity: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n    userId: string;\r\n    user?: User | undefined;\r\n}\r\n\r\nexport class User implements IUser {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    email?: string | undefined;\r\n    passwordHash?: string | undefined;\r\n    passwordSalt?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    address?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime!: number;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    shipments?: Shipment[] | undefined;\r\n\r\n    constructor(data?: IUser) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.email = _data[\"email\"];\r\n            this.passwordHash = _data[\"passwordHash\"];\r\n            this.passwordSalt = _data[\"passwordSalt\"];\r\n            this.role = _data[\"role\"];\r\n            this.token = _data[\"token\"];\r\n            this.address = _data[\"address\"];\r\n            this.productionDate = _data[\"productionDate\"] ? new Date(_data[\"productionDate\"].toString()) : <any>undefined;\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            if (Array.isArray(_data[\"shipments\"])) {\r\n                this.shipments = [] as any;\r\n                for (let item of _data[\"shipments\"])\r\n                    this.shipments!.push(Shipment.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): User {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new User();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"email\"] = this.email;\r\n        data[\"passwordHash\"] = this.passwordHash;\r\n        data[\"passwordSalt\"] = this.passwordSalt;\r\n        data[\"role\"] = this.role;\r\n        data[\"token\"] = this.token;\r\n        data[\"address\"] = this.address;\r\n        data[\"productionDate\"] = this.productionDate ? this.productionDate.toISOString() : <any>undefined;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        if (Array.isArray(this.shipments)) {\r\n            data[\"shipments\"] = [];\r\n            for (let item of this.shipments)\r\n                data[\"shipments\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUser {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    email?: string | undefined;\r\n    passwordHash?: string | undefined;\r\n    passwordSalt?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    address?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime: number;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    shipments?: Shipment[] | undefined;\r\n}\r\n\r\nexport class CreateShipmentModel implements ICreateShipmentModel {\r\n    id!: string;\r\n    quantity!: number;\r\n    fileName?: string | undefined;\r\n    minQuantity!: number;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    needsFilament!: boolean;\r\n\r\n    constructor(data?: ICreateShipmentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CreateShipmentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CreateShipmentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ICreateShipmentModel {\r\n    id: string;\r\n    quantity: number;\r\n    fileName?: string | undefined;\r\n    minQuantity: number;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n    needsFilament: boolean;\r\n}\r\n\r\nexport class AdminShipmentsModel implements IAdminShipmentsModel {\r\n    shipmentId!: string;\r\n    userId!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    printerActive!: boolean;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    recieved!: boolean;\r\n\r\n    constructor(data?: IAdminShipmentsModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.shipmentId = _data[\"shipmentId\"];\r\n            this.userId = _data[\"userId\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            this.recieved = _data[\"recieved\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AdminShipmentsModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AdminShipmentsModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"shipmentId\"] = this.shipmentId;\r\n        data[\"userId\"] = this.userId;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        data[\"recieved\"] = this.recieved;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAdminShipmentsModel {\r\n    shipmentId: string;\r\n    userId: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    printerActive: boolean;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    recieved: boolean;\r\n}\r\n\r\nexport class UserModel implements IUserModel {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    address?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    batchRequiredTime!: number;\r\n    shipments?: Shipment[] | undefined;\r\n\r\n    constructor(data?: IUserModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.address = _data[\"address\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.role = _data[\"role\"];\r\n            this.token = _data[\"token\"];\r\n            this.productionDate = _data[\"productionDate\"] ? new Date(_data[\"productionDate\"].toString()) : <any>undefined;\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n            if (Array.isArray(_data[\"shipments\"])) {\r\n                this.shipments = [] as any;\r\n                for (let item of _data[\"shipments\"])\r\n                    this.shipments!.push(Shipment.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"address\"] = this.address;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"role\"] = this.role;\r\n        data[\"token\"] = this.token;\r\n        data[\"productionDate\"] = this.productionDate ? this.productionDate.toISOString() : <any>undefined;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        if (Array.isArray(this.shipments)) {\r\n            data[\"shipments\"] = [];\r\n            for (let item of this.shipments)\r\n                data[\"shipments\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUserModel {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    address?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    batchRequiredTime: number;\r\n    shipments?: Shipment[] | undefined;\r\n}\r\n\r\nexport class AuthenticateModel implements IAuthenticateModel {\r\n    username!: string;\r\n    password!: string;\r\n\r\n    constructor(data?: IAuthenticateModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.username = _data[\"username\"];\r\n            this.password = _data[\"password\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AuthenticateModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AuthenticateModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"username\"] = this.username;\r\n        data[\"password\"] = this.password;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAuthenticateModel {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport class RegisterModel implements IRegisterModel {\r\n    firstName!: string;\r\n    lastName!: string;\r\n    username!: string;\r\n    email!: string;\r\n    phoneNumber!: string;\r\n    password!: string;\r\n    address?: string | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime!: number;\r\n\r\n    constructor(data?: IRegisterModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.password = _data[\"password\"];\r\n            this.address = _data[\"address\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): RegisterModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new RegisterModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"password\"] = this.password;\r\n        data[\"address\"] = this.address;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IRegisterModel {\r\n    firstName: string;\r\n    lastName: string;\r\n    username: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n    address?: string | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime: number;\r\n}\r\n\r\nexport class UpdateModel implements IUpdateModel {\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    password?: string | undefined;\r\n    newPassword?: string | undefined;\r\n    address!: string;\r\n    printerActive!: boolean;\r\n    printerModel!: string;\r\n    batchRequiredTime!: number;\r\n\r\n    constructor(data?: IUpdateModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.role = _data[\"role\"];\r\n            this.password = _data[\"password\"];\r\n            this.newPassword = _data[\"newPassword\"];\r\n            this.address = _data[\"address\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpdateModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpdateModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"role\"] = this.role;\r\n        data[\"password\"] = this.password;\r\n        data[\"newPassword\"] = this.newPassword;\r\n        data[\"address\"] = this.address;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUpdateModel {\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    password?: string | undefined;\r\n    newPassword?: string | undefined;\r\n    address: string;\r\n    printerActive: boolean;\r\n    printerModel: string;\r\n    batchRequiredTime: number;\r\n}\r\n\r\nexport class UserFilamentModel implements IUserFilamentModel {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    needsFilament!: boolean;\r\n\r\n    constructor(data?: IUserFilamentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserFilamentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserFilamentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUserFilamentModel {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    needsFilament: boolean;\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    message: string;\r\n    status: number; \r\n    response: string; \r\n    headers: { [key: string]: any; };\r\n    result: any; \r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader(); \r\n            reader.onload = event => { \r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob); \r\n        }\r\n    });\r\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\r\nexport * from './backend';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to api url\n        const currentUser = this.authenticationService.currentUserValue;\n        const isLoggedIn = currentUser && currentUser.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","export default \".search {\\n  padding: 8px;\\n  margin: 15px auto;\\n  font-size: 14px;\\n  display: block;\\n  background: transparent;\\n  width: 100%;\\n  border: none;\\n  border-bottom: 1px solid #5985ee;\\n}\\n\\n@media screen and (max-width: 800px) {\\n  .desktop-hidden {\\n    display: initial;\\n  }\\n\\n  .mobile-hidden {\\n    display: none;\\n  }\\n}\\n\\n@media screen and (min-width: 800px) {\\n  .desktop-hidden {\\n    display: none;\\n  }\\n\\n  .mobile-hidden {\\n    display: initial;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvX2hlbHBlcnMvbGlzdC12aWV3L0M6XFxVc2Vyc1xcU3RyYXRvc1BhbGFpb2xvZ29zXFxzb3VyY2VcXHJlcG9zXFxQdDRyXFxIZWxsYXMtQ09WSUQxOS0zRC1QcmludGluZy1JbnZlbnRvcnkvc3JjXFxhcHBcXF9oZWxwZXJzXFxsaXN0LXZpZXdcXGxpc3Qtdmlldy5jb21wb25lbnQuc2NzcyIsInNyYy9hcHAvX2hlbHBlcnMvbGlzdC12aWV3L2xpc3Qtdmlldy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLFlBQUE7RUFDQSxpQkFBQTtFQUNBLGVBQUE7RUFDQSxjQUFBO0VBQ0EsdUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtFQUNBLGdDQUFBO0FDQ0o7O0FERUE7RUFDSTtJQUNFLGdCQUFBO0VDQ0o7O0VEQ0U7SUFDRSxhQUFBO0VDRUo7QUFDRjs7QURBRTtFQUNFO0lBQ0UsYUFBQTtFQ0VKOztFREFFO0lBQ0UsZ0JBQUE7RUNHSjtBQUNGIiwiZmlsZSI6InNyYy9hcHAvX2hlbHBlcnMvbGlzdC12aWV3L2xpc3Qtdmlldy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zZWFyY2gge1xyXG4gICAgcGFkZGluZzogOHB4O1xyXG4gICAgbWFyZ2luOiAxNXB4IGF1dG87XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgIzU5ODVlZTtcclxufVxyXG5cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogODAwcHgpIHtcclxuICAgIC5kZXNrdG9wLWhpZGRlbiB7XHJcbiAgICAgIGRpc3BsYXk6IGluaXRpYWw7XHJcbiAgICB9XHJcbiAgICAubW9iaWxlLWhpZGRlbiB7XHJcbiAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICB9XHJcbiAgfVxyXG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDgwMHB4KSB7XHJcbiAgICAuZGVza3RvcC1oaWRkZW4ge1xyXG4gICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgfVxyXG4gICAgLm1vYmlsZS1oaWRkZW4ge1xyXG4gICAgICBkaXNwbGF5OiBpbml0aWFsO1xyXG4gICAgfVxyXG4gIH0iLCIuc2VhcmNoIHtcbiAgcGFkZGluZzogOHB4O1xuICBtYXJnaW46IDE1cHggYXV0bztcbiAgZm9udC1zaXplOiAxNHB4O1xuICBkaXNwbGF5OiBibG9jaztcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG4gIHdpZHRoOiAxMDAlO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjNTk4NWVlO1xufVxuXG5AbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA4MDBweCkge1xuICAuZGVza3RvcC1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGluaXRpYWw7XG4gIH1cblxuICAubW9iaWxlLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbiAgfVxufVxuQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogODAwcHgpIHtcbiAgLmRlc2t0b3AtaGlkZGVuIHtcbiAgICBkaXNwbGF5OiBub25lO1xuICB9XG5cbiAgLm1vYmlsZS1oaWRkZW4ge1xuICAgIGRpc3BsYXk6IGluaXRpYWw7XG4gIH1cbn0iXX0= */\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\nimport { fromEvent } from 'rxjs';\r\nimport { map, filter, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ListView, SortDirection } from './models/list-view';\r\nimport { QueryParameters } from './models/query-parameters';\r\nimport { SearchEvent } from './models/search-event';\r\n\r\n@Component({\r\n    selector: 'app-list-view',\r\n    templateUrl: './list-view.component.html',\r\n    styleUrls: ['./list-view.component.scss']\r\n})\r\nexport class ListViewComponent extends ListView implements OnInit, OnDestroy {\r\n    @ViewChild('filterInput', { static: true }) private _filterInput: ElementRef;\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.queryParamsSubscription = this.route.queryParams.subscribe((params: Params) => {\r\n            this.parseQueryParams(params);\r\n            this.doSearch();\r\n        });\r\n        fromEvent(this._filterInput.nativeElement, 'keyup').pipe(\r\n            map((event: any) => {\r\n                return event.target.value; // Get input value.\r\n            }),\r\n            filter(inputValue => inputValue.length >= this.minimumSearchCharacters || inputValue.length === 0), // If character length greater than minimumSearchCharacters setting.\r\n            debounceTime(1000), // Time in milliseconds between key events.\r\n            distinctUntilChanged() // If previous query is different from current.\r\n        ).subscribe(_ => {\r\n            this.setFilter();\r\n        });\r\n        this.showFooter ? this.showFooter = 0 : this.showFooter = 50;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.queryParamsSubscription) {\r\n            this.queryParamsSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public setPage(event: { count: number, limit: number, offset: number, pageSize: number }): void {\r\n        this.page = event.offset + 1;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    public setSort(event: any): void {\r\n        const sort = event.sorts[event.sorts.length - 1];\r\n        this.sortField = sort.prop;\r\n        this.sortDirection = sort.dir === 'asc' ? SortDirection.Asc : SortDirection.Desc;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    private setFilter() {\r\n        if (this.searchTerm.length === 0) {\r\n            this.searchTerm = undefined;\r\n        }\r\n        this.page = 1;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    private parseQueryParams(params: Params): void {\r\n        this.page = +(params[QueryParameters.PAGE] || 1);\r\n        this.dataTable.offset = this.page - 1;\r\n        this.rowsPerPage = +(params[QueryParameters.PAGE_SIZE] || this.rowsPerPage || this.defaultRowsPerPage)\r\n        this.sortField = params[QueryParameters.SORT_FIELD] || this.defaultSortField || undefined;\r\n        this.sortDirection = (params[QueryParameters.SORT_DIRECTION] || this.defaultSortDirection || undefined) as SortDirection;\r\n        if (this.sortField) {\r\n            this.dataTable.sorts.splice(0, this.dataTable.sorts.length);\r\n            this.dataTable.sorts.push({ prop: this.sortField, dir: this.sortDirection.toLowerCase() || 'asc' });\r\n        }\r\n        this.searchTerm = params[QueryParameters.SEARCH_TERM] || undefined;\r\n    }\r\n\r\n    private changeSearchLocation(): void {\r\n        const params = {};\r\n        params[QueryParameters.PAGE] = this.page;\r\n        params[QueryParameters.PAGE_SIZE] = this.rowsPerPage || this.defaultRowsPerPage;\r\n        params[QueryParameters.SORT_FIELD] = this.sortField || this.defaultSortField || undefined;\r\n        params[QueryParameters.SORT_DIRECTION] = this.sortDirection;\r\n        params[QueryParameters.SEARCH_TERM] = this.searchTerm;\r\n        this.router.navigate([], { relativeTo: this.route, queryParams: params });\r\n    }\r\n\r\n    private doSearch(): void {\r\n        this.search.emit(new SearchEvent(\r\n            this.page,\r\n            this.rowsPerPage,\r\n            this.sortField ? `${this.sortField}${this.sortDirection === SortDirection.Asc ? '+' : '-'}` : undefined,\r\n            this.searchTerm || undefined\r\n        ));\r\n    }\r\n\r\n    private isEmptyObject(object: any): boolean {\r\n        return Object.entries(object).length === 0 && object.constructor === Object;\r\n    }\r\n}\r\n","import { Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\n\r\nimport { TableColumn, DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { Subscription } from 'rxjs';\r\nimport { SearchEvent } from './search-event';\r\n\r\nexport class ListView {\r\n    // Properties.\r\n    @ViewChild('dataTable', { static: true }) protected dataTable: DatatableComponent;\r\n    @ViewChild('emailTemplate', { static: true }) public emailTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('phoneNumberTemplate', { static: true }) public phoneNumberTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('dateTimeTemplate', { static: true }) public dateTimeTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('dateTemplate', { static: true }) public dateTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('booleanTemplate', { static: true }) public booleanTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('usernameTemplate', { static: true }) public usernameTemplate: TemplateRef<HTMLElement>;\r\n    @Output() protected search: EventEmitter<SearchEvent> = new EventEmitter();\r\n    @Input() public rows: any[];\r\n    @Input() public rowsPerPage: number;\r\n    @Input() public columns: TableColumn[];\r\n    @Input() public count: number;\r\n    @Input() public defaultSortField?: string;\r\n    @Input() public defaultSortDirection?: SortDirection;\r\n    @Input() public isLoading = false;\r\n    @Input() public clientSide = false;\r\n    @Input() public canFilter = false;\r\n    @Input() public emptyMessage: string;\r\n    @Input() public showFooter;\r\n    public minimumSearchCharacters = 3;\r\n    public searchTerm?: string;\r\n    protected queryParamsSubscription: Subscription;\r\n    protected page = 1;\r\n    protected defaultRowsPerPage = 20;\r\n    protected sortField?: string;\r\n    protected sortDirection?: SortDirection;\r\n}\r\n\r\nexport enum SortDirection {\r\n    Asc = 'Asc',\r\n    Desc = 'Desc'\r\n}\r\n","// tslint:disable-next-line: no-namespace\r\nexport namespace QueryParameters {\r\n    export const PAGE_SIZE = 'size';\r\n    export const PAGE = 'page';\r\n    export const SEARCH_TERM = 'query';\r\n    export const SORT_FIELD = 'sort';\r\n    export const SORT_DIRECTION = 'dir';\r\n}\r\n","export class SearchEvent {\r\n    constructor(public page: number, public pageSize: number, public sortField?: string, public searchTerm?: string) { }\r\n}\r\n","export * from './role';\nexport * from './user';\nexport * from './shipment';\n","export enum Role {\n    User = 'User',\n    Admin = 'Admin'\n}\n","export class Shipment {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string;\r\n    trackingNumber?: string;\r\n    shippingCompany?: string;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    needsFilament!: boolean;\r\n}\r\n","export class User {\n    id!: string;\n    firstName?: string;\n    lastName?: string;\n    username?: string;\n    phoneNumber?: string;\n    email?: string;\n    password?: string;\n    role?: string;\n    token?: string;\n    address?: string;\n    productionDate?: Date;\n    printerActive!: boolean;\n    printerModel?: string;\n    batchRequiredTime!: number;\n    shippedQuantity?: number;\n    latestShippedDate?: Date;\n    needsFilament!: boolean;\n}\n","import { BackofficeApiService, AuthenticateModel, UserModel, RegisterModel, UpdateModel } from './../_helpers/backend';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<UserModel>;\n    public currentUser: Observable<UserModel>;\n\n    constructor(private backoffice: BackofficeApiService) {\n        this.currentUserSubject = new BehaviorSubject<UserModel>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): UserModel {\n        return this.currentUserSubject.value;\n    }\n\n    login(model: AuthenticateModel) {\n        return this.backoffice.users_Authenticate(model)\n            .pipe(map(user => {\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    logout(): void {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n\n    register(model: RegisterModel) {\n        return this.backoffice.users_Register(model).pipe(error => error);\n    }\n\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './shipment.service';\n","import { UserService } from '@app/_services';\r\nimport { UserModel, Shipment, CreateShipmentModel, AdminShipmentsModel, ShipmentModel } from './../_helpers/backend';\r\nimport { BackofficeApiService } from '@app/_helpers';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthenticationService } from '.';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, AsyncSubject } from 'rxjs';\r\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ShipmentService {\r\n    private _shipment: AsyncSubject<Shipment>;\r\n    private _shipments: AsyncSubject<Shipment[]>;\r\n\r\n    constructor(\r\n        private backoffice: BackofficeApiService,\r\n        private _authenticationService: AuthenticationService,\r\n        private _shipmentervice: UserService\r\n    ) { }\r\n\r\n    getAll(event: SearchEvent): Observable<ShipmentModel[]> {\r\n        return this.backoffice.shipments_GetAll(event.page, event.pageSize, event.sortField, event.searchTerm);\r\n    }\r\n\r\n    getById(id: string): Observable<Shipment> {\r\n        if (!this._shipment || id !== null) {\r\n            this._shipment = new AsyncSubject<Shipment>();\r\n            this.backoffice.shipments_GetById(id).subscribe((shipment: Shipment) => {\r\n                this._shipment.next(shipment);\r\n                this._shipment.complete();\r\n            });\r\n        }\r\n        return this._shipment;\r\n    }\r\n\r\n    getShipmentsByUser(id: string): Observable<Shipment[]> {\r\n        if (!this._shipments || id !== null) {\r\n            this._shipments = new AsyncSubject<Shipment[]>();\r\n            this.backoffice.shipments_GetShipmentsByUser(id).subscribe((shipment: Shipment[]) => {\r\n                this._shipments.next(shipment);\r\n                this._shipments.complete();\r\n            });\r\n        }\r\n        return this._shipments;\r\n    }\r\n\r\n    createShipment(shipment: CreateShipmentModel) {\r\n        return this.backoffice.shipments_Create(shipment);\r\n    }\r\n\r\n    getUsersWithShipments(event: SearchEvent): Observable<AdminShipmentsModel[]> {\r\n        return this.backoffice.shipments_GetShipmentsWithUsers(event.page, event.pageSize, event.sortField, event.searchTerm);\r\n    }\r\n\r\n    packageRecieved(packageId: string, recieved: boolean ): Observable<void> {\r\n        return this.backoffice.shipments_packageRecieved(packageId, recieved);\r\n    }\r\n}\r\n\r\n","import { SearchEvent } from './../_helpers/list-view/models/search-event';\nimport { BackofficeApiService, User, UserModel, AdminShipmentsModel, UpdateModel, UserFilamentModel } from './../_helpers/backend';\nimport { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\nimport { publishReplay, refCount } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    private _users: AsyncSubject<User>;\n\n    constructor(private backoffice: BackofficeApiService) { }\n\n    getAll(event: SearchEvent): Observable<UserModel[]> {\n        return this.backoffice.users_GetAll(event.page, event.pageSize, event.sortField, event.searchTerm);\n    }\n\n    GetUsersWithoutFilament(event: SearchEvent): Observable<UserModel[]> {\n        return this.backoffice.users_GetUsersWithoutFilament(event.page, event.pageSize, event.sortField, event.searchTerm);\n    }\n\n    getById(id: string): Observable<UserModel> {\n        if (!this._users || id !== null) {\n            this._users = new AsyncSubject<User>();\n            this.backoffice.users_GetById(id).subscribe((user: User) => {\n                this._users.next(user);\n                this._users.complete();\n            });\n        }\n        return this._users;\n    }\n\n    update(userId: string, model: UpdateModel) {\n        return this.backoffice.users_Update(userId, model).pipe((error) => error);\n    }\n\n    deliverFilament(user: UserFilamentModel) {\n        return this.backoffice.users_deliverFilament(user);\n    }\n}\n","import { UserModel, Shipment, AdminShipmentsModel } from './../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, ShipmentService, AuthenticationService } from '@app/_services';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\n\n@Component({ templateUrl: 'admin.component.html' })\nexport class AdminComponent implements OnInit {\n    @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n    @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n    loading = false;\n    deliveryLoading = false;\n    pendingUsers: AdminShipmentsModel[] = new Array<AdminShipmentsModel>();\n    columns: TableColumn[] = [];\n    private event: SearchEvent;\n\n    constructor(\n        private userService: UserService,\n        private shipmentService: ShipmentService,\n        private authenticationService: AuthenticationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.columns = [\n            { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: false, sortable: true, resizeable: false },\n            { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippedQuantity', name: 'Total Shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippingCompany', name: 'Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'trackingNumber', name: 'Tracking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            {\n                prop: 'latestShippedDate', name: 'Last Date Shipped', draggable: false, canAutoResize: true, sortable: true,\n                resizeable: false, cellTemplate: this._dateTemplate\n            },\n            {\n                prop: 'recieved', name: 'Recieved', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n                cellTemplate: this._deliveryTemplate\n            }\n        ];\n\n        this.pendingUsers.map(x => x.latestShippedDate = new Date());\n    }\n\n    getUsersWithShipments(event: SearchEvent): void {\n        this.event = event;\n        this.shipmentService.getUsersWithShipments(event).pipe(first()).subscribe((users: AdminShipmentsModel[]) => {\n            this.loading = false;\n            this.pendingUsers = users;\n        });\n    }\n\n    onRecieved(row) {\n        this.deliveryLoading = true;\n        this.shipmentService.packageRecieved(row.shipmentId, true).subscribe(() => {\n            this.deliveryLoading = false;\n            this.getUsersWithShipments(this.event);\n        });\n    }\n}\n","import { UserFilamentModel } from './../../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { User } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { UserService } from '@app/_services';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-filament',\n  templateUrl: './filament.component.html'\n})\nexport class FilamentComponent implements OnInit {\n  @ViewChild('actionsTemplate', { static: true }) private _actionsTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  deliveryLoading = false;\n  users: User[] = new Array<User>();\n  columns: TableColumn[] = [];\n  private event: SearchEvent;\n  private _newUser: UserFilamentModel = new UserFilamentModel();\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.columns = [\n      { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'printerModel', name: 'Printer Model', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'latestShippedDate', name: 'Latest Shipped Date', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n        cellTemplate: this._dateTemplate\n      },\n      { prop: 'shippedQuantity', name: 'Shipped Quantity', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'id', name: 'Actions', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._actionsTemplate, cellClass: 'd-flex align-items-center'\n      },\n    ];\n  }\n\n  getUsers(event: SearchEvent): void {\n    this.event = event;\n    this.userService.GetUsersWithoutFilament(event).pipe(first()).subscribe((users: User[]) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n\n  sendFilament(row: User) {\n    this._newUser.id = row.id;\n    this._newUser.firstName = row.firstName;\n    this._newUser.lastName = row.lastName;\n    this._newUser.needsFilament = row.needsFilament;\n    this.userService.deliverFilament(this._newUser).subscribe(() => {\n      this.deliveryLoading = false;\n      this.getUsers(this.event);\n    });\n  }\n\n}\n","export * from './admin.component';","import { ShipmentModel } from './../../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { AdminShipmentsModel } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\nimport { UserService, ShipmentService, AuthenticationService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shipments',\n  templateUrl: './shipments.component.html'\n})\nexport class ShipmentsComponent implements OnInit {\n  @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  deliveryLoading = false;\n  pendingShipments: ShipmentModel[] = new Array<ShipmentModel>();\n  columns: TableColumn[] = [];\n  private event: SearchEvent;\n\n  constructor(\n    private userService: UserService,\n    private shipmentService: ShipmentService,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.columns = [\n      { prop: 'quantity', name: 'First Name', draggable: false, canAutoResize: false, sortable: true, resizeable: false },\n      { prop: 'shippingCompany', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'trackingNumber', name: 'Total Shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'dateShipped', name: 'Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n        cellTemplate: this._dateTemplate\n      },\n      { prop: 'fileName', name: 'Tracking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'recieved', name: 'Recieved', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._deliveryTemplate\n      }\n    ];\n\n    this.pendingShipments.map(x => x.dateShipped = new Date());\n  }\n\n  getUsersWithShipments(event: SearchEvent): void {\n    this.event = event;\n    this.shipmentService.getAll(event).pipe(first()).subscribe((users: ShipmentModel[]) => {\n      this.loading = false;\n      this.pendingShipments = users;\n    });\n  }\n\n  onRecieved(row) {\n    this.deliveryLoading = true;\n    this.shipmentService.packageRecieved(row.shipmentId, true).subscribe(() => {\n      this.deliveryLoading = false;\n      this.getUsersWithShipments(this.event);\n    });\n  }\n}\n","import { first } from 'rxjs/operators';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { User } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { UserService } from '@app/_services';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent implements OnInit {\n  @ViewChild('actionsTemplate', { static: true }) private _actionsTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  users: User[] = new Array<User>();\n  columns: TableColumn[] = [];\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.users.map(x => x.latestShippedDate = new Date());\n    this.users.map(x => x.productionDate = new Date());\n\n    this.columns = [\n      { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'username', name: 'Username', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'role', name: 'Role', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'id', name: 'Actions', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._actionsTemplate, cellClass: 'd-flex align-items-center'\n      }\n    ];\n  }\n\n  getUsers(event: SearchEvent): void {\n    this.userService.getAll(event).pipe(first()).subscribe((users: User[]) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n\n}\n","import { UserModel } from './../../../_helpers/backend';\nimport { User } from '@app/_models';\nimport { UserService } from '@app/_services';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html'\n})\nexport class ViewComponent implements OnInit {\n  public user: User = new User();\n\n  constructor(private _route: ActivatedRoute, private _userService: UserService) { }\n\n  ngOnInit() {\n    const userId = this._route.snapshot.params.id;\n    this.user.productionDate = new Date();\n    this.user.latestShippedDate = new Date();\n    this.user.printerActive = true;\n    this.user.needsFilament = true;\n\n    this._userService.getById(userId).subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n}\n","import { UserModel } from './_helpers/backend';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User, Role } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    currentUser: UserModel;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    get isAdmin() {\n        return this.currentUser && this.currentUser.role === Role.Admin as keyof typeof Role;\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}","import { RouterModule } from '@angular/router';\nimport { ListViewComponent } from './_helpers/list-view/list-view.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { appRoutingModule } from './app.routing';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { JwtInterceptor, ErrorInterceptor } from './_helpers';\nimport { JwBootstrapSwitchNg2Module } from 'jw-bootstrap-switch-ng2';\n\nimport { HomeComponent } from './home';\nimport { AdminComponent } from './admin';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { ShipmentComponent } from './shipment';\nimport { UsersComponent } from './admin/users/users.component';\nimport { ViewComponent } from './admin/users/view/view.component';\nimport { ShipmentsComponent } from './admin/shipments/shipments.component';\nimport { FilamentComponent } from './admin/filament/filament.component';\nimport { ProfileComponent } from './home/profile/profile.component';\n\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        RouterModule,\n        HttpClientModule,\n        appRoutingModule,\n        FormsModule,\n        JwBootstrapSwitchNg2Module,\n        NgxDatatableModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AdminComponent,\n        LoginComponent,\n        RegisterComponent,\n        ShipmentComponent,\n        ListViewComponent,\n        UsersComponent,\n        ViewComponent,\n        ShipmentsComponent,\n        FilamentComponent,\n        ProfileComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { ProfileComponent } from './home/profile/profile.component';\nimport { FilamentComponent } from './admin/filament/filament.component';\nimport { ShipmentsComponent } from './admin/shipments/shipments.component';\nimport { ViewComponent } from './admin/users/view/view.component';\nimport { UsersComponent } from './admin/users/users.component';\nimport { ShipmentComponent } from './shipment/shipment.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AdminComponent } from './admin';\nimport { LoginComponent } from './login';\nimport { AuthGuard } from './_helpers/auth.guard';\nimport { Role } from './_models';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.User] }\n    },\n    {\n        path: 'admin',\n        component: AdminComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/users',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/filament',\n        component: FilamentComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/shipments',\n        component: ShipmentsComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/users/:id/view',\n        component: ViewComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'shipments',\n        component: ShipmentComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.User] }\n    },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { UserModel, Shipment } from './../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService, ShipmentService } from '@app/_services';\nimport { TableColumn } from '@swimlane/ngx-datatable';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent implements OnInit {\n    @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n    @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n    loading = false;\n    currentUser: UserModel = new UserModel();\n    shipments: Shipment[] = new Array<Shipment>();\n    columns: TableColumn[] = [];\n\n    constructor(\n        private userService: UserService,\n        private shipmentService: ShipmentService,\n        private authenticationService: AuthenticationService\n    ) {\n        this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.columns = [\n            { prop: 'quantity', name: '#', draggable: false, canAutoResize: false, sortable: true, resizeable: false },\n            { prop: 'trackingNumber', name: 'Trancking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippingCompany', name: 'Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            {\n                prop: 'dateShipped', name: 'Date shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n                cellTemplate: this._dateTemplate\n            },\n            {\n                prop: 'recieved', name: 'Status', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n                cellTemplate: this._deliveryTemplate\n            }\n        ];\n\n        this.shipments.map(x => x.dateShipped = new Date());\n        this.currentUser.latestShippedDate = new Date();\n    }\n\n    getShipments(): void {\n        this.userService.getById(this.currentUser.id).pipe(first()).subscribe((user: UserModel) => {\n            this.loading = false;\n            this.currentUser = user;\n        });\n        this.shipmentService.getShipmentsByUser(this.currentUser.id).subscribe((shipments: Shipment[]) => {\n            this.shipments = shipments;\n        });\n    }\n}\n","export * from './home.component';","import { User } from './../../_models/user';\nimport { UpdateModel, UserModel } from './../../_helpers/backend';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService, UserService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  updateForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  user: User = new User();\n  updatedUser = new UpdateModel();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _authenticationService: AuthenticationService,\n    private _userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.updateForm = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneNumber: ['', [Validators.required,\n      Validators.pattern(/^[0-9]{10,11}$/)]],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      address: ['', Validators.required],\n      printerModel: ['', Validators.required],\n      batchRequiredTime: [0, Validators.required],\n      printerActive: [true],\n      username: ['', Validators.required],\n      password: ['', [Validators.required,\n      Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]],\n      newPassword: ['', Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n\n    // get user details\n    this._userService.getById(this._authenticationService.currentUserValue.id).subscribe((user: User) => {\n      this.user = user;\n      this.f.firstName.setValue(user.firstName);\n      this.f.lastName.setValue(user.lastName);\n      this.f.phoneNumber.setValue(user.phoneNumber);\n      this.f.email.setValue(user.email);\n      this.f.address.setValue(user.address);\n      this.f.printerModel.setValue(this.user.printerModel);\n      this.f.batchRequiredTime.setValue(user.batchRequiredTime);\n      this.f.printerActive.setValue(user.printerActive);\n      this.f.username.setValue(user.username);\n    });\n  }\n\n  get f() { return this.updateForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this.updatedUser.firstName = this.f.firstName.value;\n    this.updatedUser.lastName = this.f.lastName.value;\n    this.updatedUser.phoneNumber = this.f.phoneNumber.value;\n    this.updatedUser.email = this.f.email.value;\n    this.updatedUser.address = this.f.address.value;\n    this.updatedUser.printerModel = this.f.printerModel.value;\n    this.updatedUser.batchRequiredTime = this.f.batchRequiredTime.value;\n    this.updatedUser.printerActive = this.f.printerActive.value;\n    this.updatedUser.password = this.f.password.value;\n    this.updatedUser.newPassword = this.f.newPassword.value;\n    this.updatedUser.username = this.f.username.value;\n    // stop here if form is invalid\n    if (this.updateForm.invalid) {\n      Object.keys(this.updateForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.updateForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n\n    this._userService.update(this._authenticationService.currentUserValue.id, this.updatedUser)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        (error) => {\n          if (error === 'Bad Request') {\n            this.error = 'Incorrect password';\n          } else {\n            this.error = error;\n          }\n          this.loading = false;\n        });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","export * from './login.component';","import { RegisterComponent } from './../register/register.component';\nimport { AuthenticateModel } from './../_helpers/backend';\nimport { User, Role } from '@app/_models';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    private _user: AuthenticateModel = new AuthenticateModel();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        this._user.password = this.f.password.value;\n        this._user.username = this.f.username.value;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this._user)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    localStorage.getItem('role') === Role.Admin ? this.returnUrl = '/' : this.returnUrl = '/admin';\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    if (error === 'Bad Request') {\n                        this.error = 'Username or password is incorrect';\n                    } else {\n                        this.error = error;\n                    }\n                    this.loading = false;\n                });\n    }\n\n    onRegister() {\n        this.router.navigate(['register']);\n    }\n}\n","export * from './register.component';","import { ActivatedRoute, Router } from '@angular/router';\nimport { RegisterModel } from './../_helpers/backend';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { AuthenticationService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  private _user: RegisterModel = new RegisterModel();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _authenticationService: AuthenticationService\n  ) {\n    // redirect to home if already logged in\n    if (this._authenticationService.currentUserValue) {\n      this._router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneNumber: ['', [Validators.required,\n      Validators.pattern(/^[0-9]{10,11}$/)]],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      address: ['', Validators.required],\n      printerModel: ['', Validators.required],\n      // batchRequiredTime: ['', Validators.required],\n      printerActive: [true],\n      username: ['', Validators.required],\n      password: ['', [Validators.required,\n      Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this._user.firstName = this.f.firstName.value;\n    this._user.lastName = this.f.lastName.value;\n    this._user.phoneNumber = this.f.phoneNumber.value;\n    this._user.email = this.f.email.value;\n    this._user.address = this.f.address.value;\n    this._user.printerModel = this.f.printerModel.value;\n    // this._user.batchRequiredTime = this.f.batchRequiredTime.value;\n    this._user.printerActive = this.f.printerActive.value;\n    this._user.password = this.f.password.value;\n    this._user.username = this.f.username.value;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      Object.keys(this.registerForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.registerForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n    this._authenticationService.register(this._user)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        error => {\n          if (error === 'Bad Request') {\n              this.error = 'Username is already taken';\n          } else {\n              this.error = error;\n          }\n          this.loading = false;\n      });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","export * from './shipment.component';\r\n","import { CreateShipmentModel } from './../_helpers/backend';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { ShipmentService } from '@app/_services';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { Shipment } from '@app/_models';\n\n@Component({\n  selector: 'app-shipment',\n  templateUrl: './shipment.component.html'\n})\nexport class ShipmentComponent implements OnInit {\n  shipmentForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  private _shipment: CreateShipmentModel = new CreateShipmentModel();\n  private _currentDate;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _shipmentService: ShipmentService\n  ) { }\n\n  ngOnInit() {\n    this._currentDate = new Date().toISOString().substring(0, 10);\n\n    this.shipmentForm = this._formBuilder.group({\n      quantity: [30, [Validators.required, Validators.min(this._shipment.minQuantity)]],\n      dateShipped: [this._currentDate, Validators.required],\n      trackingNumber: ['', Validators.required],\n      shippingCompany: ['', Validators.required],\n      needsFilament: [false, Validators.required],\n      fileName: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.shipmentForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this._shipment.quantity = this.f.quantity.value;\n    this._shipment.dateShipped = new Date(this.f.dateShipped.value);\n    this._shipment.trackingNumber = this.f.trackingNumber.value;\n    this._shipment.shippingCompany = this.f.shippingCompany.value;\n    this._shipment.needsFilament = this.f.needsFilament.value;\n    this._shipment.fileName = this.f.fileName.value;\n\n    // stop here if form is invalid\n    if (this.shipmentForm.invalid) {\n      Object.keys(this.shipmentForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.shipmentForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key.charAt(0).toUpperCase() + key.slice(1) + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n    this._shipmentService.createShipment(this._shipment)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n    production: false,\n    apiUrl: 'https://hellas3dprintinginventorybackoffice.azurewebsites.net',\n    local: 'http://localhost:4000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}