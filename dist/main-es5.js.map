{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/_helpers/auth.guard.ts","webpack:///src/app/_helpers/backend.ts","webpack:///src/app/_helpers/error.interceptor.ts","webpack:///src/app/_helpers/index.ts","webpack:///src/app/_helpers/jwt.interceptor.ts","webpack:///src/app/_helpers/list-view/list-view.component.ts","webpack:///src/app/_helpers/list-view/list-view.component.html","webpack:///src/app/_helpers/list-view/models/list-view.ts","webpack:///src/app/_helpers/list-view/models/query-parameters.ts","webpack:///src/app/_helpers/list-view/models/search-event.ts","webpack:///src/app/_models/index.ts","webpack:///src/app/_models/role.ts","webpack:///src/app/_models/shipment.ts","webpack:///src/app/_models/user.ts","webpack:///src/app/_services/authentication.service.ts","webpack:///src/app/_services/index.ts","webpack:///src/app/_services/shipment.service.ts","webpack:///src/app/_services/user.service.ts","webpack:///src/app/admin/admin.component.ts","webpack:///src/app/admin/admin.component.html","webpack:///src/app/admin/filament/filament.component.ts","webpack:///src/app/admin/filament/filament.component.html","webpack:///src/app/admin/index.ts","webpack:///src/app/admin/shipments/shipments.component.ts","webpack:///src/app/admin/shipments/shipments.component.html","webpack:///src/app/admin/users/users.component.ts","webpack:///src/app/admin/users/users.component.html","webpack:///src/app/admin/users/view/view.component.ts","webpack:///src/app/admin/users/view/view.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/home/index.ts","webpack:///src/app/home/profile/profile.component.ts","webpack:///src/app/home/profile/profile.component.html","webpack:///src/app/login/index.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/register/index.ts","webpack:///src/app/register/register.component.ts","webpack:///src/app/register/register.component.html","webpack:///src/app/shipment/index.ts","webpack:///src/app/shipment/shipment.component.ts","webpack:///src/app/shipment/shipment.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AuthGuard","router","authenticationService","route","state","currentUser","currentUserValue","data","roles","indexOf","role","navigate","logout","queryParams","returnUrl","url","providedIn","BACKOFFICE_API_BASE_URL","BackofficeApiService","http","baseUrl","jsonParseReviver","undefined","page","size","sort","search","url_","encodeURIComponent","replace","options_","observe","responseType","headers","request","pipe","response_","processShipments_GetAll","response","status","responseBlob","body","error","Blob","_headers","key","get","blobToText","_responseText","result401","resultData401","JSON","parse","AppException","fromJS","throwException","result403","resultData403","result200","resultData200","Array","isArray","item","push","ShipmentModel","model","content_","stringify","processShipments_Create","Shipment","result404","resultData404","ProblemDetails","processShipments_GetShipmentsByUser","result400","resultData400","processShipments_GetById","shipment","processShipments_Update","processShipments_Delete","processShipments_GetShipmentsWithUsers","AdminShipmentsModel","shipmentId","recieved","processShipments_packageRecieved","processUsers_Authenticate","UserModel","processUsers_Register","processUsers_GetAll","processUsers_GetUsersWithoutFilament","processUsers_deliverFilament","processUsers_GetById","processUsers_Update","processUsers_Delete","Exception","property","hasOwnProperty","_data","stackTrace","message","innerException","source","toJSON","result","init","quantity","minQuantity","fileName","trackingNumber","shippingCompany","dateShipped","Date","toString","toISOString","type","title","detail","instance","extensions","userId","user","User","firstName","lastName","username","phoneNumber","email","passwordHash","passwordSalt","token","address","productionDate","printerActive","printerModel","batchRequiredTime","shippedQuantity","latestShippedDate","needsFilament","shipments","CreateShipmentModel","AuthenticateModel","password","RegisterModel","UpdateModel","newPassword","UserFilamentModel","SwaggerException","isSwaggerException","obj","blob","observer","next","complete","reader","FileReader","onload","event","target","readAsText","ErrorInterceptor","handle","err","location","reload","statusText","JwtInterceptor","isLoggedIn","isApiUrl","startsWith","apiUrl","clone","setHeaders","Authorization","ListViewComponent","queryParamsSubscription","subscribe","params","parseQueryParams","doSearch","_filterInput","nativeElement","value","inputValue","length","minimumSearchCharacters","_","setFilter","showFooter","unsubscribe","offset","changeSearchLocation","sorts","sortField","prop","sortDirection","dir","Asc","Desc","searchTerm","PAGE","dataTable","rowsPerPage","PAGE_SIZE","defaultRowsPerPage","SORT_FIELD","defaultSortField","SORT_DIRECTION","defaultSortDirection","splice","toLowerCase","SEARCH_TERM","relativeTo","emit","object","Object","entries","constructor","setPage","setSort","selector","templateUrl","styleUrls","ListView","isLoading","clientSide","canFilter","SortDirection","QueryParameters","SearchEvent","pageSize","Role","AuthenticationService","backoffice","currentUserSubject","localStorage","getItem","asObservable","users_Authenticate","setItem","removeItem","users_Register","ShipmentService","_authenticationService","_shipmentervice","shipments_GetAll","_shipment","shipments_GetById","_shipments","shipments_GetShipmentsByUser","shipments_Create","shipments_GetShipmentsWithUsers","packageId","shipments_packageRecieved","UserService","users_GetAll","users_GetUsersWithoutFilament","_users","users_GetById","users_Update","users_deliverFilament","AdminComponent","userService","shipmentService","loading","deliveryLoading","pendingUsers","columns","name","draggable","canAutoResize","sortable","resizeable","cellTemplate","_dateTemplate","_deliveryTemplate","map","x","getUsersWithShipments","users","row","packageRecieved","FilamentComponent","_newUser","_actionsTemplate","cellClass","GetUsersWithoutFilament","deliverFilament","getUsers","ShipmentsComponent","pendingShipments","getAll","UsersComponent","ViewComponent","_route","_userService","snapshot","getById","AppComponent","Admin","AppModule","provide","useClass","multi","useFactory","imports","declarations","providers","bootstrap","routes","path","component","canActivate","redirectTo","appRoutingModule","forRoot","HomeComponent","getShipmentsByUser","getShipments","ProfileComponent","_formBuilder","_router","submitted","formError","updatedUser","updateForm","group","required","pattern","compose","f","setValue","invalid","controls","forEach","controlErrors","errors","keyError","update","onSubmit","goBack","LoginComponent","formBuilder","_user","loginForm","login","onRegister","RegisterComponent","registerForm","register","ShipmentComponent","_shipmentService","_currentDate","substring","shipmentForm","min","charAt","toUpperCase","slice","createShipment","environment","production","bootstrapModule","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { AuthenticationService } from '@app/_services';\nimport { Role } from '@app/_models';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        const currentUser = this.authenticationService.currentUserValue;\n        if (currentUser) {\n            // check if route is restricted by role\n            if (route.data.roles && route.data.roles.indexOf(currentUser.role) === -1) {\n                // role not authorised so redirect to home page\n                this.router.navigate(['/']);\n\n                return false;\n            }\n\n            // authorised so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.authenticationService.logout();\n        this.router.navigate(['/login'], { queryParams: { returnUrl: state.url } });\n        return false;\n    }\n}\n","/* tslint:disable */\r\n/* eslint-disable */\r\n//----------------------\r\n// <auto-generated>\r\n//     Generated using the NSwag toolchain v13.3.0.0 (NJsonSchema v10.1.11.0 (Newtonsoft.Json v12.0.0.0)) (http://NSwag.org)\r\n// </auto-generated>\r\n//----------------------\r\n// ReSharper disable InconsistentNaming\r\n\r\nimport { mergeMap as _observableMergeMap, catchError as _observableCatch } from 'rxjs/operators';\r\nimport { Observable, throwError as _observableThrow, of as _observableOf } from 'rxjs';\r\nimport { Injectable, Inject, Optional, InjectionToken } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpResponse, HttpResponseBase } from '@angular/common/http';\r\n\r\nexport const BACKOFFICE_API_BASE_URL = new InjectionToken<string>('BACKOFFICE_API_BASE_URL');\r\n\r\nexport interface IBackofficeApiService {\r\n    shipments_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<ShipmentModel[]>;\r\n    shipments_Create(model: CreateShipmentModel): Observable<Shipment>;\r\n    shipments_GetShipmentsByUser(id: string): Observable<Shipment[]>;\r\n    shipments_GetById(id: string): Observable<Shipment>;\r\n    shipments_Update(id: string, shipment: ShipmentModel): Observable<void>;\r\n    shipments_Delete(id: string): Observable<void>;\r\n    shipments_GetShipmentsWithUsers(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<AdminShipmentsModel[]>;\r\n    shipments_packageRecieved(shipmentId?: string | undefined, recieved?: boolean | undefined): Observable<void>;\r\n    users_Authenticate(model: AuthenticateModel): Observable<UserModel>;\r\n    users_Register(model: RegisterModel): Observable<void>;\r\n    users_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]>;\r\n    users_GetUsersWithoutFilament(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]>;\r\n    users_deliverFilament(model: UserFilamentModel): Observable<void>;\r\n    users_GetById(id: string): Observable<UserModel>;\r\n    users_Update(id: string, model: UpdateModel): Observable<void>;\r\n    users_Delete(id: string): Observable<void>;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class BackofficeApiService implements IBackofficeApiService {\r\n    private http: HttpClient;\r\n    private baseUrl: string;\r\n    protected jsonParseReviver: ((key: string, value: any) => any) | undefined = undefined;\r\n\r\n    constructor(@Inject(HttpClient) http: HttpClient, @Optional() @Inject(BACKOFFICE_API_BASE_URL) baseUrl?: string) {\r\n        this.http = http;\r\n        this.baseUrl = baseUrl ? baseUrl : \"http://hellas3dprintinginventory.azurewebsites.net\";\r\n    }\r\n\r\n    shipments_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<ShipmentModel[]> {\r\n        let url_ = this.baseUrl + \"/Shipments?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetAll(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetAll(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<ShipmentModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<ShipmentModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetAll(response: HttpResponseBase): Observable<ShipmentModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(ShipmentModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<ShipmentModel[]>(<any>null);\r\n    }\r\n\r\n    shipments_Create(model: CreateShipmentModel): Observable<Shipment> {\r\n        let url_ = this.baseUrl + \"/Shipments\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Create(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Create(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Create(response: HttpResponseBase): Observable<Shipment> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Shipment.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment>(<any>null);\r\n    }\r\n\r\n    shipments_GetShipmentsByUser(id: string): Observable<Shipment[]> {\r\n        let url_ = this.baseUrl + \"/Shipments/user/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetShipmentsByUser(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetShipmentsByUser(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetShipmentsByUser(response: HttpResponseBase): Observable<Shipment[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(Shipment.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment[]>(<any>null);\r\n    }\r\n\r\n    shipments_GetById(id: string): Observable<Shipment> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetById(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetById(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<Shipment>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<Shipment>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetById(response: HttpResponseBase): Observable<Shipment> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = Shipment.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<Shipment>(<any>null);\r\n    }\r\n\r\n    shipments_Update(id: string, shipment: ShipmentModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(shipment);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Update(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Update(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Update(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status === 404) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result404: any = null;\r\n            let resultData404 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result404 = ProblemDetails.fromJS(resultData404);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result404);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    shipments_Delete(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_Delete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_Delete(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_Delete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    shipments_GetShipmentsWithUsers(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<AdminShipmentsModel[]> {\r\n        let url_ = this.baseUrl + \"/Shipments/pendingShipments?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_GetShipmentsWithUsers(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_GetShipmentsWithUsers(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<AdminShipmentsModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<AdminShipmentsModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_GetShipmentsWithUsers(response: HttpResponseBase): Observable<AdminShipmentsModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(AdminShipmentsModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<AdminShipmentsModel[]>(<any>null);\r\n    }\r\n\r\n    shipments_packageRecieved(shipmentId?: string | undefined, recieved?: boolean | undefined): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Shipments/delivered?\";\r\n        if (shipmentId === null)\r\n            throw new Error(\"The parameter 'shipmentId' cannot be null.\");\r\n        else if (shipmentId !== undefined)\r\n            url_ += \"shipmentId=\" + encodeURIComponent(\"\" + shipmentId) + \"&\"; \r\n        if (recieved === null)\r\n            throw new Error(\"The parameter 'recieved' cannot be null.\");\r\n        else if (recieved !== undefined)\r\n            url_ += \"recieved=\" + encodeURIComponent(\"\" + recieved) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processShipments_packageRecieved(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processShipments_packageRecieved(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processShipments_packageRecieved(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_Authenticate(model: AuthenticateModel): Observable<UserModel> {\r\n        let url_ = this.baseUrl + \"/Users/authenticate\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Authenticate(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Authenticate(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Authenticate(response: HttpResponseBase): Observable<UserModel> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = UserModel.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel>(<any>null);\r\n    }\r\n\r\n    users_Register(model: RegisterModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/register\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"post\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Register(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Register(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Register(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_GetAll(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]> {\r\n        let url_ = this.baseUrl + \"/Users?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetAll(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetAll(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetAll(response: HttpResponseBase): Observable<UserModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UserModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel[]>(<any>null);\r\n    }\r\n\r\n    users_GetUsersWithoutFilament(page?: number | undefined, size?: number | undefined, sort?: string | null | undefined, search?: string | null | undefined): Observable<UserModel[]> {\r\n        let url_ = this.baseUrl + \"/Users/filament?\";\r\n        if (page === null)\r\n            throw new Error(\"The parameter 'page' cannot be null.\");\r\n        else if (page !== undefined)\r\n            url_ += \"Page=\" + encodeURIComponent(\"\" + page) + \"&\"; \r\n        if (size === null)\r\n            throw new Error(\"The parameter 'size' cannot be null.\");\r\n        else if (size !== undefined)\r\n            url_ += \"Size=\" + encodeURIComponent(\"\" + size) + \"&\"; \r\n        if (sort !== undefined)\r\n            url_ += \"Sort=\" + encodeURIComponent(\"\" + sort) + \"&\"; \r\n        if (search !== undefined)\r\n            url_ += \"Search=\" + encodeURIComponent(\"\" + search) + \"&\"; \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetUsersWithoutFilament(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetUsersWithoutFilament(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel[]>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel[]>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetUsersWithoutFilament(response: HttpResponseBase): Observable<UserModel[]> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            if (Array.isArray(resultData200)) {\r\n                result200 = [] as any;\r\n                for (let item of resultData200)\r\n                    result200!.push(UserModel.fromJS(item));\r\n            }\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel[]>(<any>null);\r\n    }\r\n\r\n    users_deliverFilament(model: UserFilamentModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/filament\";\r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_deliverFilament(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_deliverFilament(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_deliverFilament(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = ProblemDetails.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_GetById(id: string): Observable<UserModel> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Accept\": \"application/json\"\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"get\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_GetById(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_GetById(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<UserModel>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<UserModel>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_GetById(response: HttpResponseBase): Observable<UserModel> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result200: any = null;\r\n            let resultData200 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result200 = UserModel.fromJS(resultData200);\r\n            return _observableOf(result200);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<UserModel>(<any>null);\r\n    }\r\n\r\n    users_Update(id: string, model: UpdateModel): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        const content_ = JSON.stringify(model);\r\n\r\n        let options_ : any = {\r\n            body: content_,\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n                \"Content-Type\": \"application/json\", \r\n            })\r\n        };\r\n\r\n        return this.http.request(\"put\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Update(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Update(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Update(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = AppException.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status === 400) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result400: any = null;\r\n            let resultData400 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result400 = AppException.fromJS(resultData400);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result400);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n\r\n    users_Delete(id: string): Observable<void> {\r\n        let url_ = this.baseUrl + \"/Users/{id}\";\r\n        if (id === undefined || id === null)\r\n            throw new Error(\"The parameter 'id' must be defined.\");\r\n        url_ = url_.replace(\"{id}\", encodeURIComponent(\"\" + id)); \r\n        url_ = url_.replace(/[?&]$/, \"\");\r\n\r\n        let options_ : any = {\r\n            observe: \"response\",\r\n            responseType: \"blob\",\t\t\t\r\n            headers: new HttpHeaders({\r\n            })\r\n        };\r\n\r\n        return this.http.request(\"delete\", url_, options_).pipe(_observableMergeMap((response_ : any) => {\r\n            return this.processUsers_Delete(response_);\r\n        })).pipe(_observableCatch((response_: any) => {\r\n            if (response_ instanceof HttpResponseBase) {\r\n                try {\r\n                    return this.processUsers_Delete(<any>response_);\r\n                } catch (e) {\r\n                    return <Observable<void>><any>_observableThrow(e);\r\n                }\r\n            } else\r\n                return <Observable<void>><any>_observableThrow(response_);\r\n        }));\r\n    }\r\n\r\n    protected processUsers_Delete(response: HttpResponseBase): Observable<void> {\r\n        const status = response.status;\r\n        const responseBlob = \r\n            response instanceof HttpResponse ? response.body : \r\n            (<any>response).error instanceof Blob ? (<any>response).error : undefined;\r\n\r\n        let _headers: any = {}; if (response.headers) { for (let key of response.headers.keys()) { _headers[key] = response.headers.get(key); }};\r\n        if (status === 401) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result401: any = null;\r\n            let resultData401 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result401 = AppException.fromJS(resultData401);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result401);\r\n            }));\r\n        } else if (status === 403) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            let result403: any = null;\r\n            let resultData403 = _responseText === \"\" ? null : JSON.parse(_responseText, this.jsonParseReviver);\r\n            result403 = ProblemDetails.fromJS(resultData403);\r\n            return throwException(\"A server side error occurred.\", status, _responseText, _headers, result403);\r\n            }));\r\n        } else if (status === 200) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return _observableOf<void>(<any>null);\r\n            }));\r\n        } else if (status !== 200 && status !== 204) {\r\n            return blobToText(responseBlob).pipe(_observableMergeMap(_responseText => {\r\n            return throwException(\"An unexpected server error occurred.\", status, _responseText, _headers);\r\n            }));\r\n        }\r\n        return _observableOf<void>(<any>null);\r\n    }\r\n}\r\n\r\nexport class Exception implements IException {\r\n    stackTrace?: string | undefined;\r\n    message!: string;\r\n    innerException?: Exception | undefined;\r\n    source?: string | undefined;\r\n\r\n    constructor(data?: IException) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.stackTrace = _data[\"StackTrace\"];\r\n            this.message = _data[\"Message\"];\r\n            this.innerException = _data[\"InnerException\"] ? Exception.fromJS(_data[\"InnerException\"]) : <any>undefined;\r\n            this.source = _data[\"Source\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Exception {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Exception();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"StackTrace\"] = this.stackTrace;\r\n        data[\"Message\"] = this.message;\r\n        data[\"InnerException\"] = this.innerException ? this.innerException.toJSON() : <any>undefined;\r\n        data[\"Source\"] = this.source;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IException {\r\n    stackTrace?: string | undefined;\r\n    message: string;\r\n    innerException?: Exception | undefined;\r\n    source?: string | undefined;\r\n}\r\n\r\nexport class AppException extends Exception implements IAppException {\r\n\r\n    constructor(data?: IAppException) {\r\n        super(data);\r\n    }\r\n\r\n    init(_data?: any) {\r\n        super.init(_data);\r\n    }\r\n\r\n    static fromJS(data: any): AppException {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AppException();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        super.toJSON(data);\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAppException extends IException {\r\n}\r\n\r\nexport class ShipmentModel implements IShipmentModel {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n\r\n    constructor(data?: IShipmentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ShipmentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ShipmentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IShipmentModel {\r\n    id: string;\r\n    quantity: number;\r\n    minQuantity: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n}\r\n\r\nexport class ProblemDetails implements IProblemDetails {\r\n    type?: string | undefined;\r\n    title?: string | undefined;\r\n    status?: number | undefined;\r\n    detail?: string | undefined;\r\n    instance?: string | undefined;\r\n    extensions?: { [key: string]: any; } | undefined;\r\n\r\n    constructor(data?: IProblemDetails) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.type = _data[\"type\"];\r\n            this.title = _data[\"title\"];\r\n            this.status = _data[\"status\"];\r\n            this.detail = _data[\"detail\"];\r\n            this.instance = _data[\"instance\"];\r\n            if (_data[\"extensions\"]) {\r\n                this.extensions = {} as any;\r\n                for (let key in _data[\"extensions\"]) {\r\n                    if (_data[\"extensions\"].hasOwnProperty(key))\r\n                        this.extensions![key] = _data[\"extensions\"][key];\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): ProblemDetails {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new ProblemDetails();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"type\"] = this.type;\r\n        data[\"title\"] = this.title;\r\n        data[\"status\"] = this.status;\r\n        data[\"detail\"] = this.detail;\r\n        data[\"instance\"] = this.instance;\r\n        if (this.extensions) {\r\n            data[\"extensions\"] = {};\r\n            for (let key in this.extensions) {\r\n                if (this.extensions.hasOwnProperty(key))\r\n                    data[\"extensions\"][key] = this.extensions[key];\r\n            }\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IProblemDetails {\r\n    type?: string | undefined;\r\n    title?: string | undefined;\r\n    status?: number | undefined;\r\n    detail?: string | undefined;\r\n    instance?: string | undefined;\r\n    extensions?: { [key: string]: any; } | undefined;\r\n}\r\n\r\nexport class Shipment implements IShipment {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    userId!: string;\r\n    user?: User | undefined;\r\n\r\n    constructor(data?: IShipment) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n            this.userId = _data[\"userId\"];\r\n            this.user = _data[\"user\"] ? User.fromJS(_data[\"user\"]) : <any>undefined;\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): Shipment {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new Shipment();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        data[\"userId\"] = this.userId;\r\n        data[\"user\"] = this.user ? this.user.toJSON() : <any>undefined;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IShipment {\r\n    id: string;\r\n    quantity: number;\r\n    minQuantity: number;\r\n    fileName?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n    userId: string;\r\n    user?: User | undefined;\r\n}\r\n\r\nexport class User implements IUser {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    email?: string | undefined;\r\n    passwordHash?: string | undefined;\r\n    passwordSalt?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    address?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime!: number;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    shipments?: Shipment[] | undefined;\r\n\r\n    constructor(data?: IUser) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.email = _data[\"email\"];\r\n            this.passwordHash = _data[\"passwordHash\"];\r\n            this.passwordSalt = _data[\"passwordSalt\"];\r\n            this.role = _data[\"role\"];\r\n            this.token = _data[\"token\"];\r\n            this.address = _data[\"address\"];\r\n            this.productionDate = _data[\"productionDate\"] ? new Date(_data[\"productionDate\"].toString()) : <any>undefined;\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            if (Array.isArray(_data[\"shipments\"])) {\r\n                this.shipments = [] as any;\r\n                for (let item of _data[\"shipments\"])\r\n                    this.shipments!.push(Shipment.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): User {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new User();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"email\"] = this.email;\r\n        data[\"passwordHash\"] = this.passwordHash;\r\n        data[\"passwordSalt\"] = this.passwordSalt;\r\n        data[\"role\"] = this.role;\r\n        data[\"token\"] = this.token;\r\n        data[\"address\"] = this.address;\r\n        data[\"productionDate\"] = this.productionDate ? this.productionDate.toISOString() : <any>undefined;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        if (Array.isArray(this.shipments)) {\r\n            data[\"shipments\"] = [];\r\n            for (let item of this.shipments)\r\n                data[\"shipments\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUser {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    email?: string | undefined;\r\n    passwordHash?: string | undefined;\r\n    passwordSalt?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    address?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime: number;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    shipments?: Shipment[] | undefined;\r\n}\r\n\r\nexport class CreateShipmentModel implements ICreateShipmentModel {\r\n    id!: string;\r\n    quantity!: number;\r\n    fileName?: string | undefined;\r\n    minQuantity!: number;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    needsFilament!: boolean;\r\n\r\n    constructor(data?: ICreateShipmentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.quantity = _data[\"quantity\"];\r\n            this.fileName = _data[\"fileName\"];\r\n            this.minQuantity = _data[\"minQuantity\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.dateShipped = _data[\"dateShipped\"] ? new Date(_data[\"dateShipped\"].toString()) : <any>undefined;\r\n            this.recieved = _data[\"recieved\"];\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): CreateShipmentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new CreateShipmentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"quantity\"] = this.quantity;\r\n        data[\"fileName\"] = this.fileName;\r\n        data[\"minQuantity\"] = this.minQuantity;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"dateShipped\"] = this.dateShipped ? this.dateShipped.toISOString() : <any>undefined;\r\n        data[\"recieved\"] = this.recieved;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface ICreateShipmentModel {\r\n    id: string;\r\n    quantity: number;\r\n    fileName?: string | undefined;\r\n    minQuantity: number;\r\n    trackingNumber?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    dateShipped: Date;\r\n    recieved: boolean;\r\n    needsFilament: boolean;\r\n}\r\n\r\nexport class AdminShipmentsModel implements IAdminShipmentsModel {\r\n    shipmentId!: string;\r\n    userId!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    printerActive!: boolean;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    recieved!: boolean;\r\n\r\n    constructor(data?: IAdminShipmentsModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.shipmentId = _data[\"shipmentId\"];\r\n            this.userId = _data[\"userId\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.shippingCompany = _data[\"shippingCompany\"];\r\n            this.trackingNumber = _data[\"trackingNumber\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            this.recieved = _data[\"recieved\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AdminShipmentsModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AdminShipmentsModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"shipmentId\"] = this.shipmentId;\r\n        data[\"userId\"] = this.userId;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"shippingCompany\"] = this.shippingCompany;\r\n        data[\"trackingNumber\"] = this.trackingNumber;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        data[\"recieved\"] = this.recieved;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAdminShipmentsModel {\r\n    shipmentId: string;\r\n    userId: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    shippingCompany?: string | undefined;\r\n    trackingNumber?: string | undefined;\r\n    printerActive: boolean;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    recieved: boolean;\r\n}\r\n\r\nexport class UserModel implements IUserModel {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    address?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament!: boolean;\r\n    batchRequiredTime!: number;\r\n    shipments?: Shipment[] | undefined;\r\n\r\n    constructor(data?: IUserModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.address = _data[\"address\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.role = _data[\"role\"];\r\n            this.token = _data[\"token\"];\r\n            this.productionDate = _data[\"productionDate\"] ? new Date(_data[\"productionDate\"].toString()) : <any>undefined;\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.shippedQuantity = _data[\"shippedQuantity\"];\r\n            this.latestShippedDate = _data[\"latestShippedDate\"] ? new Date(_data[\"latestShippedDate\"].toString()) : <any>undefined;\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n            if (Array.isArray(_data[\"shipments\"])) {\r\n                this.shipments = [] as any;\r\n                for (let item of _data[\"shipments\"])\r\n                    this.shipments!.push(Shipment.fromJS(item));\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"address\"] = this.address;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"role\"] = this.role;\r\n        data[\"token\"] = this.token;\r\n        data[\"productionDate\"] = this.productionDate ? this.productionDate.toISOString() : <any>undefined;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"shippedQuantity\"] = this.shippedQuantity;\r\n        data[\"latestShippedDate\"] = this.latestShippedDate ? this.latestShippedDate.toISOString() : <any>undefined;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        if (Array.isArray(this.shipments)) {\r\n            data[\"shipments\"] = [];\r\n            for (let item of this.shipments)\r\n                data[\"shipments\"].push(item.toJSON());\r\n        }\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUserModel {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    address?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    token?: string | undefined;\r\n    productionDate?: Date | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    shippedQuantity?: number | undefined;\r\n    latestShippedDate?: Date | undefined;\r\n    needsFilament: boolean;\r\n    batchRequiredTime: number;\r\n    shipments?: Shipment[] | undefined;\r\n}\r\n\r\nexport class AuthenticateModel implements IAuthenticateModel {\r\n    username!: string;\r\n    password!: string;\r\n\r\n    constructor(data?: IAuthenticateModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.username = _data[\"username\"];\r\n            this.password = _data[\"password\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): AuthenticateModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new AuthenticateModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"username\"] = this.username;\r\n        data[\"password\"] = this.password;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IAuthenticateModel {\r\n    username: string;\r\n    password: string;\r\n}\r\n\r\nexport class RegisterModel implements IRegisterModel {\r\n    firstName!: string;\r\n    lastName!: string;\r\n    username!: string;\r\n    email!: string;\r\n    phoneNumber!: string;\r\n    password!: string;\r\n    address?: string | undefined;\r\n    printerActive!: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime!: number;\r\n\r\n    constructor(data?: IRegisterModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.password = _data[\"password\"];\r\n            this.address = _data[\"address\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): RegisterModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new RegisterModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"password\"] = this.password;\r\n        data[\"address\"] = this.address;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IRegisterModel {\r\n    firstName: string;\r\n    lastName: string;\r\n    username: string;\r\n    email: string;\r\n    phoneNumber: string;\r\n    password: string;\r\n    address?: string | undefined;\r\n    printerActive: boolean;\r\n    printerModel?: string | undefined;\r\n    batchRequiredTime: number;\r\n}\r\n\r\nexport class UpdateModel implements IUpdateModel {\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    password?: string | undefined;\r\n    newPassword?: string | undefined;\r\n    address!: string;\r\n    printerActive!: boolean;\r\n    printerModel!: string;\r\n    batchRequiredTime!: number;\r\n\r\n    constructor(data?: IUpdateModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.username = _data[\"username\"];\r\n            this.email = _data[\"email\"];\r\n            this.phoneNumber = _data[\"phoneNumber\"];\r\n            this.role = _data[\"role\"];\r\n            this.password = _data[\"password\"];\r\n            this.newPassword = _data[\"newPassword\"];\r\n            this.address = _data[\"address\"];\r\n            this.printerActive = _data[\"printerActive\"];\r\n            this.printerModel = _data[\"printerModel\"];\r\n            this.batchRequiredTime = _data[\"batchRequiredTime\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UpdateModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UpdateModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"username\"] = this.username;\r\n        data[\"email\"] = this.email;\r\n        data[\"phoneNumber\"] = this.phoneNumber;\r\n        data[\"role\"] = this.role;\r\n        data[\"password\"] = this.password;\r\n        data[\"newPassword\"] = this.newPassword;\r\n        data[\"address\"] = this.address;\r\n        data[\"printerActive\"] = this.printerActive;\r\n        data[\"printerModel\"] = this.printerModel;\r\n        data[\"batchRequiredTime\"] = this.batchRequiredTime;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUpdateModel {\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    username?: string | undefined;\r\n    email?: string | undefined;\r\n    phoneNumber?: string | undefined;\r\n    role?: string | undefined;\r\n    password?: string | undefined;\r\n    newPassword?: string | undefined;\r\n    address: string;\r\n    printerActive: boolean;\r\n    printerModel: string;\r\n    batchRequiredTime: number;\r\n}\r\n\r\nexport class UserFilamentModel implements IUserFilamentModel {\r\n    id!: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    needsFilament!: boolean;\r\n\r\n    constructor(data?: IUserFilamentModel) {\r\n        if (data) {\r\n            for (var property in data) {\r\n                if (data.hasOwnProperty(property))\r\n                    (<any>this)[property] = (<any>data)[property];\r\n            }\r\n        }\r\n    }\r\n\r\n    init(_data?: any) {\r\n        if (_data) {\r\n            this.id = _data[\"id\"];\r\n            this.firstName = _data[\"firstName\"];\r\n            this.lastName = _data[\"lastName\"];\r\n            this.needsFilament = _data[\"needsFilament\"];\r\n        }\r\n    }\r\n\r\n    static fromJS(data: any): UserFilamentModel {\r\n        data = typeof data === 'object' ? data : {};\r\n        let result = new UserFilamentModel();\r\n        result.init(data);\r\n        return result;\r\n    }\r\n\r\n    toJSON(data?: any) {\r\n        data = typeof data === 'object' ? data : {};\r\n        data[\"id\"] = this.id;\r\n        data[\"firstName\"] = this.firstName;\r\n        data[\"lastName\"] = this.lastName;\r\n        data[\"needsFilament\"] = this.needsFilament;\r\n        return data; \r\n    }\r\n}\r\n\r\nexport interface IUserFilamentModel {\r\n    id: string;\r\n    firstName?: string | undefined;\r\n    lastName?: string | undefined;\r\n    needsFilament: boolean;\r\n}\r\n\r\nexport class SwaggerException extends Error {\r\n    message: string;\r\n    status: number; \r\n    response: string; \r\n    headers: { [key: string]: any; };\r\n    result: any; \r\n\r\n    constructor(message: string, status: number, response: string, headers: { [key: string]: any; }, result: any) {\r\n        super();\r\n\r\n        this.message = message;\r\n        this.status = status;\r\n        this.response = response;\r\n        this.headers = headers;\r\n        this.result = result;\r\n    }\r\n\r\n    protected isSwaggerException = true;\r\n\r\n    static isSwaggerException(obj: any): obj is SwaggerException {\r\n        return obj.isSwaggerException === true;\r\n    }\r\n}\r\n\r\nfunction throwException(message: string, status: number, response: string, headers: { [key: string]: any; }, result?: any): Observable<any> {\r\n    if (result !== null && result !== undefined)\r\n        return _observableThrow(result);\r\n    else\r\n        return _observableThrow(new SwaggerException(message, status, response, headers, null));\r\n}\r\n\r\nfunction blobToText(blob: any): Observable<string> {\r\n    return new Observable<string>((observer: any) => {\r\n        if (!blob) {\r\n            observer.next(\"\");\r\n            observer.complete();\r\n        } else {\r\n            let reader = new FileReader(); \r\n            reader.onload = event => { \r\n                observer.next((<any>event.target).result);\r\n                observer.complete();\r\n            };\r\n            reader.readAsText(blob); \r\n        }\r\n    });\r\n}","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(request).pipe(catchError(err => {\n            if ([401, 403].indexOf(err.status) !== -1) {\n                // auto logout if 401 Unauthorized or 403 Forbidden response returned from api\n                this.authenticationService.logout();\n                location.reload(true);\n            }\n\n            const error = err.error.message || err.statusText;\n            return throwError(error);\n        }))\n    }\n}","export * from './auth.guard';\r\nexport * from './backend';\r\nexport * from './error.interceptor';\r\nexport * from './jwt.interceptor';\r\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@environments/environment';\nimport { AuthenticationService } from '@app/_services';\n\n@Injectable()\nexport class JwtInterceptor implements HttpInterceptor {\n    constructor(private authenticationService: AuthenticationService) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        // add auth header with jwt if user is logged in and request is to api url\n        const currentUser = this.authenticationService.currentUserValue;\n        const isLoggedIn = currentUser && currentUser.token;\n        const isApiUrl = request.url.startsWith(environment.apiUrl);\n        if (isLoggedIn && isApiUrl) {\n            request = request.clone({\n                setHeaders: {\n                    Authorization: `Bearer ${currentUser.token}`\n                }\n            });\n        }\n\n        return next.handle(request);\n    }\n}","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { ActivatedRoute, Params, Router } from '@angular/router';\r\n\r\nimport { fromEvent } from 'rxjs';\r\nimport { map, filter, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\nimport { ListView, SortDirection } from './models/list-view';\r\nimport { QueryParameters } from './models/query-parameters';\r\nimport { SearchEvent } from './models/search-event';\r\n\r\n@Component({\r\n    selector: 'app-list-view',\r\n    templateUrl: './list-view.component.html',\r\n    styleUrls: ['./list-view.component.scss']\r\n})\r\nexport class ListViewComponent extends ListView implements OnInit, OnDestroy {\r\n    @ViewChild('filterInput', { static: true }) private _filterInput: ElementRef;\r\n\r\n    constructor(private route: ActivatedRoute, private router: Router) {\r\n        super();\r\n    }\r\n\r\n    public ngOnInit(): void {\r\n        this.queryParamsSubscription = this.route.queryParams.subscribe((params: Params) => {\r\n            this.parseQueryParams(params);\r\n            this.doSearch();\r\n        });\r\n        fromEvent(this._filterInput.nativeElement, 'keyup').pipe(\r\n            map((event: any) => {\r\n                return event.target.value; // Get input value.\r\n            }),\r\n            filter(inputValue => inputValue.length >= this.minimumSearchCharacters || inputValue.length === 0), // If character length greater than minimumSearchCharacters setting.\r\n            debounceTime(1000), // Time in milliseconds between key events.\r\n            distinctUntilChanged() // If previous query is different from current.\r\n        ).subscribe(_ => {\r\n            this.setFilter();\r\n        });\r\n        this.showFooter ? this.showFooter = 0 : this.showFooter = 50;\r\n    }\r\n\r\n    public ngOnDestroy(): void {\r\n        if (this.queryParamsSubscription) {\r\n            this.queryParamsSubscription.unsubscribe();\r\n        }\r\n    }\r\n\r\n    public setPage(event: { count: number, limit: number, offset: number, pageSize: number }): void {\r\n        this.page = event.offset + 1;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    public setSort(event: any): void {\r\n        const sort = event.sorts[event.sorts.length - 1];\r\n        this.sortField = sort.prop;\r\n        this.sortDirection = sort.dir === 'asc' ? SortDirection.Asc : SortDirection.Desc;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    private setFilter() {\r\n        if (this.searchTerm.length === 0) {\r\n            this.searchTerm = undefined;\r\n        }\r\n        this.page = 1;\r\n        this.changeSearchLocation();\r\n    }\r\n\r\n    private parseQueryParams(params: Params): void {\r\n        this.page = +(params[QueryParameters.PAGE] || 1);\r\n        this.dataTable.offset = this.page - 1;\r\n        this.rowsPerPage = +(params[QueryParameters.PAGE_SIZE] || this.rowsPerPage || this.defaultRowsPerPage)\r\n        this.sortField = params[QueryParameters.SORT_FIELD] || this.defaultSortField || undefined;\r\n        this.sortDirection = (params[QueryParameters.SORT_DIRECTION] || this.defaultSortDirection || undefined) as SortDirection;\r\n        if (this.sortField) {\r\n            this.dataTable.sorts.splice(0, this.dataTable.sorts.length);\r\n            this.dataTable.sorts.push({ prop: this.sortField, dir: this.sortDirection.toLowerCase() || 'asc' });\r\n        }\r\n        this.searchTerm = params[QueryParameters.SEARCH_TERM] || undefined;\r\n    }\r\n\r\n    private changeSearchLocation(): void {\r\n        const params = {};\r\n        params[QueryParameters.PAGE] = this.page;\r\n        params[QueryParameters.PAGE_SIZE] = this.rowsPerPage || this.defaultRowsPerPage;\r\n        params[QueryParameters.SORT_FIELD] = this.sortField || this.defaultSortField || undefined;\r\n        params[QueryParameters.SORT_DIRECTION] = this.sortDirection;\r\n        params[QueryParameters.SEARCH_TERM] = this.searchTerm;\r\n        this.router.navigate([], { relativeTo: this.route, queryParams: params });\r\n    }\r\n\r\n    private doSearch(): void {\r\n        this.search.emit(new SearchEvent(\r\n            this.page,\r\n            this.rowsPerPage,\r\n            this.sortField ? `${this.sortField}${this.sortDirection === SortDirection.Asc ? '+' : '-'}` : undefined,\r\n            this.searchTerm || undefined\r\n        ));\r\n    }\r\n\r\n    private isEmptyObject(object: any): boolean {\r\n        return Object.entries(object).length === 0 && object.constructor === Object;\r\n    }\r\n}\r\n","<div class=\"col-sm-12 col-md-4 m-auto\"\r\n     [hidden]=\"!canFilter\">\r\n    <input class=\"search mt-0\"\r\n           type=\"text\"\r\n           [placeholder]=\"'Type at least ' + minimumSearchCharacters + ' characters to filter results...'\"\r\n           [(ngModel)]=\"searchTerm\"\r\n           #filterInput />\r\n</div>\r\n<ngx-datatable class=\"material expandable\"\r\n               trackByProp=\"id\"\r\n               [rows]=\"rows\"\r\n               [columns]=\"columns\"\r\n               [columnMode]=\"'force'\"\r\n               [count]=\"count\"\r\n               [rowHeight]=\"50\"\r\n               [headerHeight]=\"50\"\r\n               [footerHeight]=\"showFooter\"\r\n               [limit]=\"rowsPerPage\"\r\n               reorderable=\"false\"\r\n               [externalPaging]=\"!clientSide\"\r\n               [externalSorting]=\"!clientSide\"\r\n               [messages]=\"{emptyMessage: emptyMessage}\"\r\n               [loadingIndicator]=\"isLoading\"\r\n               (page)=\"setPage($event)\"\r\n               (sort)=\"setSort($event)\"\r\n               #dataTable>\r\n</ngx-datatable>\r\n<ng-template let-row=\"row\"\r\n             let-value=\"value\"\r\n             #usernameTemplate>\r\n    <span *ngIf=\"value\"\r\n          style=\"padding-right: 16px; position: relative;\">\r\n        <i *ngIf=\"row.blocked\"\r\n           class=\"material-icons font-14 checkmark\"\r\n           style=\"color: rgba(255, 81, 81, 0.61) !important;\"\r\n           title=\"Account is blocked\">\r\n            block\r\n        </i>\r\n        <i *ngIf=\"row.accessFailedCount > 0 && row.lockoutEnd && !row.blocked\"\r\n           class=\"material-icons font-14 checkmark\"\r\n           style=\"color: rgba(255, 81, 81, 0.61) !important;\"\r\n           title=\"Account is locked\">\r\n            vpn_key\r\n        </i>\r\n        {{ value }}\r\n    </span>\r\n    <span *ngIf=\"!value\"> - </span>\r\n</ng-template>\r\n<ng-template let-row=\"row\"\r\n             let-value=\"value\"\r\n             #emailTemplate>\r\n    <a *ngIf=\"value\"\r\n       [href]=\"'mailto:' + value\"\r\n       style=\"padding-right: 16px; position: relative;\">\r\n        <i *ngIf=\"row.emailConfirmed\"\r\n           class=\"material-icons font-14 checkmark\"\r\n           style=\"color: #32CD32 !important;\"\r\n           title=\"Email is confirmed\">\r\n            check\r\n        </i>\r\n        {{ value }}\r\n    </a>\r\n    <span *ngIf=\"!value\"> - </span>\r\n</ng-template>\r\n<ng-template let-row=\"row\"\r\n             let-value=\"value\"\r\n             #phoneNumberTemplate>\r\n    <a *ngIf=\"value\"\r\n       [href]=\"'tel:' + value\"\r\n       style=\"padding-right: 16px; position: relative;\">\r\n        <i *ngIf=\"row.phoneNumberConfirmed\"\r\n           class=\"material-icons font-14 checkmark\"\r\n           style=\"color: #32CD32 !important;\"\r\n           title=\"Phone number is confirmed\">\r\n            check\r\n        </i>\r\n        {{ value }}\r\n    </a>\r\n    <span *ngIf=\"!value\"> - </span>\r\n</ng-template>\r\n<ng-template let-row=\"row\"\r\n             let-value=\"value\"\r\n             #dateTimeTemplate>\r\n    <span *ngIf=\"value\">{{ value | date:'medium' }}</span>\r\n    <span *ngIf=\"!value\"> - </span>\r\n</ng-template>\r\n<ng-template let-row=\"row\"\r\n             let-value=\"value\"\r\n             #booleanTemplate>\r\n    <i *ngIf=\"value === true\"\r\n       class=\"material-icons\"\r\n       style=\"color: #32CD32 !important;\">\r\n        check\r\n    </i>\r\n    <i *ngIf=\"value === false\"\r\n       class=\"material-icons\"\r\n       style=\"color: #CC0000 !important;\">\r\n        remove\r\n    </i>\r\n</ng-template>","import { Output, EventEmitter, Input, ViewChild, TemplateRef } from '@angular/core';\r\n\r\nimport { TableColumn, DatatableComponent } from '@swimlane/ngx-datatable';\r\nimport { Subscription } from 'rxjs';\r\nimport { SearchEvent } from './search-event';\r\n\r\nexport class ListView {\r\n    // Properties.\r\n    @ViewChild('dataTable', { static: true }) protected dataTable: DatatableComponent;\r\n    @ViewChild('emailTemplate', { static: true }) public emailTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('phoneNumberTemplate', { static: true }) public phoneNumberTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('dateTimeTemplate', { static: true }) public dateTimeTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('dateTemplate', { static: true }) public dateTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('booleanTemplate', { static: true }) public booleanTemplate: TemplateRef<HTMLElement>;\r\n    @ViewChild('usernameTemplate', { static: true }) public usernameTemplate: TemplateRef<HTMLElement>;\r\n    @Output() protected search: EventEmitter<SearchEvent> = new EventEmitter();\r\n    @Input() public rows: any[];\r\n    @Input() public rowsPerPage: number;\r\n    @Input() public columns: TableColumn[];\r\n    @Input() public count: number;\r\n    @Input() public defaultSortField?: string;\r\n    @Input() public defaultSortDirection?: SortDirection;\r\n    @Input() public isLoading = false;\r\n    @Input() public clientSide = false;\r\n    @Input() public canFilter = false;\r\n    @Input() public emptyMessage: string;\r\n    @Input() public showFooter;\r\n    public minimumSearchCharacters = 3;\r\n    public searchTerm?: string;\r\n    protected queryParamsSubscription: Subscription;\r\n    protected page = 1;\r\n    protected defaultRowsPerPage = 20;\r\n    protected sortField?: string;\r\n    protected sortDirection?: SortDirection;\r\n}\r\n\r\nexport enum SortDirection {\r\n    Asc = 'Asc',\r\n    Desc = 'Desc'\r\n}\r\n","// tslint:disable-next-line: no-namespace\r\nexport namespace QueryParameters {\r\n    export const PAGE_SIZE = 'size';\r\n    export const PAGE = 'page';\r\n    export const SEARCH_TERM = 'query';\r\n    export const SORT_FIELD = 'sort';\r\n    export const SORT_DIRECTION = 'dir';\r\n}\r\n","export class SearchEvent {\r\n    constructor(public page: number, public pageSize: number, public sortField?: string, public searchTerm?: string) { }\r\n}\r\n","export * from './role';\nexport * from './user';\nexport * from './shipment';\n","export enum Role {\n    User = 'User',\n    Admin = 'Admin'\n}\n","export class Shipment {\r\n    id!: string;\r\n    quantity!: number;\r\n    minQuantity!: number;\r\n    fileName?: string;\r\n    trackingNumber?: string;\r\n    shippingCompany?: string;\r\n    dateShipped!: Date;\r\n    recieved!: boolean;\r\n    needsFilament!: boolean;\r\n}\r\n","export class User {\n    id!: string;\n    firstName?: string;\n    lastName?: string;\n    username?: string;\n    phoneNumber?: string;\n    email?: string;\n    password?: string;\n    role?: string;\n    token?: string;\n    address?: string;\n    productionDate?: Date;\n    printerActive!: boolean;\n    printerModel?: string;\n    batchRequiredTime!: number;\n    shippedQuantity?: number;\n    latestShippedDate?: Date;\n    needsFilament!: boolean;\n}\n","import { BackofficeApiService, AuthenticateModel, UserModel, RegisterModel, UpdateModel } from './../_helpers/backend';\nimport { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthenticationService {\n    private currentUserSubject: BehaviorSubject<UserModel>;\n    public currentUser: Observable<UserModel>;\n\n    constructor(private backoffice: BackofficeApiService) {\n        this.currentUserSubject = new BehaviorSubject<UserModel>(JSON.parse(localStorage.getItem('currentUser')));\n        this.currentUser = this.currentUserSubject.asObservable();\n    }\n\n    public get currentUserValue(): UserModel {\n        return this.currentUserSubject.value;\n    }\n\n    login(model: AuthenticateModel) {\n        return this.backoffice.users_Authenticate(model)\n            .pipe(map(user => {\n                // login successful if there's a jwt token in the response\n                if (user && user.token) {\n                    // store user details and jwt token in local storage to keep user logged in between page refreshes\n                    localStorage.setItem('currentUser', JSON.stringify(user));\n                    this.currentUserSubject.next(user);\n                }\n                return user;\n            }));\n    }\n\n    logout(): void {\n        // remove user from local storage to log user out\n        localStorage.removeItem('currentUser');\n        this.currentUserSubject.next(null);\n    }\n\n    register(model: RegisterModel) {\n        return this.backoffice.users_Register(model).pipe(error => error);\n    }\n\n}\n","export * from './authentication.service';\nexport * from './user.service';\nexport * from './shipment.service';\n","import { UserService } from '@app/_services';\r\nimport { UserModel, Shipment, CreateShipmentModel, AdminShipmentsModel, ShipmentModel } from './../_helpers/backend';\r\nimport { BackofficeApiService } from '@app/_helpers';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthenticationService } from '.';\r\nimport { map } from 'rxjs/operators';\r\nimport { Observable, AsyncSubject } from 'rxjs';\r\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ShipmentService {\r\n    private _shipment: AsyncSubject<Shipment>;\r\n    private _shipments: AsyncSubject<Shipment[]>;\r\n\r\n    constructor(\r\n        private backoffice: BackofficeApiService,\r\n        private _authenticationService: AuthenticationService,\r\n        private _shipmentervice: UserService\r\n    ) { }\r\n\r\n    getAll(event: SearchEvent): Observable<ShipmentModel[]> {\r\n        return this.backoffice.shipments_GetAll(event.page, event.pageSize, event.sortField, event.searchTerm);\r\n    }\r\n\r\n    getById(id: string): Observable<Shipment> {\r\n        if (!this._shipment || id !== null) {\r\n            this._shipment = new AsyncSubject<Shipment>();\r\n            this.backoffice.shipments_GetById(id).subscribe((shipment: Shipment) => {\r\n                this._shipment.next(shipment);\r\n                this._shipment.complete();\r\n            });\r\n        }\r\n        return this._shipment;\r\n    }\r\n\r\n    getShipmentsByUser(id: string): Observable<Shipment[]> {\r\n        if (!this._shipments || id !== null) {\r\n            this._shipments = new AsyncSubject<Shipment[]>();\r\n            this.backoffice.shipments_GetShipmentsByUser(id).subscribe((shipment: Shipment[]) => {\r\n                this._shipments.next(shipment);\r\n                this._shipments.complete();\r\n            });\r\n        }\r\n        return this._shipments;\r\n    }\r\n\r\n    createShipment(shipment: CreateShipmentModel) {\r\n        return this.backoffice.shipments_Create(shipment);\r\n    }\r\n\r\n    getUsersWithShipments(event: SearchEvent): Observable<AdminShipmentsModel[]> {\r\n        return this.backoffice.shipments_GetShipmentsWithUsers(event.page, event.pageSize, event.sortField, event.searchTerm);\r\n    }\r\n\r\n    packageRecieved(packageId: string, recieved: boolean ): Observable<void> {\r\n        return this.backoffice.shipments_packageRecieved(packageId, recieved);\r\n    }\r\n}\r\n\r\n","import { SearchEvent } from './../_helpers/list-view/models/search-event';\nimport { BackofficeApiService, User, UserModel, AdminShipmentsModel, UpdateModel, UserFilamentModel } from './../_helpers/backend';\nimport { Injectable } from '@angular/core';\nimport { Observable, AsyncSubject } from 'rxjs';\nimport { publishReplay, refCount } from 'rxjs/operators';\n\n@Injectable({ providedIn: 'root' })\nexport class UserService {\n    private _users: AsyncSubject<User>;\n\n    constructor(private backoffice: BackofficeApiService) { }\n\n    getAll(event: SearchEvent): Observable<UserModel[]> {\n        return this.backoffice.users_GetAll(event.page, event.pageSize, event.sortField, event.searchTerm);\n    }\n\n    GetUsersWithoutFilament(event: SearchEvent): Observable<UserModel[]> {\n        return this.backoffice.users_GetUsersWithoutFilament(event.page, event.pageSize, event.sortField, event.searchTerm);\n    }\n\n    getById(id: string): Observable<UserModel> {\n        if (!this._users || id !== null) {\n            this._users = new AsyncSubject<User>();\n            this.backoffice.users_GetById(id).subscribe((user: User) => {\n                this._users.next(user);\n                this._users.complete();\n            });\n        }\n        return this._users;\n    }\n\n    update(userId: string, model: UpdateModel) {\n        return this.backoffice.users_Update(userId, model).pipe((error) => error);\n    }\n\n    deliverFilament(user: UserFilamentModel) {\n        return this.backoffice.users_deliverFilament(user);\n    }\n}\n","import { UserModel, Shipment, AdminShipmentsModel } from './../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, ShipmentService, AuthenticationService } from '@app/_services';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\n\n@Component({ templateUrl: 'admin.component.html' })\nexport class AdminComponent implements OnInit {\n    @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n    @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n    loading = false;\n    deliveryLoading = false;\n    pendingUsers: AdminShipmentsModel[] = new Array<AdminShipmentsModel>();\n    columns: TableColumn[] = [];\n    private event: SearchEvent;\n\n    constructor(\n        private userService: UserService,\n        private shipmentService: ShipmentService,\n        private authenticationService: AuthenticationService\n    ) {\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.columns = [\n            { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: false, sortable: true, resizeable: false },\n            { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippedQuantity', name: 'Total Shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippingCompany', name: 'Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'trackingNumber', name: 'Tracking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            {\n                prop: 'latestShippedDate', name: 'Last Date Shipped', draggable: false, canAutoResize: true, sortable: true,\n                resizeable: false, cellTemplate: this._dateTemplate\n            },\n            {\n                prop: 'recieved', name: 'Recieved', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n                cellTemplate: this._deliveryTemplate\n            }\n        ];\n\n        this.pendingUsers.map(x => x.latestShippedDate = new Date());\n    }\n\n    getUsersWithShipments(event: SearchEvent): void {\n        this.event = event;\n        this.shipmentService.getUsersWithShipments(event).pipe(first()).subscribe((users: AdminShipmentsModel[]) => {\n            this.loading = false;\n            this.pendingUsers = users;\n        });\n    }\n\n    onRecieved(row) {\n        this.deliveryLoading = true;\n        this.shipmentService.packageRecieved(row.shipmentId, true).subscribe(() => {\n            this.deliveryLoading = false;\n            this.getUsersWithShipments(this.event);\n        });\n    }\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Admin</h4>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\"\n             class=\"spinner-border spinner-border-sm\"></div>\n        <div class=\"row\">\n            <div class=\"col-12 d-flex\">\n                <div class=\"flex-grow-1\">\n                    <button class=\"btn btn-success ml-3\"\n                            [routerLink]=\"['/admin/users']\">\n                        Όλοι οι Χρήστες\n                    </button>\n                    <button class=\"btn btn-success ml-3\"\n                            [routerLink]=\"['/admin/shipments']\">\n                        Όλες οι Αποστολές\n                    </button>\n                </div>\n                <button class=\"btn btn-danger\"\n                        [routerLink]=\"['/admin/filament']\">\n                    Αποστολή Υλικού\n                </button>\n            </div>\n        </div>\n        <hr />\n        <div class=\"row text-center\">\n            <div class=\"col-4\">\n                Χρήστες\n            </div>\n            <div class=\"col-4\">\n                Εκτυπώσεις\n            </div>\n            <div class=\"col-4\">\n                Απεσταλμένα\n            </div>\n        </div>\n        <hr />\n        <div class=\"col-12 mt-3\">\n            <app-list-view [clientSide]=\"true\"\n                           [columns]=\"columns\"\n                           [rows]=\"pendingUsers\"\n                           [rowsPerPage]=\"2147483647\"\n                           [defaultSortField]=\"'dateShipped'\"\n                           [defaultSortDirection]=\"'Desc'\"\n                           [showFooter]=\"'false'\"\n                           (search)=\"getUsersWithShipments($event)\"\n                           [canFilter]=\"true\"\n                           #shipmentsList>\n            </app-list-view>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #dateTemplate>\n                {{ value | date }}\n            </ng-template>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #deliveryTemplate>\n                <div *ngIf=\"deliveryLoading else deliveryBtn\"\n                     class=\"spinner-border spinner-border-sm\"></div>\n                <ng-template #deliveryBtn>\n                    <button class=\"btn btn-primary px-4 py-0 my-0\"\n                            (click)=\"onRecieved(row)\"\n                            *ngIf=\"!row.recieved else notRecieved\">\n                        <span class=\"material-icons align-text-top text-light\">\n                            done\n                        </span>\n                    </button>\n                    <ng-template #notRecieved>\n                        <span class=\"material-icons text-muted\">\n                            local_shipping\n                        </span>\n                    </ng-template>\n                </ng-template>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { UserFilamentModel } from './../../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { User } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { UserService } from '@app/_services';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-filament',\n  templateUrl: './filament.component.html'\n})\nexport class FilamentComponent implements OnInit {\n  @ViewChild('actionsTemplate', { static: true }) private _actionsTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  deliveryLoading = false;\n  users: User[] = new Array<User>();\n  columns: TableColumn[] = [];\n  private event: SearchEvent;\n  private _newUser: UserFilamentModel = new UserFilamentModel();\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.columns = [\n      { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'printerModel', name: 'Printer Model', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'latestShippedDate', name: 'Latest Shipped Date', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n        cellTemplate: this._dateTemplate\n      },\n      { prop: 'shippedQuantity', name: 'Shipped Quantity', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'id', name: 'Actions', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._actionsTemplate, cellClass: 'd-flex align-items-center'\n      },\n    ];\n  }\n\n  getUsers(event: SearchEvent): void {\n    this.event = event;\n    this.userService.GetUsersWithoutFilament(event).pipe(first()).subscribe((users: User[]) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n\n  sendFilament(row: User) {\n    this._newUser.id = row.id;\n    this._newUser.firstName = row.firstName;\n    this._newUser.lastName = row.lastName;\n    this._newUser.needsFilament = row.needsFilament;\n    this.userService.deliverFilament(this._newUser).subscribe(() => {\n      this.deliveryLoading = false;\n      this.getUsers(this.event);\n    });\n  }\n\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Αποστολή Υλικού</h4>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\"\n             class=\"spinner-border spinner-border-sm\"></div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn btn-primary\"\n                        [routerLink]=\"['/admin']\">\n                    Αρχική\n                </button>\n                <button class=\"btn btn-success ml-3\"\n                        [routerLink]=\"['/admin/shipments']\">\n                    Όλες οι Αποστολές\n                </button>\n            </div>\n        </div>\n        <hr />\n        <div class=\"col-12 mt-3\">\n            <h5 class=\"mt-2\"><span class=\"fa fa-clock-o ion-clock float-right\"></span>Χρήστες με ανάγκη για υλικό</h5>\n            <app-list-view [clientSide]=\"true\"\n                           [columns]=\"columns\"\n                           [rows]=\"users\"\n                           [rowsPerPage]=\"2147483647\"\n                           [defaultSortField]=\"'lastName'\"\n                           [defaultSortDirection]=\"'Desc'\"\n                           [showFooter]=\"'false'\"\n                           [emptyMessage]=\"'Δεν υπάρχει κάποιος χρήστης που να έχει ζητήσει filament!'\"\n                           (search)=\"getUsers($event)\"\n                           [canFilter]=\"true\"\n                           #usersList>\n            </app-list-view>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #dateTemplate>\n                {{ value | date }}\n            </ng-template>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #actionsTemplate>\n                <div *ngIf=\"deliveryLoading else deliveryBtn\"\n                     class=\"spinner-border spinner-border-sm\"></div>\n                <ng-template #deliveryBtn>\n                    <button class=\"btn btn-danger px-4 py-0 my-0\"\n                            *ngIf=\"value\"\n                            (click)=\"sendFilament(row)\">\n                        <i class=\"material-icons material-action align-text-top text-light\">\n                            send\n                        </i>\n                    </button>\n                </ng-template>\n            </ng-template>\n        </div>\n    </div>\n</div>","export * from './admin.component';","import { ShipmentModel } from './../../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { AdminShipmentsModel } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\nimport { UserService, ShipmentService, AuthenticationService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-shipments',\n  templateUrl: './shipments.component.html'\n})\nexport class ShipmentsComponent implements OnInit {\n  @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n  @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  deliveryLoading = false;\n  pendingShipments: ShipmentModel[] = new Array<ShipmentModel>();\n  columns: TableColumn[] = [];\n  private event: SearchEvent;\n\n  constructor(\n    private userService: UserService,\n    private shipmentService: ShipmentService,\n    private authenticationService: AuthenticationService\n  ) {\n  }\n\n  ngOnInit() {\n    this.loading = true;\n    this.columns = [\n      { prop: 'quantity', name: 'Total Shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'shippingCompany', name: 'Shipping Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n      },\n      { prop: 'trackingNumber', name: 'Tracking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'fileName', name: 'File', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'dateShipped', name: 'Date Shipped', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._dateTemplate\n      },\n      {\n        prop: 'recieved', name: 'Recieved', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._deliveryTemplate\n      }\n    ];\n\n    this.pendingShipments.map(x => x.dateShipped = new Date());\n  }\n\n  getUsersWithShipments(event: SearchEvent): void {\n    this.event = event;\n    this.shipmentService.getAll(event).pipe(first()).subscribe((users: ShipmentModel[]) => {\n      this.loading = false;\n      this.pendingShipments = users;\n    });\n  }\n\n  onRecieved(row) {\n    this.deliveryLoading = true;\n    this.shipmentService.packageRecieved(row.shipmentId, true).subscribe(() => {\n      this.deliveryLoading = false;\n      this.getUsersWithShipments(this.event);\n    });\n  }\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Αποστολές</h4>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\"\n             class=\"spinner-border spinner-border-sm\"></div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn btn-primary\"\n                        [routerLink]=\"['/admin']\">\n                    Αρχική\n                </button>\n                <button class=\"btn btn-success ml-3\"\n                        [routerLink]=\"['/admin/users']\">\n                    Όλοι οι Χρήστες\n                </button>\n            </div>\n        </div>\n        <hr />\n        <div class=\"row text-center\">\n            <div class=\"col-4\">\n                Αποστολές\n            </div>\n        </div>\n        <hr />\n        <div class=\"col-12 mt-3\">\n            <app-list-view [clientSide]=\"true\"\n                           [columns]=\"columns\"\n                           [rows]=\"pendingShipments\"\n                           [rowsPerPage]=\"2147483647\"\n                           [defaultSortField]=\"'dateShipped'\"\n                           [defaultSortDirection]=\"'Desc'\"\n                           [showFooter]=\"'false'\"\n                           (search)=\"getUsersWithShipments($event)\"\n                           [canFilter]=\"true\"\n                           #shipmentsList>\n            </app-list-view>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #dateTemplate>\n                {{ value | date }}\n            </ng-template>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #deliveryTemplate>\n                <div *ngIf=\"deliveryLoading else deliveryBtn\"\n                     class=\"spinner-border spinner-border-sm\"></div>\n                <ng-template #deliveryBtn>\n                    <div class=\"px-4 py-0 my-0\"\n                         *ngIf=\"row.recieved else notRecieved\">\n                        <span class=\"material-icons align-text-top\">\n                            done\n                        </span>\n                    </div>\n                    <ng-template #notRecieved>\n                        <div class=\"px-4 py-0 my-0\">\n                            <span class=\"material-icons text-muted\">\n                                local_shipping\n                            </span>\n                        </div>\n                    </ng-template>\n                </ng-template>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { first } from 'rxjs/operators';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { User } from '@app/_helpers';\nimport { TableColumn } from '@swimlane/ngx-datatable';\nimport { UserService } from '@app/_services';\nimport { SearchEvent } from '@app/_helpers/list-view/models/search-event';\n\n@Component({\n  selector: 'app-users',\n  templateUrl: './users.component.html'\n})\nexport class UsersComponent implements OnInit {\n  @ViewChild('actionsTemplate', { static: true }) private _actionsTemplate: TemplateRef<HTMLElement>;\n  loading = false;\n  users: User[] = new Array<User>();\n  columns: TableColumn[] = [];\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.loading = true;\n\n    this.users.map(x => x.latestShippedDate = new Date());\n    this.users.map(x => x.productionDate = new Date());\n\n    this.columns = [\n      { prop: 'firstName', name: 'First Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'lastName', name: 'Last Name', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'username', name: 'Username', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      { prop: 'role', name: 'Role', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n      {\n        prop: 'id', name: 'Actions', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n        cellTemplate: this._actionsTemplate, cellClass: 'd-flex align-items-center'\n      }\n    ];\n  }\n\n  getUsers(event: SearchEvent): void {\n    this.userService.getAll(event).pipe(first()).subscribe((users: User[]) => {\n      this.loading = false;\n      this.users = users;\n    });\n  }\n\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Χρήστες</h4>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\"\n             class=\"spinner-border spinner-border-sm\"></div>\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn btn-primary\"\n                        [routerLink]=\"['/admin']\">\n                    Αρχική\n                </button>\n                <button class=\"btn btn-success ml-3\"\n                        [routerLink]=\"['/admin/shipments']\">\n                    Όλες οι Αποστολές\n                </button>\n            </div>\n        </div>\n        <hr />\n        <div class=\"col-12 mt-3\">\n            <app-list-view [clientSide]=\"true\"\n                           [columns]=\"columns\"\n                           [rows]=\"users\"\n                           [rowsPerPage]=\"2147483647\"\n                           [defaultSortField]=\"'lastName'\"\n                           [defaultSortDirection]=\"'Desc'\"\n                           [showFooter]=\"'false'\"\n                           (search)=\"getUsers($event)\"\n                           [canFilter]=\"true\"\n                           #usersList>\n            </app-list-view>\n            <ng-template let-row=\"row\"\n                         let-value=\"value\"\n                         #actionsTemplate>\n                <button class=\"btn btn-primary px-4 py-0 my-0\"\n                        *ngIf=\"value\"\n                        [routerLink]=\"value + '/view'\">\n                    <i class=\"material-icons material-action align-text-top text-light\">\n                        search\n                    </i>\n                </button>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { UserModel } from './../../../_helpers/backend';\nimport { User } from '@app/_models';\nimport { UserService } from '@app/_services';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html'\n})\nexport class ViewComponent implements OnInit {\n  public user: User = new User();\n\n  constructor(private _route: ActivatedRoute, private _userService: UserService) { }\n\n  ngOnInit() {\n    const userId = this._route.snapshot.params.id;\n    this.user.productionDate = new Date();\n    this.user.latestShippedDate = new Date();\n    this.user.printerActive = true;\n    this.user.needsFilament = true;\n\n    this._userService.getById(userId).subscribe((user: User) => {\n      this.user = user;\n    });\n  }\n\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">{{user.firstName}} {{user.lastName}}</h4>\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-12\">\n                <button class=\"btn btn-primary\"\n                        [routerLink]=\"['/admin/users']\">\n                    Πίσω\n                </button>\n            </div>\n        </div>\n        <hr />\n        <form>\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"firstName\">Όνομα*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.firstName}}'\n                           class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"lastName\">Επίθετο*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.lastName}}'\n                           class=\"form-control\">\n                </div>\n            </div>\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-2\">\n                    <label for=\"lastName\">Ρόλος*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.role}}'\n                           class=\"form-control\">\n                </div>\n                <div class=\"form-group col-md-5\">\n                    <label for=\"email\">Email*</label>\n                    <input type=\"email\"\n                           disabled\n                           value='{{user.email}}'\n                           class=\"form-control\"\n                           required />\n                </div>\n                <div class=\"form-group col-md-5\">\n                    <label for=\"phoneNumber\">Τηλέφωνο*</label>\n                    <input type=\"tel\"\n                           disabled\n                           value='{{user.phoneNumber}}'\n                           placeholder=\"6934567891\"\n                           class=\"form-control\" />\n                </div>\n            </div>\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-12\">\n                    <label for=\"address\">Διεύθυνση Αποστολής*</label>\n                    <textarea disabled\n                              rows=\"4\"\n                              value='{{user.address}}'\n                              class=\"form-control\">\n                        </textarea>\n                </div>\n            </div>\n            <hr />\n            <div class=\"form-row col-12 align-items-center pt-4\">\n                <div class=\"form-check col-md-6\">\n                    <label for=\"printerActive\"\n                           class=\"form-check-label pr-5\">Λειτουργικός εκτυπωτής*</label>\n                    <bSwitch name=\"printerActive\"\n                             [switch-animate]=\"'animate'\"\n                             [switch-size]=\"'small'\"\n                             [switch-on-text]=\"'ΝΑΙ'\"\n                             [switch-off-text]=\"'ΟΧΙ'\"\n                             [switch-disabled]=\"'disabled'\"\n                             [ngModel]=\"user.printerActive\"\n                             class=\"form-check-input\"\n                             id=\"printerActive\"></bSwitch>\n                </div>\n                <div class=\"form-check col-md-6 mt-sm-3 mt-md-0\">\n                    <label for=\"needsFilament\"\n                           class=\"form-check-label pr-5\">Χρειάζεται Filament*</label>\n                    <bSwitch name=\"needsFilament\"\n                             [switch-animate]=\"'animate'\"\n                             [switch-size]=\"'small'\"\n                             [switch-on-text]=\"'ΝΑΙ'\"\n                             [switch-off-text]=\"'ΟΧΙ'\"\n                             [switch-disabled]=\"'disabled'\"\n                             [ngModel]=\"user.needsFilament\"\n                             class=\"form-check-input\"\n                             id=\"needsFilament\"></bSwitch>\n                </div>\n            </div>\n            <div class=\"form-row col-12 align-items-center pt-4\">\n                <div class=\"col\"></div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"printerModel\">Μάρκα 3D Printer*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.printerModel}}'\n                           class=\"form-control\" />\n                </div>\n            </div>\n            <hr />\n            <div class=\"form-row col-12 align-items-center pt-4\">\n                <div class=\"form-group col-md-4\">\n                    <label for=\"batchRequiredTime\">Εκτεινόμενος Χρόνος Εκτύπωσης*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.batchRequiredTime}}'\n                           class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label for=\"printerModel\">Συνολικά Απεσταλμένα*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.shippedQuantity}}'\n                           class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-4\">\n                    <label for=\"printerModel\">Τελευταία Αποστολή*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.latestShippedDate.toDateString()}}'\n                           class=\"form-control\" />\n                </div>\n            </div>\n            <hr />\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"username\">Username*</label>\n                    <input type=\"text\"\n                           disabled\n                           value='{{user.username}}'\n                           class=\"form-control\" />\n                </div>\n                <div class=\"form-group col-md-6 mb-0\">\n                    <label for=\"password\">Password*</label>\n                    <input type=\"password\"\n                           disabled\n                           value='{{user.firstName}}'\n                           class=\"form-control\"\n                           aria-describedby=\"passwordHelpBlock\" />\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { UserModel } from './_helpers/backend';\nimport { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService } from './_services';\nimport { User, Role } from './_models';\n\n@Component({ selector: 'app', templateUrl: 'app.component.html' })\nexport class AppComponent {\n    currentUser: UserModel;\n\n    constructor(\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        this.authenticationService.currentUser.subscribe(x => this.currentUser = x);\n    }\n\n    get isAdmin() {\n        return this.currentUser && this.currentUser.role === Role.Admin as keyof typeof Role;\n    }\n\n    logout() {\n        this.authenticationService.logout();\n        this.router.navigate(['/login']);\n    }\n}","<!-- nav -->\n<nav class=\"navbar navbar-expand navbar-dark bg-dark d-flex justify-content-between\"\n     *ngIf=\"currentUser\">\n   <div class=\"navbar-nav\">\n      <a class=\"nav-item nav-link\"\n         routerLink=\"/\"\n         *ngIf=\"!isAdmin\">Home</a>\n      <a class=\"nav-item nav-link\"\n         routerLink=\"/admin\"\n         *ngIf=\"isAdmin\">Home</a>\n      <a class=\"nav-item nav-link\"\n         (click)=\"logout()\">Logout</a>\n   </div>\n   <a class=\"mr-3\"\n      href=\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\"\n      target=\"_blank\">\n      <button type=\"button\"\n              class=\"btn btn-warning px-4\">\n         Δώρησε\n      </button>\n   </a>\n</nav>\n\n<!-- main app container -->\n<div class=\"container\">\n   <router-outlet></router-outlet>\n</div>\n\n<!-- credits -->\n<footer class=\"footer mt-5\">\n   <div class=\"container d-flex justify-content-between\">\n      <a href=\"#\"\n         target=\"_top\">Hellas COVID19 3D Printing Inventory</a>\n      <a href=\"https://visitagiasos.gr\"\n         target=\"_blank\">A donation by VisitAgiasos.gr</a>\n   </div>\n</footer>","import { RouterModule } from '@angular/router';\nimport { ListViewComponent } from './_helpers/list-view/list-view.component';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { appRoutingModule } from './app.routing';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { JwtInterceptor, ErrorInterceptor, BACKOFFICE_API_BASE_URL } from './_helpers';\nimport { JwBootstrapSwitchNg2Module } from 'jw-bootstrap-switch-ng2';\n\nimport { HomeComponent } from './home';\nimport { AdminComponent } from './admin';\nimport { LoginComponent } from './login';\nimport { RegisterComponent } from './register';\nimport { ShipmentComponent } from './shipment';\nimport { UsersComponent } from './admin/users/users.component';\nimport { ViewComponent } from './admin/users/view/view.component';\nimport { ShipmentsComponent } from './admin/shipments/shipments.component';\nimport { FilamentComponent } from './admin/filament/filament.component';\nimport { ProfileComponent } from './home/profile/profile.component';\nimport { environment } from 'src/environments/environment';\n\n\n\n@NgModule({\n    imports: [\n        BrowserModule,\n        ReactiveFormsModule,\n        RouterModule,\n        HttpClientModule,\n        appRoutingModule,\n        FormsModule,\n        JwBootstrapSwitchNg2Module,\n        NgxDatatableModule\n    ],\n    declarations: [\n        AppComponent,\n        HomeComponent,\n        AdminComponent,\n        LoginComponent,\n        RegisterComponent,\n        ShipmentComponent,\n        ListViewComponent,\n        UsersComponent,\n        ViewComponent,\n        ShipmentsComponent,\n        FilamentComponent,\n        ProfileComponent\n    ],\n    providers: [\n        { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\n        { provide: BACKOFFICE_API_BASE_URL, useFactory: () => environment.apiUrl },\n        { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true },\n    ],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule { }\n","import { ProfileComponent } from './home/profile/profile.component';\nimport { FilamentComponent } from './admin/filament/filament.component';\nimport { ShipmentsComponent } from './admin/shipments/shipments.component';\nimport { ViewComponent } from './admin/users/view/view.component';\nimport { UsersComponent } from './admin/users/users.component';\nimport { ShipmentComponent } from './shipment/shipment.component';\nimport { RegisterComponent } from './register/register.component';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeComponent } from './home';\nimport { AdminComponent } from './admin';\nimport { LoginComponent } from './login';\nimport { AuthGuard } from './_helpers/auth.guard';\nimport { Role } from './_models';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'profile',\n        component: ProfileComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.User] }\n    },\n    {\n        path: 'admin',\n        component: AdminComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/users',\n        component: UsersComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/filament',\n        component: FilamentComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/shipments',\n        component: ShipmentsComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'admin/users/:id/view',\n        component: ViewComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.Admin] }\n    },\n    {\n        path: 'login',\n        component: LoginComponent\n    },\n    {\n        path: 'register',\n        component: RegisterComponent\n    },\n    {\n        path: 'shipments',\n        component: ShipmentComponent,\n        canActivate: [AuthGuard],\n        data: { roles: [Role.User] }\n    },\n\n    // otherwise redirect to home\n    { path: '**', redirectTo: '' }\n];\n\nexport const appRoutingModule = RouterModule.forRoot(routes);\n","import { UserModel, Shipment } from './../_helpers/backend';\nimport { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { first } from 'rxjs/operators';\n\nimport { User } from '@app/_models';\nimport { UserService, AuthenticationService, ShipmentService } from '@app/_services';\nimport { TableColumn } from '@swimlane/ngx-datatable';\n\n@Component({ templateUrl: 'home.component.html' })\nexport class HomeComponent implements OnInit {\n    @ViewChild('deliveryTemplate', { static: true }) private _deliveryTemplate: TemplateRef<HTMLElement>;\n    @ViewChild('dateTemplate', { static: true }) private _dateTemplate: TemplateRef<HTMLElement>;\n    loading = false;\n    currentUser: UserModel = new UserModel();\n    shipments: Shipment[] = new Array<Shipment>();\n    columns: TableColumn[] = [];\n\n    constructor(\n        private userService: UserService,\n        private shipmentService: ShipmentService,\n        private authenticationService: AuthenticationService\n    ) {\n        this.currentUser = this.authenticationService.currentUserValue;\n    }\n\n    ngOnInit() {\n        this.loading = true;\n        this.columns = [\n            { prop: 'quantity', name: '#', draggable: false, canAutoResize: false, sortable: true, resizeable: false },\n            { prop: 'trackingNumber', name: 'Trancking Number', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            { prop: 'shippingCompany', name: 'Company', draggable: false, canAutoResize: true, sortable: true, resizeable: false },\n            {\n                prop: 'dateShipped', name: 'Date shipped', draggable: false, canAutoResize: true, sortable: true, resizeable: false,\n                cellTemplate: this._dateTemplate\n            },\n            {\n                prop: 'recieved', name: 'Status', draggable: false, canAutoResize: false, sortable: true, resizeable: false,\n                cellTemplate: this._deliveryTemplate\n            }\n        ];\n\n        this.shipments.map(x => x.dateShipped = new Date());\n        this.currentUser.latestShippedDate = new Date();\n    }\n\n    getShipments(): void {\n        this.userService.getById(this.currentUser.id).pipe(first()).subscribe((user: UserModel) => {\n            this.loading = false;\n            this.currentUser = user;\n            if (user.shippedQuantity === null) {\n                this.currentUser.shippedQuantity = 0;\n            }\n        });\n        this.shipmentService.getShipmentsByUser(this.currentUser.id).subscribe((shipments: Shipment[]) => {\n            this.shipments = shipments;\n        });\n    }\n}\n","<div class=\"card mt-4\">\n    <div class=\"card-header d-flex flex-row justify-content-between align-items-center\">\n        <div>\n            <h4>Το προφίλ μου</h4>\n        </div>\n        <div>\n            <a class=\"btn btn-secondary btn-sm text-light\"\n               role=\"button\"\n               [routerLink]=\"['/profile']\">\n                <span class=\"material-icons\">\n                    edit\n                </span>\n            </a>\n        </div>\n    </div>\n    <div class=\"card-body\">\n        <div *ngIf=\"loading\"\n             class=\"spinner-border spinner-border-sm\"></div>\n        <p *ngIf=\"currentUser\">\n            Γεία σου {{currentUser.firstName}}!\n        </p>\n        <p *ngIf=\"currentUser.needsFilament\"\n           class=\"text-success\">\n            Έχουμε ενημερωθεί για την έλλειψη σου σε filament και θα σου στείλουμε σύντομα!\n        </p>\n        <div class=\"col-12 mt-3\">\n            <hr />\n            <div>\n                <form>\n                    <div class=\"form-row col-6\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"activePrinter\">Σε λειτουργία: </label>\n                            <bSwitch name=\"activePrinter\"\n                                     class=\"pl-3\"\n                                     [switch-size]=\"'small'\"\n                                     [switch-readonly]=\"'readonly'\"\n                                     [(ngModel)]=\"currentUser.printerActive\"></bSwitch>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12 text-center\">\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"lastName\">Μοντέλο:</label>\n                            <div class=\"form-group col-md-12\">\n                                {{currentUser.printerModel}}\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"address\">Εκτεινόμενος χρόνος:</label>\n                            <div class=\"form-group col-md-12\">\n                                {{currentUser.batchRequiredTime}}\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"address\">Συνολική προσφορά:</label>\n                            <div class=\"form-group col-md-12\">\n                                {{currentUser.shippedQuantity}}\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-3\">\n                            <label for=\"address\">Τελευταία αποστολή:</label>\n                            <div class=\"form-group col-md-12\">\n                                {{ currentUser.latestShippedDate | date }}\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n            <hr />\n            <button class=\"btn btn-primary mb-3\"\n                    routerLink=\"/shipments\">\n                Καταγραφή Μετακίνησης Υλικών\n            </button>\n            <div class=\"col-md-12\">\n                <h5 class=\"mt-2\"><span class=\"fa fa-clock-o ion-clock float-right\"></span>Πρόσφατη Δραστηριότητα</h5>\n                <app-list-view [clientSide]=\"true\"\n                               [columns]=\"columns\"\n                               [rows]=\"shipments\"\n                               [rowsPerPage]=\"2147483647\"\n                               [defaultSortField]=\"'dateShipped'\"\n                               [defaultSortDirection]=\"'Desc'\"\n                               [showFooter]=\"'false'\"\n                               [emptyMessage]=\"'Στείλε μας την κούτα σου με (30) μάσκες για 2kg PLA filament!'\"\n                               (search)=\"getShipments()\"\n                               #shipmentsList>\n                </app-list-view>\n                <ng-template let-row=\"row\"\n                             let-value=\"value\"\n                             #dateTemplate>\n                    {{ value | date }}\n                </ng-template>\n                <ng-template let-row=\"row\"\n                             let-value=\"value\"\n                             #deliveryTemplate>\n                    <span class=\"material-icons text-success\"\n                          *ngIf=\"row.recieved else notRecieved\">\n                        done\n                    </span>\n                    <ng-template #notRecieved>\n                        <span class=\"material-icons text-muted\">\n                            local_shipping\n                        </span>\n                    </ng-template>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>","export * from './home.component';","import { User } from './../../_models/user';\nimport { UpdateModel, UserModel } from './../../_helpers/backend';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { AuthenticationService, UserService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html'\n})\nexport class ProfileComponent implements OnInit {\n  updateForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  user: User = new User();\n  updatedUser = new UpdateModel();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _authenticationService: AuthenticationService,\n    private _userService: UserService\n  ) { }\n\n  ngOnInit() {\n    this.updateForm = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneNumber: ['', [Validators.required,\n      Validators.pattern(/^[0-9]{10,11}$/)]],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      address: ['', Validators.required],\n      printerModel: ['', Validators.required],\n      batchRequiredTime: [0, Validators.required],\n      printerActive: [true],\n      username: ['', Validators.required],\n      password: ['', [Validators.required,\n      Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]],\n      newPassword: ['', Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n\n    // get user details\n    this._userService.getById(this._authenticationService.currentUserValue.id).subscribe((user: User) => {\n      this.user = user;\n      this.f.firstName.setValue(user.firstName);\n      this.f.lastName.setValue(user.lastName);\n      this.f.phoneNumber.setValue(user.phoneNumber);\n      this.f.email.setValue(user.email);\n      this.f.address.setValue(user.address);\n      this.f.printerModel.setValue(this.user.printerModel);\n      this.f.batchRequiredTime.setValue(user.batchRequiredTime);\n      this.f.printerActive.setValue(user.printerActive);\n      this.f.username.setValue(user.username);\n    });\n  }\n\n  get f() { return this.updateForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this.updatedUser.firstName = this.f.firstName.value;\n    this.updatedUser.lastName = this.f.lastName.value;\n    this.updatedUser.phoneNumber = this.f.phoneNumber.value;\n    this.updatedUser.email = this.f.email.value;\n    this.updatedUser.address = this.f.address.value;\n    this.updatedUser.printerModel = this.f.printerModel.value;\n    this.updatedUser.batchRequiredTime = this.f.batchRequiredTime.value;\n    this.updatedUser.printerActive = this.f.printerActive.value;\n    this.updatedUser.password = this.f.password.value;\n    this.updatedUser.newPassword = this.f.newPassword.value;\n    this.updatedUser.username = this.f.username.value;\n    // stop here if form is invalid\n    if (this.updateForm.invalid) {\n      Object.keys(this.updateForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.updateForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n\n    this._userService.update(this._authenticationService.currentUserValue.id, this.updatedUser)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        (error) => {\n          if (error === 'Bad Request') {\n            this.error = 'Incorrect password';\n          } else {\n            this.error = error;\n          }\n          this.loading = false;\n        });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","<div class=\"card mt-4\">\n    <h4 class=\"card-header\">Επεξεργασία Προφίλ</h4>\n    <div class=\"card-body\">\n        <form [formGroup]=\"updateForm\"\n              (ngSubmit)=\"onSubmit()\">\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"firstName\">Όνομα*</label>\n                    <input type=\"text\"\n                           formControlName=\"firstName\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                    <div *ngIf=\"submitted && f.firstName.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.firstName.errors.required\">Το Όνομα είναι απαραίτητο</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"lastName\">Επίθετο*</label>\n                    <input type=\"text\"\n                           formControlName=\"lastName\"\n                           [(ngModel)]=\"user.lastName\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                    <div *ngIf=\"submitted && f.lastName.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.lastName.errors.required\">Το Επίθετο είναι απαραίτητο</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"email\">Email*</label>\n                    <input type=\"email\"\n                           formControlName=\"email\"\n                           class=\"form-control\"\n                           [(ngModel)]=\"user.email\"\n                           required\n                           [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                    <div *ngIf=\"submitted && f.email.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.email.errors.required\">Το Email είναι απαραίτητο</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"phoneNumber\">Τηλέφωνο*</label>\n                    <input type=\"tel\"\n                           placeholder=\"6934567891\"\n                           formControlName=\"phoneNumber\"\n                           [(ngModel)]=\"user.phoneNumber\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\" />\n                    <div *ngIf=\"submitted && f.phoneNumber.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.phoneNumber.errors.required\">Το τηλέφωνο είναι απαραίτητο</div>\n                    </div>\n                </div>\n            </div>\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-12\">\n                    <label for=\"address\">Διεύθυνση αποστολής νέου χορηγούμενου υλικού*</label>\n                    <textarea formControlName=\"address\"\n                              name=\"address\"\n                              rows=\"4\"\n                              [(ngModel)]=\"user.address\"\n                              class=\"form-control\"\n                              [ngClass]=\"{ 'is-invalid': submitted && f.address.errors }\">\n                </textarea>\n                    <div *ngIf=\"submitted && f.address.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.address.errors.required\">Η Περιοχή είναι απαραίτητη</div>\n                    </div>\n                </div>\n            </div>\n            <hr />\n            <div class=\"form-row col-12 mb-4\">\n                <div class=\"form-check-inline col-md-12\">\n                    <label for=\"printerActive\"\n                           class=\"form-check-label pr-5\">Είναι ο εκτυπωτής λειτουργικός?*</label>\n                    <bSwitch name=\"printerActive\"\n                             [switch-animate]=\"'animate'\"\n                             [switch-size]=\"'small'\"\n                             [switch-on-text]=\"'ΝΑΙ'\"\n                             [switch-off-text]=\"'ΟΧΙ'\"\n                             [(ngModel)]=\"user.printerActive\"\n                             class=\"form-check-input\"\n                             id=\"printerActive\"\n                             formControlName=\"printerActive\"></bSwitch>\n                </div>\n            </div>\n            <div class=\"form-row col-12 align-items-baseline\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"printerModel\">Μάρκα 3D Printer*</label>\n                    <input type=\"text\"\n                           formControlName=\"printerModel\"\n                           [(ngModel)]=\"user.printerModel\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.printerModel.errors }\" />\n                    <div *ngIf=\"submitted && f.printerModel.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.printerModel.errors.required\">Η Μάρκα 3D Printer είναι απαραίτητη</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"batchRequiredTime\">Εκτεινόμενος χρόνος εκτύπωσης 1 μάσκας (λεπτά)</label>\n                    <input type=\"number\"\n                           min=0\n                           [(ngModel)]=\"user.batchRequiredTime\"\n                           name=\"batchRequiredTime\"\n                           id=\"batchRequiredTime\"\n                           formControlName=\"batchRequiredTime\"\n                           class=\"form-control without\" />\n                </div>\n            </div>\n            <hr />\n            <div class=\"form-row col-12\">\n                <div class=\"form-group col-md-6 mb-0\">\n                    <label for=\"newPassword\">Νέος κωδικός</label>\n                    <input type=\"password\"\n                           formControlName=\"newPassword\"\n                           [(ngModel)]=\"updatedUser.newPassword\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.newPassword.errors }\"\n                           aria-describedby=\"newPasswordHelpBlock\" />\n                </div>\n                <small id=\"newPasswordHelpBlock\"\n                       class=\"form-text text-muted pb-4 mt-2\">\n                    Αφίστε το κενό αν δεν θέλετε να αλλάξετε τον κωδικό σας. Ο κωδικός σας πρέπει να έχει τουλάχιστον 4 χαρακτήρες, ένα κεφαλαίο, ένα μικρό γράμμα και έναν αριθμό.\n                </small>\n            </div>\n            <hr />\n            <div class=\"form-row col-12 mb-3\">\n                <div class=\"form-group col-md-6\">\n                    <label for=\"username\">Username*</label>\n                    <input type=\"text\"\n                           formControlName=\"username\"\n                           [(ngModel)]=\"user.username\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                    <div *ngIf=\"submitted && f.username.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.username.errors.required\">To Username είναι απαραίτητο</div>\n                    </div>\n                </div>\n                <div class=\"form-group col-md-6\">\n                    <label for=\"password\">Παλιός κωδικός*</label>\n                    <input type=\"password\"\n                           formControlName=\"password\"\n                           [(ngModel)]=\"updatedUser.password\"\n                           class=\"form-control\"\n                           [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                           aria-describedby=\"passwordHelpBlock\" />\n                    <div *ngIf=\"submitted && f.password.errors\"\n                         class=\"invalid-feedback\">\n                        <div *ngIf=\"f.password.errors.required\">Ο Παλιός κωδικός είναι απαραίτητος</div>\n                    </div>\n                </div>\n            </div>\n            <button [disabled]=\"loading\"\n                    class=\"btn btn-info ml-3\"\n                    type=\"submit\">\n                <span *ngIf=\"loading\"\n                      class=\"spinner-border spinner-border-sm mr-1\"></span>\n                Ανανέωση\n            </button>\n            <button type=\"button\"\n                    (click)=\"goBack()\"\n                    class=\"btn btn-danger ml-3\">Πίσω\n            </button>\n            <div *ngIf=\"error || formError\"\n                 class=\"alert alert-danger mt-3 mb-0\">\n                <p>{{error}}</p>\n                <p>{{formError}}</p>\n            </div>\n        </form>\n    </div>\n</div>","export * from './login.component';","import { RegisterComponent } from './../register/register.component';\nimport { AuthenticateModel } from './../_helpers/backend';\nimport { User, Role } from '@app/_models';\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\n\nimport { AuthenticationService } from '@app/_services';\n\n@Component({ templateUrl: 'login.component.html' })\nexport class LoginComponent implements OnInit {\n    loginForm: FormGroup;\n    loading = false;\n    submitted = false;\n    returnUrl: string;\n    error = '';\n    private _user: AuthenticateModel = new AuthenticateModel();\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private route: ActivatedRoute,\n        private router: Router,\n        private authenticationService: AuthenticationService\n    ) {\n        // redirect to home if already logged in\n        if (this.authenticationService.currentUserValue) {\n            this.router.navigate(['/']);\n        }\n    }\n\n    ngOnInit() {\n        this.loginForm = this.formBuilder.group({\n            username: ['', Validators.required],\n            password: ['', Validators.required]\n        });\n\n        // get return url from route parameters or default to '/'\n        this.returnUrl = this.route.snapshot.queryParams['returnUrl'] || '/';\n    }\n\n    // convenience getter for easy access to form fields\n    get f() { return this.loginForm.controls; }\n\n    onSubmit() {\n        this.submitted = true;\n        this._user.password = this.f.password.value;\n        this._user.username = this.f.username.value;\n\n        // stop here if form is invalid\n        if (this.loginForm.invalid) {\n            return;\n        }\n\n        this.loading = true;\n        this.authenticationService.login(this._user)\n            .pipe(first())\n            .subscribe(\n                data => {\n                    localStorage.getItem('role') === Role.Admin ? this.returnUrl = '/' : this.returnUrl = '/admin';\n                    this.router.navigate([this.returnUrl]);\n                },\n                error => {\n                    if (error === 'Bad Request') {\n                        this.error = 'Username or password is incorrect';\n                    } else {\n                        this.error = error;\n                    }\n                    this.loading = false;\n                });\n    }\n\n    onRegister() {\n        this.router.navigate(['register']);\n    }\n}\n","<div class=\"container\">\n    <div class=\"col-md-6 offset-md-3 py-5\">\n        <div class=\"card\">\n            <h4 class=\"card-header text-center\">Hellas COVID19 3D Printing Inventory</h4>\n            <div class=\"card-body\">\n                <form [formGroup]=\"loginForm\"\n                      (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label for=\"username\">Username</label>\n                        <input type=\"text\"\n                               formControlName=\"username\"\n                               class=\"form-control\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                        <div *ngIf=\"submitted && f.username.errors\"\n                             class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Username is required</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"password\">Password</label>\n                        <input type=\"password\"\n                               formControlName=\"password\"\n                               class=\"form-control\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\" />\n                        <div *ngIf=\"submitted && f.password.errors\"\n                             class=\"invalid-feedback\">\n                            <div *ngIf=\"f.password.errors.required\">Password is required</div>\n                        </div>\n                    </div>\n                    <button [disabled]=\"loading\"\n                            class=\"btn btn-primary\"\n                            type=\"submit\">\n                        <span *ngIf=\"loading\"\n                              class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Login\n                    </button>\n                    <button class=\"btn btn-info ml-3\"\n                            (click)=\"onRegister()\"\n                            type=\"button\">\n                        Register\n                    </button>\n                    <div *ngIf=\"error\"\n                         class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-10 offset-md-1 text-center pt-4\">\n        <div>\n            <p>\n                Στήριξε και εσύ την προσπάθεια του 3DHUB και της ομάδας εθελοντών που σε συνεργασία με το υπουργείου Υγείας ανέλαβαν την παραγωγή χιλιάδων ασπίδων προστασίας για το νοσηλευτικό προσωπικό όλης της χώρας!\n            </p>\n        </div>\n        <a href=\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\"\n           target=\"_blank\">\n            <button type=\"button\"\n                    class=\"btn btn-warning\">Δώρησε\n            </button>\n        </a>\n    </div>\n</div>","export * from './register.component';","import { ActivatedRoute, Router } from '@angular/router';\nimport { RegisterModel } from './../_helpers/backend';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators, ValidationErrors } from '@angular/forms';\nimport { AuthenticationService } from '@app/_services';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  private _user: RegisterModel = new RegisterModel();\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _authenticationService: AuthenticationService\n  ) {\n    // redirect to home if already logged in\n    if (this._authenticationService.currentUserValue) {\n      this._router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.registerForm = this._formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      phoneNumber: ['', [Validators.required,\n      Validators.pattern(/^[0-9]{10,11}$/)]],\n      email: ['', Validators.compose([\n        Validators.required,\n        Validators.email\n      ])],\n      address: ['', Validators.required],\n      printerModel: ['', Validators.required],\n      // batchRequiredTime: ['', Validators.required],\n      printerActive: [true],\n      username: ['', Validators.required],\n      password: ['', [Validators.required,\n      Validators.pattern(/^(?=\\D*\\d)(?=[^a-z]*[a-z])(?=[^A-Z]*[A-Z]).{4,30}$/)]]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.registerForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this._user.firstName = this.f.firstName.value;\n    this._user.lastName = this.f.lastName.value;\n    this._user.phoneNumber = this.f.phoneNumber.value;\n    this._user.email = this.f.email.value;\n    this._user.address = this.f.address.value;\n    this._user.printerModel = this.f.printerModel.value;\n    // this._user.batchRequiredTime = this.f.batchRequiredTime.value;\n    this._user.printerActive = this.f.printerActive.value;\n    this._user.password = this.f.password.value;\n    this._user.username = this.f.username.value;\n\n    // stop here if form is invalid\n    if (this.registerForm.invalid) {\n      Object.keys(this.registerForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.registerForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n    this._authenticationService.register(this._user)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        error => {\n          if (error === 'Bad Request') {\n              this.error = 'Username is already taken';\n          } else {\n              this.error = error;\n          }\n          this.loading = false;\n      });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"col-md-6 offset-md-3 py-5\">\n        <div class=\"card\">\n            <h4 class=\"card-header text-center\">Εγγραφή</h4>\n            <div class=\"card-body\">\n                <form [formGroup]=\"registerForm\"\n                      (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"firstName\">Όνομα*</label>\n                            <input type=\"text\"\n                                   formControlName=\"firstName\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.firstName.errors }\" />\n                            <div *ngIf=\"submitted && f.firstName.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.firstName.errors.required\">Το Όνομα είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"lastName\">Επίθετο*</label>\n                            <input type=\"text\"\n                                   formControlName=\"lastName\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.lastName.errors }\" />\n                            <div *ngIf=\"submitted && f.lastName.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.lastName.errors.required\">Το Επίθετο είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"email\">Email*</label>\n                            <input type=\"email\"\n                                   formControlName=\"email\"\n                                   class=\"form-control\"\n                                   required\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.email.errors }\" />\n                            <div *ngIf=\"submitted && f.email.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.email.errors.required\">Το Email είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"phoneNumber\">Τηλέφωνο*</label>\n                            <input type=\"tel\"\n                                   placeholder=\"6934567891\"\n                                   formControlName=\"phoneNumber\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.phoneNumber.errors }\" />\n                            <div *ngIf=\"submitted && f.phoneNumber.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.phoneNumber.errors.required\">Το τηλέφωνο είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-group col-md-12\">\n                            <label for=\"address\">Διεύθυνση αποστολής νέου χορηγούμενου υλικού*</label>\n                            <textarea formControlName=\"address\"\n                                      class=\"form-control\"\n                                      [ngClass]=\"{ 'is-invalid': submitted && f.address.errors }\">\n                        </textarea>\n                            <div *ngIf=\"submitted && f.address.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.address.errors.required\">Η Περιοχή είναι απαραίτητη</div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row col-12 align-items-baseline\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"printerModel\">Μάρκα 3D Printer*</label>\n                            <input type=\"text\"\n                                   formControlName=\"printerModel\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.printerModel.errors }\" />\n                            <div *ngIf=\"submitted && f.printerModel.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.printerModel.errors.required\">Η Μάρκα 3D Printer είναι απαραίτητη</div>\n                            </div>\n                        </div>\n                        <!-- <div class=\"form-group col-md-6\">\n                            <label for=\"batchRequiredTime\">Εκτεινόμενος χρόνος εκτύπωσης 1 μάσκας</label>\n                            <input type=\"time\"\n                                   step=\"1\"\n                                   type=\"time\"\n                                   name=\"batchRequiredTime\"\n                                   id=\"batchRequiredTime\"\n                                   formControlName=\"batchRequiredTime\"\n                                   class=\"form-control without\" />\n                        </div> -->\n                    </div>\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-check-inline col-md-12\">\n\n                            <label for=\"printerActive\"\n                                   class=\"form-check-label pr-5\">Είναι ο εκτυπωτής λειτουργικός?*</label>\n                            <bSwitch name=\"printerActive\"\n                                     [switch-animate]=\"'animate'\"\n                                     [switch-size]=\"'small'\"\n                                     [switch-on-text]=\"'ΝΑΙ'\"\n                                     [switch-off-text]=\"'ΟΧΙ'\"\n                                     class=\"form-check-input\"\n                                     id=\"printerActive\"\n                                     formControlName=\"printerActive\"></bSwitch>\n                        </div>\n                    </div>\n                    <hr />\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"username\">Username*</label>\n                            <input type=\"text\"\n                                   formControlName=\"username\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\" />\n                            <div *ngIf=\"submitted && f.username.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.username.errors.required\">To Username είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6 mb-0\">\n                            <label for=\"password\">Password*</label>\n                            <input type=\"password\"\n                                   formControlName=\"password\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.password.errors }\"\n                                   aria-describedby=\"passwordHelpBlock\" />\n\n                            <div *ngIf=\"submitted && f.password.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.password.errors.required\">To Password είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                        <small id=\"passwordHelpBlock\"\n                               class=\"form-text text-muted pb-4 mt-0\">\n                            Ο κωδικός σας πρέπει να έχει τουλάχιστον 4 χαρακτήρες, ένα κεφαλαίο, ένα μικρό γράμμα και έναν αριθμό.\n                        </small>\n                    </div>\n                    <button [disabled]=\"loading\"\n                            class=\"btn btn-info ml-3\"\n                            type=\"submit\">\n                        <span *ngIf=\"loading\"\n                              class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Register\n                    </button>\n                    <button type=\"button\"\n                            (click)=\"goBack()\"\n                            class=\"btn btn-danger ml-3\">Πίσω\n                    </button>\n                    <div *ngIf=\"error || formError\"\n                         class=\"alert alert-danger mt-3 mb-0\">\n                        <p>{{error}}</p>\n                        <p>{{formError}}</p>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-10 offset-md-1 text-center pt-4\">\n        <div>\n            <p>\n                Στήριξε και εσύ την προσπάθεια του 3DHUB και της ομάδας εθελοντών που σε συνεργασία με το υπουργείου Υγείας ανέλαβαν παραγωγή χιλιάδων ασπίδων προστασίας για το νοσηλευτικό προσωπικό όλης της χώρας!\n            </p>\n        </div>\n        <a href=\"https://www.3dhub.gr/shop/consumables/covid19-1kg-pla/\"\n           target=\"_blank\">\n            <button type=\"button\"\n                    class=\"btn btn-warning\">Δώρησε\n            </button>\n        </a>\n    </div>\n</div>","export * from './shipment.component';\r\n","import { CreateShipmentModel } from './../_helpers/backend';\nimport { FormBuilder, FormGroup, Validators, ValidationErrors } from '@angular/forms';\nimport { ShipmentService } from '@app/_services';\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { first } from 'rxjs/operators';\nimport { Shipment } from '@app/_models';\n\n@Component({\n  selector: 'app-shipment',\n  templateUrl: './shipment.component.html'\n})\nexport class ShipmentComponent implements OnInit {\n  shipmentForm: FormGroup;\n  loading = false;\n  submitted = false;\n  returnUrl: string;\n  error = '';\n  formError = '';\n  private _shipment: CreateShipmentModel = new CreateShipmentModel();\n  private _currentDate;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _route: ActivatedRoute,\n    private _router: Router,\n    private _shipmentService: ShipmentService\n  ) { }\n\n  ngOnInit() {\n    this._currentDate = new Date().toISOString().substring(0, 10);\n\n    this.shipmentForm = this._formBuilder.group({\n      quantity: [30, [Validators.required, Validators.min(this._shipment.minQuantity)]],\n      dateShipped: [this._currentDate, Validators.required],\n      trackingNumber: ['', Validators.required],\n      shippingCompany: ['', Validators.required],\n      needsFilament: [false, Validators.required],\n      fileName: ['', Validators.required]\n    });\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n  }\n\n  get f() { return this.shipmentForm.controls; }\n\n  onSubmit() {\n    this.submitted = true;\n    this.error = '';\n    this.formError = '';\n    this._shipment.quantity = this.f.quantity.value;\n    this._shipment.dateShipped = new Date(this.f.dateShipped.value);\n    this._shipment.trackingNumber = this.f.trackingNumber.value;\n    this._shipment.shippingCompany = this.f.shippingCompany.value;\n    this._shipment.needsFilament = this.f.needsFilament.value;\n    this._shipment.fileName = this.f.fileName.value;\n\n    // stop here if form is invalid\n    if (this.shipmentForm.invalid) {\n      Object.keys(this.shipmentForm.controls).forEach(key => {\n\n        const controlErrors: ValidationErrors = this.shipmentForm.get(key).errors;\n        if (controlErrors != null) {\n          Object.keys(controlErrors).forEach(keyError => {\n            this.formError = key.charAt(0).toUpperCase() + key.slice(1) + ' is incorrect ( ' + keyError + ' )';\n          });\n        }\n      });\n      return;\n    }\n\n    this.loading = true;\n    this._shipmentService.createShipment(this._shipment)\n      .pipe(first())\n      .subscribe(\n        data => {\n          this._router.navigate([this.returnUrl]);\n        },\n        error => {\n          this.error = error;\n          this.loading = false;\n        });\n  }\n\n  goBack() {\n    this._router.navigate([this.returnUrl]);\n  }\n}\n","<div class=\"container\">\n    <div class=\"col-md-7 offset-md-2 py-5\">\n        <div class=\"card\">\n            <h4 class=\"card-header text-center\"> Καταγραφή Μετακίνησης Υλικών </h4>\n            <div class=\"card-body\">\n                <div class=\"alert alert-primary\"\n                     role=\"alert\">\n                    <div>\n                        <small>\n                            Μετά την ολοκλήρωση της εκτύπωσης των συνολικών τεμαχίων, η αποστολή γίνεται με <strong>Γενική Ταχυδρομική και με χρέωση παραλήπτη</strong> στην διεύθυνση:\n                        </small>\n                    </div>\n                    <div class=\"col text-center py-3\">\n                        <h6>3D HUB</h6>\n                        <h6>Ψαρών 20, Πειραιάς, Αθήνα, 18546</h6>\n                    </div>\n                </div>\n                <form [formGroup]=\"shipmentForm\"\n                      (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-row col-12 align-items-baseline my-4\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"quantity\">Ποσότητα (ελάχιστο 30)*</label>\n                            <input type=\"number\"\n                                   value=\"30\"\n                                   min=\"30\"\n                                   formControlName=\"quantity\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.quantity.errors }\" />\n                            <div *ngIf=\"submitted && f.quantity.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.quantity.errors.required\">Η ποσότητα είναι απαραίτητη</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"fileName\">Όνομα αρχείου*</label>\n                            <input type=\"text\"\n                                   formControlName=\"fileName\"\n                                   class=\"form-control\"\n                                   required\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.fileName.errors }\" />\n                            <div *ngIf=\"submitted && f.fileName.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.fileName.errors.required\">Το όνομα αρχείου εκτύπωσης είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12\">\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"shippingCompany\">Εταιρία Αποστολής*</label>\n                            <input type=\"text\"\n                                   formControlName=\"shippingCompany\"\n                                   class=\"form-control\"\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.shippingCompany.errors }\" />\n                            <div *ngIf=\"submitted && f.shippingCompany.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.shippingCompany.errors.required\">Η Εταιρία Αποστολής είναι απαραίτητη</div>\n                            </div>\n                        </div>\n                        <div class=\"form-group col-md-6\">\n                            <label for=\"dateShipped\">Ημερομηνία Αποστολής*</label>\n                            <input type=\"date\"\n                                   formControlName=\"dateShipped\"\n                                   class=\"form-control\"\n                                   required\n                                   [ngClass]=\"{ 'is-invalid': submitted && f.dateShipped.errors }\" />\n                            <div *ngIf=\"submitted && f.dateShipped.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.dateShipped.errors.required\">Η Ημερομηνία Αποστολής είναι απαραίτητη</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12 my-4\">\n                        <div class=\"form-group col-md-12\">\n                            <label for=\"trackingNumber\">\n                                Αριθμός φορτωτικής αποστολής εκτυπώσεων. Σε περίπτωση παράδοσης με άλλο τρόπο παρακαλώ κάντε περιγραφή*\n                            </label>\n                            <textarea formControlName=\"trackingNumber\"\n                                      rows=\"1\"\n                                      class=\"form-control\"\n                                      [ngClass]=\"{ 'is-invalid': submitted && f.trackingNumber.errors }\">\n                        </textarea>\n                            <div *ngIf=\"submitted && f.trackingNumber.errors\"\n                                 class=\"invalid-feedback\">\n                                <div *ngIf=\"f.trackingNumber.errors.required\">Το Tracking Number είναι απαραίτητο</div>\n                            </div>\n                        </div>\n                    </div>\n                    <div class=\"form-row col-12 mb-5\">\n                        <div class=\"form-check-inline col-md-12\">\n                            <label for=\"needsFilament\"\n                                   class=\"form-check-label pr-5\">Θέλεις να σου στείλουμε filament?</label>\n                            <bSwitch name=\"needsFilament\"\n                                     [switch-animate]=\"'animate'\"\n                                     [switch-size]=\"'small'\"\n                                     [switch-on-text]=\"'ΝΑΙ'\"\n                                     [switch-off-text]=\"'ΟΧΙ'\"\n                                     class=\"form-check-input\"\n                                     id=\"needsFilament\"\n                                     formControlName=\"needsFilament\"></bSwitch>\n                        </div>\n                    </div>\n                    <button [disabled]=\"loading\"\n                            class=\"btn btn-info ml-3\"\n                            type=\"submit\">\n                        <span *ngIf=\"loading\"\n                              class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Επιβεβαίωση\n                    </button>\n                    <button type=\"button\"\n                            (click)=\"goBack()\"\n                            class=\"btn btn-danger ml-3\">Πίσω\n                    </button>\n                    <div *ngIf=\"error || formError\"\n                         class=\"alert alert-danger mt-3 mb-0\">\n                        <p>{{error}}</p>\n                        <p>{{formError}}</p>\n                    </div>\n                </form>\n            </div>\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiUrl: 'http://localhost:4000',\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n    enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n    .catch(err => console.error(err));\n"]}